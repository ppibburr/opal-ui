/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $klass = $opal.klass;

  $opal.add_stubs(['$resolve', '$new', '$reject', '$attr_reader', '$!', '$==', '$<<', '$>>', '$exception?', '$resolved?', '$value', '$rejected?', '$===', '$error', '$realized?', '$raise', '$^', '$call', '$resolve!', '$exception!', '$reject!', '$class', '$object_id', '$+', '$inspect', '$act?', '$prev', '$concat', '$it', '$lambda', '$reverse', '$each', '$wait', '$then', '$to_proc', '$map', '$reduce', '$always', '$try', '$tap', '$all?', '$find']);
  return (function($base, $super) {
    function $Promise(){};
    var self = $Promise = $klass($base, $super, 'Promise', $Promise);

    var def = self._proto, $scope = self._scope, TMP_1, TMP_2, TMP_3, TMP_4;

    def.success = def.exception = def.realized = def.delayed = def.failure = def.error = def.prev = def.next = def.value = nil;
    $opal.defs(self, '$value', function(value) {
      var self = this;

      return self.$new().$resolve(value);
    });

    $opal.defs(self, '$error', function(value) {
      var self = this;

      return self.$new().$reject(value);
    });

    $opal.defs(self, '$when', function(promises) {
      var self = this;

      promises = $slice.call(arguments, 0);
      return $scope.When.$new(promises);
    });

    self.$attr_reader("value", "error", "prev", "next");

    def.$initialize = function(success, failure) {
      var self = this;

      if (success == null) {
        success = nil
      }
      if (failure == null) {
        failure = nil
      }
      self.success = success;
      self.failure = failure;
      self.realized = nil;
      self.exception = false;
      self.value = nil;
      self.error = nil;
      self.delayed = nil;
      self.prev = nil;
      return self.next = nil;
    };

    def['$act?'] = function() {
      var self = this;

      return self.success['$=='](nil)['$!']();
    };

    def['$exception?'] = function() {
      var self = this;

      return self.exception;
    };

    def['$realized?'] = function() {
      var self = this;

      return self.realized['$=='](nil)['$!']();
    };

    def['$resolved?'] = function() {
      var self = this;

      return self.realized['$==']("resolve");
    };

    def['$rejected?'] = function() {
      var self = this;

      return self.realized['$==']("reject");
    };

    def['$^'] = function(promise) {
      var self = this;

      promise['$<<'](self);
      self['$>>'](promise);
      return promise;
    };

    def['$<<'] = function(promise) {
      var self = this;

      self.prev = promise;
      return self;
    };

    def['$>>'] = function(promise) {
      var $a, $b, $c, $d, self = this;

      self.next = promise;
      if ((($a = self['$exception?']()) !== nil && (!$a._isBoolean || $a == true))) {
        promise.$reject(self.delayed)
      } else if ((($a = self['$resolved?']()) !== nil && (!$a._isBoolean || $a == true))) {
        promise.$resolve(((($a = self.delayed) !== false && $a !== nil) ? $a : self.$value()))
      } else if ((($a = ($b = self['$rejected?'](), $b !== false && $b !== nil ?(((($c = self.failure['$!']()) !== false && $c !== nil) ? $c : $scope.Promise['$===']((((($d = self.delayed) !== false && $d !== nil) ? $d : self.error))))) : $b)) !== nil && (!$a._isBoolean || $a == true))) {
        promise.$reject(((($a = self.delayed) !== false && $a !== nil) ? $a : self.$error()))};
      return self;
    };

    def.$resolve = function(value) {
      var $a, self = this, e = nil;

      if (value == null) {
        value = nil
      }
      if ((($a = self['$realized?']()) !== nil && (!$a._isBoolean || $a == true))) {
        self.$raise($scope.ArgumentError, "the promise has already been realized")};
      if ((($a = $scope.Promise['$==='](value)) !== nil && (!$a._isBoolean || $a == true))) {
        value['$<<'](self.prev);
        return value['$^'](self);};
      self.realized = "resolve";
      self.value = value;
      try {
      if ((($a = self.success) !== nil && (!$a._isBoolean || $a == true))) {
          value = self.success.$call(value)};
        self['$resolve!'](value);
      } catch ($err) {if ($opal.$rescue($err, [$scope.Exception])) {e = $err;
        self['$exception!'](e)
        }else { throw $err; }
      };
      return self;
    };

    def['$resolve!'] = function(value) {
      var $a, self = this;

      if ((($a = self.next) !== nil && (!$a._isBoolean || $a == true))) {
        return self.next.$resolve(value)
        } else {
        return self.delayed = value
      };
    };

    def.$reject = function(value) {
      var $a, self = this, e = nil;

      if (value == null) {
        value = nil
      }
      if ((($a = self['$realized?']()) !== nil && (!$a._isBoolean || $a == true))) {
        self.$raise($scope.ArgumentError, "the promise has already been realized")};
      if ((($a = $scope.Promise['$==='](value)) !== nil && (!$a._isBoolean || $a == true))) {
        value['$<<'](self.prev);
        return value['$^'](self);};
      self.realized = "reject";
      self.error = value;
      try {
      if ((($a = self.failure) !== nil && (!$a._isBoolean || $a == true))) {
          value = self.failure.$call(value);
          if ((($a = $scope.Promise['$==='](value)) !== nil && (!$a._isBoolean || $a == true))) {
            self['$reject!'](value)};
          } else {
          self['$reject!'](value)
        }
      } catch ($err) {if ($opal.$rescue($err, [$scope.Exception])) {e = $err;
        self['$exception!'](e)
        }else { throw $err; }
      };
      return self;
    };

    def['$reject!'] = function(value) {
      var $a, self = this;

      if ((($a = self.next) !== nil && (!$a._isBoolean || $a == true))) {
        return self.next.$reject(value)
        } else {
        return self.delayed = value
      };
    };

    def['$exception!'] = function(error) {
      var self = this;

      self.exception = true;
      return self['$reject!'](error);
    };

    def.$then = TMP_1 = function() {
      var self = this, $iter = TMP_1._p, block = $iter || nil;

      TMP_1._p = null;
      return self['$^']($scope.Promise.$new(block));
    };

    $opal.defn(self, '$do', def.$then);

    def.$fail = TMP_2 = function() {
      var self = this, $iter = TMP_2._p, block = $iter || nil;

      TMP_2._p = null;
      return self['$^']($scope.Promise.$new(nil, block));
    };

    $opal.defn(self, '$rescue', def.$fail);

    $opal.defn(self, '$catch', def.$fail);

    def.$always = TMP_3 = function() {
      var self = this, $iter = TMP_3._p, block = $iter || nil;

      TMP_3._p = null;
      return self['$^']($scope.Promise.$new(block, block));
    };

    $opal.defn(self, '$finally', def.$always);

    $opal.defn(self, '$ensure', def.$always);

    def.$trace = TMP_4 = function() {
      var self = this, $iter = TMP_4._p, block = $iter || nil;

      TMP_4._p = null;
      return self['$^']($scope.Trace.$new(block));
    };

    def.$inspect = function() {
      var $a, self = this, result = nil;

      result = "#<" + (self.$class()) + "(" + (self.$object_id()) + ")";
      if ((($a = self.next) !== nil && (!$a._isBoolean || $a == true))) {
        result = result['$+'](" >> " + (self.next.$inspect()))};
      if ((($a = self['$realized?']()) !== nil && (!$a._isBoolean || $a == true))) {
        result = result['$+'](": " + ((((($a = self.value) !== false && $a !== nil) ? $a : self.error)).$inspect()) + ">")
        } else {
        result = result['$+'](">")
      };
      return result;
    };

    (function($base, $super) {
      function $Trace(){};
      var self = $Trace = $klass($base, $super, 'Trace', $Trace);

      var def = self._proto, $scope = self._scope, TMP_6;

      $opal.defs(self, '$it', function(promise) {
        var $a, self = this, current = nil, prev = nil;

        if ((($a = promise['$realized?']()) !== nil && (!$a._isBoolean || $a == true))) {
          } else {
          self.$raise($scope.ArgumentError, "the promise hasn't been realized")
        };
        current = (function() {if ((($a = promise['$act?']()) !== nil && (!$a._isBoolean || $a == true))) {
          return [promise.$value()]
          } else {
          return []
        }; return nil; })();
        if ((($a = prev = promise.$prev()) !== nil && (!$a._isBoolean || $a == true))) {
          return current.$concat(self.$it(prev))
          } else {
          return current
        };
      });

      return (def.$initialize = TMP_6 = function(block) {
        var $a, $b, TMP_5, self = this, $iter = TMP_6._p, $yield = $iter || nil;

        TMP_6._p = null;
        return $opal.find_super_dispatcher(self, 'initialize', TMP_6, null).apply(self, [($a = ($b = self).$lambda, $a._p = (TMP_5 = function(){var self = TMP_5._s || this, $a;

        return ($a = block).$call.apply($a, [].concat($scope.Trace.$it(self).$reverse()))}, TMP_5._s = self, TMP_5), $a).call($b)]);
      }, nil) && 'initialize';
    })(self, self);

    return (function($base, $super) {
      function $When(){};
      var self = $When = $klass($base, $super, 'When', $When);

      var def = self._proto, $scope = self._scope, TMP_7, TMP_9, TMP_11, TMP_13, TMP_17;

      def.wait = nil;
      def.$initialize = TMP_7 = function(promises) {
        var $a, $b, TMP_8, self = this, $iter = TMP_7._p, $yield = $iter || nil;

        if (promises == null) {
          promises = []
        }
        TMP_7._p = null;
        $opal.find_super_dispatcher(self, 'initialize', TMP_7, null).apply(self, []);
        self.wait = [];
        return ($a = ($b = promises).$each, $a._p = (TMP_8 = function(promise){var self = TMP_8._s || this;
if (promise == null) promise = nil;
        return self.$wait(promise)}, TMP_8._s = self, TMP_8), $a).call($b);
      };

      def.$each = TMP_9 = function() {
        var $a, $b, TMP_10, self = this, $iter = TMP_9._p, block = $iter || nil;

        TMP_9._p = null;
        if (block !== false && block !== nil) {
          } else {
          self.$raise($scope.ArgumentError, "no block given")
        };
        return ($a = ($b = self).$then, $a._p = (TMP_10 = function(values){var self = TMP_10._s || this, $a, $b;
if (values == null) values = nil;
        return ($a = ($b = values).$each, $a._p = block.$to_proc(), $a).call($b)}, TMP_10._s = self, TMP_10), $a).call($b);
      };

      def.$collect = TMP_11 = function() {
        var $a, $b, TMP_12, self = this, $iter = TMP_11._p, block = $iter || nil;

        TMP_11._p = null;
        if (block !== false && block !== nil) {
          } else {
          self.$raise($scope.ArgumentError, "no block given")
        };
        return ($a = ($b = self).$then, $a._p = (TMP_12 = function(values){var self = TMP_12._s || this, $a, $b;
if (values == null) values = nil;
        return $scope.When.$new(($a = ($b = values).$map, $a._p = block.$to_proc(), $a).call($b))}, TMP_12._s = self, TMP_12), $a).call($b);
      };

      def.$inject = TMP_13 = function(args) {
        var $a, $b, TMP_14, self = this, $iter = TMP_13._p, block = $iter || nil;

        args = $slice.call(arguments, 0);
        TMP_13._p = null;
        return ($a = ($b = self).$then, $a._p = (TMP_14 = function(values){var self = TMP_14._s || this, $a, $b;
if (values == null) values = nil;
        return ($a = ($b = values).$reduce, $a._p = block.$to_proc(), $a).apply($b, [].concat(args))}, TMP_14._s = self, TMP_14), $a).call($b);
      };

      $opal.defn(self, '$map', def.$collect);

      $opal.defn(self, '$reduce', def.$inject);

      def.$wait = function(promise) {
        var $a, $b, TMP_15, self = this;

        if ((($a = $scope.Promise['$==='](promise)) !== nil && (!$a._isBoolean || $a == true))) {
          } else {
          promise = $scope.Promise.$value(promise)
        };
        if ((($a = promise['$act?']()) !== nil && (!$a._isBoolean || $a == true))) {
          promise = promise.$then()};
        self.wait['$<<'](promise);
        ($a = ($b = promise).$always, $a._p = (TMP_15 = function(){var self = TMP_15._s || this, $a;
          if (self.next == null) self.next = nil;

        if ((($a = self.next) !== nil && (!$a._isBoolean || $a == true))) {
            return self.$try()
            } else {
            return nil
          }}, TMP_15._s = self, TMP_15), $a).call($b);
        return self;
      };

      $opal.defn(self, '$and', def.$wait);

      def['$>>'] = TMP_17 = function() {var $zuper = $slice.call(arguments, 0);
        var $a, $b, TMP_16, self = this, $iter = TMP_17._p, $yield = $iter || nil;

        TMP_17._p = null;
        return ($a = ($b = $opal.find_super_dispatcher(self, '>>', TMP_17, $iter).apply(self, $zuper)).$tap, $a._p = (TMP_16 = function(){var self = TMP_16._s || this;

        return self.$try()}, TMP_16._s = self, TMP_16), $a).call($b);
      };

      return (def.$try = function() {
        var $a, $b, $c, $d, self = this, promise = nil;

        if ((($a = ($b = ($c = self.wait)['$all?'], $b._p = "realized?".$to_proc(), $b).call($c)) !== nil && (!$a._isBoolean || $a == true))) {
          if ((($a = promise = ($b = ($d = self.wait).$find, $b._p = "rejected?".$to_proc(), $b).call($d)) !== nil && (!$a._isBoolean || $a == true))) {
            return self.$reject(promise.$error())
            } else {
            return self.$resolve(($a = ($b = self.wait).$map, $a._p = "value".$to_proc(), $a).call($b))
          }
          } else {
          return nil
        };
      }, nil) && 'try';
    })(self, self);
  })(self, null)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass;

  $opal.add_stubs(['$include', '$attr_reader', '$to_n', '$[]', '$new']);
  return (function($base) {
    var self = $module($base, 'Browser');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $StyleObject(){};
        var self = $StyleObject = $klass($base, $super, 'StyleObject', $StyleObject);

        var def = self._proto, $scope = self._scope, TMP_1;

        def.context = nil;
        self.$include($scope.Native);

        self.$attr_reader("context");

        return (def.$initialize = TMP_1 = function(context) {
          var self = this, $iter = TMP_1._p, $yield = $iter || nil;

          TMP_1._p = null;
          self.context = context;
          return $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [self.context.$to_n()]);
        }, nil) && 'initialize';
      })(self, null);

      return (function($base, $super) {
        function $Style(){};
        var self = $Style = $klass($base, $super, 'Style', $Style);

        var def = self._proto, $scope = self._scope, TMP_2;

        def["native"] = nil;
        (function($base, $super) {
          function $Line(){};
          var self = $Line = $klass($base, $super, 'Line', $Line);

          var def = self._proto, $scope = self._scope;

          def["native"] = nil;
          self.$attr_reader("width", "cap", "join", "miter_limit");

          def['$width='] = function(value) {
            var self = this;

            return self["native"].lineWidth = self.width = value;
          };

          def['$cap='] = function(value) {
            var self = this;

            return self["native"].lineCap = self.cap = value;
          };

          def['$join='] = function(value) {
            var self = this;

            return self["native"].lineJoin = self.join = value;
          };

          return (def['$miter_limit='] = function(value) {
            var self = this;

            return self["native"].miterLimit = self.miter_limit = value;
          }, nil) && 'miter_limit=';
        })(self, $scope.StyleObject);

        (function($base, $super) {
          function $Text(){};
          var self = $Text = $klass($base, $super, 'Text', $Text);

          var def = self._proto, $scope = self._scope;

          def["native"] = nil;
          self.$attr_reader("font", "align", "baseline");

          def['$font='] = function(value) {
            var self = this;

            return self["native"].font = self.font = value;
          };

          def['$align='] = function(value) {
            var self = this;

            return self["native"].textAlign = self.align = value;
          };

          return (def['$baseline='] = function(value) {
            var self = this;

            return self["native"].textBaseline = self.baseline = value;
          }, nil) && 'baseline=';
        })(self, $scope.StyleObject);

        (function($base, $super) {
          function $Image(){};
          var self = $Image = $klass($base, $super, 'Image', $Image);

          var def = self._proto, $scope = self._scope;

          def["native"] = nil;
          self.$attr_reader("smooth");

          $opal.defn(self, '$smooth?', def.$smooth);

          def['$smooth!'] = function() {
            var self = this;

            return self["native"].mozImageSmoothingEnabled = self.smooth = true;
          };

          return (def['$no_smooth!'] = function() {
            var self = this;

            return self["native"].mozImageSmoothingEnabled = self.smooth = false;
          }, nil) && 'no_smooth!';
        })(self, $scope.StyleObject);

        (function($base, $super) {
          function $Shadow(){};
          var self = $Shadow = $klass($base, $super, 'Shadow', $Shadow);

          var def = self._proto, $scope = self._scope;

          def["native"] = nil;
          self.$attr_reader("offset", "blur", "color");

          def['$offset='] = function(value) {
            var self = this;

            self["native"].shadowOffsetX = value['$[]']("x");
            self["native"].shadowOffsetY = value['$[]']("y");
            return self.offset = value;
          };

          def['$blur='] = function(value) {
            var self = this;

            return self["native"].shadowBlur = self.blur = value;
          };

          return (def['$color='] = function(value) {
            var self = this;

            return self["native"].shadowColor = self.color = value;
          }, nil) && 'color=';
        })(self, $scope.StyleObject);

        self.$attr_reader("line", "text", "image", "shadow", "fill", "stroke", "alpha", "composite_operation");

        def.$initialize = TMP_2 = function(context) {
          var self = this, $iter = TMP_2._p, $yield = $iter || nil;

          TMP_2._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_2, null).apply(self, [context]);
          self.line = $scope.Line.$new(context);
          self.text = $scope.Text.$new(context);
          self.image = $scope.Image.$new(context);
          return self.shadow = $scope.Shadow.$new(context);
        };

        def['$fill='] = function(value) {
          var self = this;

          return self["native"].fillStyle = (self.fill = value).$to_n();
        };

        def['$stroke='] = function(value) {
          var self = this;

          return self["native"].strokeStyle = (self.stroke = value).$to_n();
        };

        def['$alpha='] = function(value) {
          var self = this;

          return self["native"].globalAlpha = self.alpha = value;
        };

        return (def['$composite_operation='] = function(value) {
          var self = this;

          return self["native"].globalCompositeOperation = self.composite_operation = value;
        }, nil) && 'composite_operation=';
      })(self, $scope.StyleObject);
    })(self, null)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass;

  $opal.add_stubs(['$include', '$attr_reader', '$to_n']);
  return (function($base) {
    var self = $module($base, 'Browser');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope;

      return (function($base, $super) {
        function $Text(){};
        var self = $Text = $klass($base, $super, 'Text', $Text);

        var def = self._proto, $scope = self._scope, TMP_1;

        def.context = def["native"] = nil;
        self.$include($scope.Native);

        self.$attr_reader("context");

        def.$initialize = TMP_1 = function(context) {
          var self = this, $iter = TMP_1._p, $yield = $iter || nil;

          TMP_1._p = null;
          self.context = context;
          return $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [self.context.$to_n()]);
        };

        def.$measure = function(text) {
          var self = this;

          return self["native"].measureText(text);
        };

        def.$fill = function(text, x, y, max_width) {
          var $a, self = this;

          if (x == null) {
            x = nil
          }
          if (y == null) {
            y = nil
          }
          if (max_width == null) {
            max_width = nil
          }
          ((($a = x) !== false && $a !== nil) ? $a : x = 0);
          ((($a = y) !== false && $a !== nil) ? $a : y = 0);
          if (max_width !== false && max_width !== nil) {
            self["native"].fillText(text, x, y, max_width);
            } else {
            self["native"].fillText(text, x, y);
          };
          return self.context;
        };

        return (def.$stroke = function(text, x, y, max_width) {
          var $a, self = this;

          if (x == null) {
            x = nil
          }
          if (y == null) {
            y = nil
          }
          if (max_width == null) {
            max_width = nil
          }
          ((($a = x) !== false && $a !== nil) ? $a : x = 0);
          ((($a = y) !== false && $a !== nil) ? $a : y = 0);
          if (max_width !== false && max_width !== nil) {
            self["native"].strokeText(text, x, y, max_width);
            } else {
            self["native"].strokeText(text, x, y);
          };
          return self.context;
        }, nil) && 'stroke';
      })(self, null)
    })(self, null)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass;

  $opal.add_stubs(['$allocate', '$instance_eval', '$to_a', '$to_n', '$include', '$attr_reader']);
  return (function($base) {
    var self = $module($base, 'Browser');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope;

      return (function($base, $super) {
        function $Data(){};
        var self = $Data = $klass($base, $super, 'Data', $Data);

        var def = self._proto, $scope = self._scope, TMP_2;

        def.canvas = def["native"] = nil;
        $opal.defs(self, '$create', function(canvas, width, height) {
          var $a, $b, TMP_1, self = this, data = nil;

          data = self.$allocate();
          ($a = ($b = data).$instance_eval, $a._p = (TMP_1 = function(){var self = TMP_1._s || this;

          self.canvas = canvas.$to_a();
            self.x = 0;
            self.y = 0;
            self.width = width;
            self.height = height;
            return self["native"] = canvas.$to_n().createImageData(width, height);}, TMP_1._s = self, TMP_1), $a).call($b);
          return data;
        });

        self.$include($scope.Native);

        self.$attr_reader("x", "y", "width", "height");

        def.$initialize = TMP_2 = function(canvas, x, y, width, height) {
          var self = this, $iter = TMP_2._p, $yield = $iter || nil;

          TMP_2._p = null;
          self.canvas = canvas.$to_n();
          self.x = x;
          self.y = y;
          self.width = width;
          self.height = height;
          return $opal.find_super_dispatcher(self, 'initialize', TMP_2, null).apply(self, [self.canvas.getImageData(x, y, width, height)]);
        };

        def.$length = function() {
          var self = this;

          return self["native"].data.length;
        };

        def['$[]'] = function(index) {
          var self = this;

          return self["native"].data[index];
        };

        def['$[]='] = function(index, value) {
          var self = this;

          return self["native"].data[index] = value;
        };

        def.$save = function(x, y) {
          var $a, self = this;

          if (x == null) {
            x = nil
          }
          if (y == null) {
            y = nil
          }
          ((($a = x) !== false && $a !== nil) ? $a : x = 0);
          ((($a = y) !== false && $a !== nil) ? $a : y = 0);
          return self.canvas.putImageData(self["native"], x, y);
        };

        def.$save_to = function(canvas, x, y) {
          var $a, self = this;

          if (x == null) {
            x = nil
          }
          if (y == null) {
            y = nil
          }
          ((($a = x) !== false && $a !== nil) ? $a : x = 0);
          ((($a = y) !== false && $a !== nil) ? $a : y = 0);
          return canvas.$to_n().putImageData(self["native"], x, y);
        };

        return $opal.defn(self, '$size', def.$length);
      })(self, null)
    })(self, null)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass;

  $opal.add_stubs(['$include', '$attr_reader', '$length', '$===', '$to_n', '$raise', '$instance_eval', '$to_proc']);
  return (function($base) {
    var self = $module($base, 'Browser');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope;

      return (function($base, $super) {
        function $Gradient(){};
        var self = $Gradient = $klass($base, $super, 'Gradient', $Gradient);

        var def = self._proto, $scope = self._scope, TMP_1;

        def.context = nil;
        self.$include($scope.Native);

        self.$attr_reader("context");

        def.$initialize = TMP_1 = function(context, args) {
          var $a, $b, self = this, $iter = TMP_1._p, block = $iter || nil, $case = nil;

          args = $slice.call(arguments, 1);
          TMP_1._p = null;
          self.context = context;
          $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [(function() {$case = args.$length();if ((4)['$===']($case)) {return self.context.$to_n().createLinearGradient.apply(self, args);}else if ((6)['$===']($case)) {return self.context.$to_n().createRadialGradient.apply(self, args);}else {return self.$raise($scope.ArgumentError, "don't know where to dispatch")}})()]);
          return ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
        };

        return (def.$add = function(position, color) {
          var self = this;

          self.context.$to_n().addColorStop(position, color);
          return self;
        }, nil) && 'add';
      })(self, null)
    })(self, null)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $gvars = $opal.gvars;

  $opal.add_stubs(['$include', '$attr_reader', '$===', '$first', '$shift', '$create_element', '$[]=', '$width', '$height', '$!', '$==', '$node_name', '$raise', '$to_n', '$new', '$draw_image', '$to_i', '$[]', '$append_to', '$on', '$resolve', '$DOM', '$to_proc', '$move_to', '$line_to', '$length', '$quadratic_curve_to', '$bezier_curve_to', '$element', '$is_a?', '$save', '$instance_eval', '$restore', '$path', '$for']);
  ;
  ;
  ;
  ;
  ;
  return (function($base) {
    var self = $module($base, 'Browser');

    var def = self._proto, $scope = self._scope, $a, $b, TMP_12;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope, TMP_1, TMP_3, TMP_4, TMP_5, TMP_6, TMP_7, TMP_8, TMP_9, TMP_10, TMP_11;

      def.element = def.image = def["native"] = nil;
      self.$include($scope.Native);

      self.$attr_reader("element", "style", "text");

      def.$initialize = TMP_1 = function(args) {
        var $a, self = this, $iter = TMP_1._p, $yield = $iter || nil, element = nil;
        if ($gvars.document == null) $gvars.document = nil;

        args = $slice.call(arguments, 0);
        TMP_1._p = null;
        if ((($a = ($scope.DOM)._scope.Element['$==='](args.$first())) !== nil && (!$a._isBoolean || $a == true))) {
          element = args.$shift();
          if ((($a = (($scope.DOM)._scope.Element)._scope.Image['$==='](element)) !== nil && (!$a._isBoolean || $a == true))) {
            self.image = element
            } else {
            self.element = element
          };
        } else if ((($a = $scope.Canvas['$==='](args.$first())) !== nil && (!$a._isBoolean || $a == true))) {
          self.image = args.$first()};
        if ((($a = self.element) !== nil && (!$a._isBoolean || $a == true))) {
          } else {
          self.element = $gvars.document.$create_element("canvas");
          if ((($a = self.image) !== nil && (!$a._isBoolean || $a == true))) {
            self.element['$[]=']("width", self.image.$width());
            self.element['$[]=']("height", self.image.$height());
            } else {
            self.element['$[]=']("width", args.$shift());
            self.element['$[]=']("height", args.$shift());
          };
        };
        if ((($a = self.element.$node_name()['$==']("CANVAS")['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
          self.$raise($scope.ArgumentError, "the element isn't a <canvas> element")};
        $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [self.element.$to_n().getContext('2d')]);
        self.style = $scope.Style.$new(self);
        self.text = $scope.Text.$new(self);
        if ((($a = self.image) !== nil && (!$a._isBoolean || $a == true))) {
          return self.$draw_image(self.image)
          } else {
          return nil
        };
      };

      def.$width = function() {
        var self = this;

        return self.element['$[]']("width").$to_i();
      };

      def.$height = function() {
        var self = this;

        return self.element['$[]']("height").$to_i();
      };

      def.$append_to = function(parent) {
        var self = this;

        return self.element.$append_to(parent);
      };

      def.$load = function(path) {
        var $a, $b, TMP_2, self = this, promise = nil, image = nil;
        if ($gvars.document == null) $gvars.document = nil;

        promise = $scope.Promise.$new();
        image = $gvars.document.$create_element("img");
        ($a = ($b = image).$on, $a._p = (TMP_2 = function(){var self = TMP_2._s || this;

        return promise.$resolve(image)}, TMP_2._s = self, TMP_2), $a).call($b, "load");
        image['$[]=']("src", path);
        return promise;
      };

      def.$data = function(x, y, width, height) {
        var $a, self = this;

        if (x == null) {
          x = nil
        }
        if (y == null) {
          y = nil
        }
        if (width == null) {
          width = nil
        }
        if (height == null) {
          height = nil
        }
        ((($a = x) !== false && $a !== nil) ? $a : x = 0);
        ((($a = y) !== false && $a !== nil) ? $a : y = 0);
        ((($a = width) !== false && $a !== nil) ? $a : width = self.$width());
        ((($a = height) !== false && $a !== nil) ? $a : height = self.$height());
        return $scope.Data.$new(self, x, y, width, height);
      };

      def.$pattern = function(image, type) {
        var self = this;

        if (type == null) {
          type = "repeat"
        }
        return self["native"].createPattern(self.$DOM(image).$to_n(), type);
      };

      def.$gradient = TMP_3 = function(args) {
        var $a, $b, self = this, $iter = TMP_3._p, block = $iter || nil;

        args = $slice.call(arguments, 0);
        TMP_3._p = null;
        return ($a = ($b = $scope.Gradient).$new, $a._p = block.$to_proc(), $a).apply($b, [self].concat(args));
      };

      def.$clear = function(x, y, width, height) {
        var $a, self = this;

        if (x == null) {
          x = nil
        }
        if (y == null) {
          y = nil
        }
        if (width == null) {
          width = nil
        }
        if (height == null) {
          height = nil
        }
        ((($a = x) !== false && $a !== nil) ? $a : x = 0);
        ((($a = y) !== false && $a !== nil) ? $a : y = 0);
        ((($a = width) !== false && $a !== nil) ? $a : width = self.$width());
        ((($a = height) !== false && $a !== nil) ? $a : height = self.$height());
        return self["native"].clearRect(x, y, width, height);
      };

      def.$begin = function() {
        var self = this;

        self["native"].beginPath();
        return self;
      };

      def.$close = function() {
        var self = this;

        self["native"].closePath();
        return self;
      };

      def.$save = function() {
        var self = this;

        self["native"].save();
        return self;
      };

      def.$restore = function() {
        var self = this;

        self["native"].restore();
        return self;
      };

      def.$move_to = function(x, y) {
        var self = this;

        self["native"].moveTo(x, y);
        return self;
      };

      $opal.defn(self, '$move', def.$move_to);

      def.$line_to = function(x, y) {
        var self = this;

        self["native"].lineTo(x, y);
        return self;
      };

      def.$line = function(x1, y1, x2, y2) {
        var self = this;

        self.$move_to(x1, y1);
        return self.$line_to(x2, y2);
      };

      def.$rect = function(x, y, width, height) {
        var self = this;

        self["native"].rect(x, y, width, height);
        return self;
      };

      def.$arc = function(x, y, radius, angle, clockwise) {
        var self = this;

        if (clockwise == null) {
          clockwise = false
        }
        self["native"].arc(x, y, radius, angle['$[]']("start"), angle['$[]']("end"), !clockwise);
        return self;
      };

      def.$quadratic_curve_to = function(cp1x, cp1y, x, y) {
        var self = this;

        self["native"].quadraticCurveTo(cp1x, cp1y, x, y);
        return self;
      };

      def.$bezier_curve_to = function(cp1x, cp1y, cp2x, cp2y, x, y) {
        var self = this;

        self["native"].bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);
        return self;
      };

      def.$curve_to = function(args) {
        var $a, $b, self = this, $case = nil;

        args = $slice.call(arguments, 0);
        $case = args.$length();if ((4)['$===']($case)) {($a = self).$quadratic_curve_to.apply($a, [].concat(args))}else if ((6)['$===']($case)) {($b = self).$bezier_curve_to.apply($b, [].concat(args))}else {self.$raise($scope.ArgumentError, "don't know where to dispatch")};
        return self;
      };

      def.$draw_image = function(image, args) {
        var $a, self = this, source = nil, destination = nil, $case = nil;

        args = $slice.call(arguments, 1);
        if ((($a = $scope.Canvas['$==='](image)) !== nil && (!$a._isBoolean || $a == true))) {
          image = image.$element()
          } else {
          image = self.$DOM(image)
        };
        if ((($a = args.$first()['$is_a?']($scope.Hash)) !== nil && (!$a._isBoolean || $a == true))) {
          $a = $opal.to_ary(args), source = ($a[0] == null ? nil : $a[0]), destination = ($a[1] == null ? nil : $a[1]);
          self["native"].drawImage(image.$to_n(), source['$[]']("x"), source['$[]']("y"), source['$[]']("width"), source['$[]']("height"), destination['$[]']("x"), destination['$[]']("y"), destination['$[]']("width"), destination['$[]']("height"));
          } else {
          $case = args.$length();if ((0)['$===']($case)) {self["native"].drawImage(image.$to_n(), 0, 0);}else if ((2)['$===']($case)) {self["native"].drawImage(image.$to_n(), args['$[]'](0), args['$[]'](1));}else if ((4)['$===']($case)) {self["native"].drawImage(image.$to_n(), args['$[]'](0), args['$[]'](1), args['$[]'](2), args['$[]'](3));}
        };
        return self;
      };

      def.$translate = TMP_4 = function(x, y) {
        var $a, $b, self = this, $iter = TMP_4._p, block = $iter || nil;

        TMP_4._p = null;
        if (block !== false && block !== nil) {
          self.$save();
          self["native"].translate(x, y);
          ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
          self.$restore();
          } else {
          self["native"].translate(x, y);
        };
        return self;
      };

      def.$rotate = TMP_5 = function(angle) {
        var $a, $b, self = this, $iter = TMP_5._p, block = $iter || nil;

        TMP_5._p = null;
        if (block !== false && block !== nil) {
          self.$save();
          self["native"].rotate(angle);
          ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
          self.$restore();
          } else {
          self["native"].rotate(angle);
        };
        return self;
      };

      def.$scale = TMP_6 = function(x, y) {
        var $a, $b, self = this, $iter = TMP_6._p, block = $iter || nil;

        TMP_6._p = null;
        if (block !== false && block !== nil) {
          self.$save();
          self["native"].scale(x, y);
          ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
          self.$restore();
          } else {
          self["native"].scale(x, y);
        };
        return self;
      };

      def.$transform = TMP_7 = function(m11, m12, m21, m22, dx, dy) {
        var $a, $b, self = this, $iter = TMP_7._p, block = $iter || nil;

        TMP_7._p = null;
        if (block !== false && block !== nil) {
          self.$save();
          self["native"].transform(m11, m12, m21, m22, dx, dy);
          ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
          self.$restore();
          } else {
          self["native"].transform(m11, m12, m21, m22, dx, dy);
        };
        return self;
      };

      def.$path = TMP_8 = function() {
        var $a, $b, self = this, $iter = TMP_8._p, block = $iter || nil;

        TMP_8._p = null;
        self["native"].beginPath();
        ($a = ($b = self).$instance_eval, $a._p = block.$to_proc(), $a).call($b);
        self["native"].closePath();
        return self;
      };

      def.$fill = TMP_9 = function() {
        var $a, $b, self = this, $iter = TMP_9._p, block = $iter || nil;

        TMP_9._p = null;
        if (block !== false && block !== nil) {
          ($a = ($b = self).$path, $a._p = block.$to_proc(), $a).call($b)};
        self["native"].fill();
        return self;
      };

      def.$stroke = TMP_10 = function() {
        var $a, $b, self = this, $iter = TMP_10._p, block = $iter || nil;

        TMP_10._p = null;
        if (block !== false && block !== nil) {
          ($a = ($b = self).$path, $a._p = block.$to_proc(), $a).call($b)};
        self["native"].stroke();
        return self;
      };

      def.$clip = TMP_11 = function() {
        var $a, $b, self = this, $iter = TMP_11._p, block = $iter || nil;

        TMP_11._p = null;
        if (block !== false && block !== nil) {
          ($a = ($b = self).$path, $a._p = block.$to_proc(), $a).call($b)};
        self["native"].clip();
        return self;
      };

      def['$point_in_path?'] = function(x, y) {
        var self = this;

        return self["native"].isPointInPath(x, y);
      };

      return (def.$to_data = function(type) {
        var self = this;

        return self.element.$to_n().toDataUrl(type);
      }, nil) && 'to_data';
    })(self, null);

    ($a = ($b = (($scope.Browser)._scope.DOM)._scope.Builder).$for, $a._p = (TMP_12 = function(b, item){var self = TMP_12._s || this;
if (b == null) b = nil;if (item == null) item = nil;
    return item.$element()}, TMP_12._s = self, TMP_12), $a).call($b, $scope.Canvas);
    
  })(self);
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $gvars = $opal.gvars, $hash2 = $opal.hash2;

  $opal.add_stubs(['$append_to', '$CSS', '$head', '$attr_reader', '$==', '$body', '$new', '$each', '$[]=', '$style', '$element', '$add_class', '$is_a?', '$[]', '$each_pair', '$respond_to?', '$to_s', '$send', '$css', '$raise', '$remove_class', '$apply_hash', '$!', '$empty?', '$run', '$define_method', '$build', '$to_proc']);
  return (function($base) {
    var self = $module($base, 'UI');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Screen(){};
      var self = $Screen = $klass($base, $super, 'Screen', $Screen);

      var def = self._proto, $scope = self._scope, TMP_4;
      if ($gvars.document == null) $gvars.document = nil;

      self.$CSS("\n      .screen {\n        background-image: -webkit-gradient(\n          linear,\n          left top,\n          left bottom,\n          color-stop(0, #CD5AB7),\n          color-stop(1, #75C8F5)\n        );\n        background-image: -o-linear-gradient(bottom, #CD5AB7 0%, #75C8F5 100%);\n        background-image: -moz-linear-gradient(bottom, #CD5AB7 0%, #75C8F5 100%);\n        background-image: -webkit-linear-gradient(bottom, #CD5AB7 0%, #75C8F5 100%);\n        background-image: -ms-linear-gradient(bottom, #CD5AB7 0%, #75C8F5 100%);\n        background-image: linear-gradient(to bottom, #CD5AB7 0%, #75C8F5 100%);\n      }\n    ").$append_to($gvars.document.$head());

      self.$attr_reader("element");

      def.$initialize = function(target, opts) {
        var $a, $b, TMP_1, $c, TMP_2, self = this, w = nil;
        if ($gvars.document == null) $gvars.document = nil;

        opts = $slice.call(arguments, 1);
        if (target == null) {
          target = $gvars.document.$body()
        }
        if (target['$==']($gvars.document.$body())) {
          w = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Widget.$new();
          w.$append_to($gvars.document.$body());
          ($a = ($b = ["height", "min-height", "max-height"]).$each, $a._p = (TMP_1 = function(prop){var self = TMP_1._s || this;
            if ($gvars.document == null) $gvars.document = nil;
if (prop == null) prop = nil;
          w.$element().$style()['$[]='](prop, "100vh");
            return $gvars.document.$body().$style()['$[]='](prop, "100vh");}, TMP_1._s = self, TMP_1), $a).call($b);
          } else {
          w = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Widget.$new(nil, target, true)
        };
        w.$element().$add_class("root");
        w.$element().$add_class("screen");
        self.element = w.$element();
        if ((($a = opts['$[]'](0)['$is_a?']($scope.Hash)) !== nil && (!$a._isBoolean || $a == true))) {
          return ($a = ($c = opts['$[]'](0)).$each_pair, $a._p = (TMP_2 = function(k, v){var self = TMP_2._s || this, $a;
if (k == null) k = nil;if (v == null) v = nil;
          if ((($a = self['$respond_to?'](("" + k.$to_s() + "="))) !== nil && (!$a._isBoolean || $a == true))) {
              return self.$send(("" + k.$to_s() + "="), v)
              } else {
              return nil
            }}, TMP_2._s = self, TMP_2), $a).call($c)
          } else {
          return nil
        };
      };

      $opal.defs(self, '$create', function(target, opts) {
        var $a, self = this;
        if ($gvars.document == null) $gvars.document = nil;

        opts = $slice.call(arguments, 1);
        if (target == null) {
          target = $gvars.document.$body()
        }
        if ((($a = target['$is_a?']($scope.String)) !== nil && (!$a._isBoolean || $a == true))) {
          target = $gvars.document.$css(target)['$[]'](0);
          if (target !== false && target !== nil) {
            } else {
            self.$raise("No element matches `" + (target) + "`")
          };};
        return ($a = self).$new.apply($a, [target].concat(opts));
      });

      def['$min_height='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("min-height", v);
      };

      def['$height='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("height", v);
      };

      def['$max_height='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("max-height", v);
      };

      def['$min_width='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("min-width", v);
      };

      def['$width='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("width", v);
      };

      def['$max_width='] = function(v) {
        var self = this;

        return self.$element().$style()['$[]=']("max-width", v);
      };

      def['$bg_image='] = function(img) {
        var self = this;

        self.$element().$style()['$[]=']("background-image", img);
        return self;
      };

      def.$activate = function(window) {
        var $a, $b, TMP_3, self = this;

        ($a = ($b = self.$element().$css(".window")).$each, $a._p = (TMP_3 = function(w){var self = TMP_3._s || this;
if (w == null) w = nil;
        if (window.$element()['$=='](w)) {
            return w.$add_class("window-active")
            } else {
            return w.$remove_class("window-active")
          }}, TMP_3._s = self, TMP_3), $a).call($b);
        return self;
      };

      def.$apply = function(o) {
        var $a, self = this, opts = nil;

        o = $slice.call(arguments, 0);
        if ((($a = ((opts = o['$[]'](0)))['$is_a?']($scope.Hash)) !== nil && (!$a._isBoolean || $a == true))) {
          } else {
          self.$raise("Argument must be `Hash`")
        };
        return $scope.PBR.$apply_hash(opts, self);
      };

      return (def.$app = TMP_4 = function(o) {
        var $a, $b, $c, TMP_5, self = this, $iter = TMP_4._p, b = $iter || nil;

        o = $slice.call(arguments, 0);
        TMP_4._p = null;
        if ((($a = o['$empty?']()['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
          if ((($a = o['$[]'](0)['$is_a?']($scope.Hash)) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.$raise("Argument must be `Hash`")
          }
          } else {
          o['$[]='](0, $hash2([], {}))
        };
        o['$[]'](0)['$[]=']("screen", self);
        ($a = "class", $b = o['$[]'](0), ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, ((($scope.PBR)._scope.UI)._scope.Opal)._scope.App)));
        return ($a = ($b = o['$[]'](0)['$[]']("class")).$run, $a._p = (TMP_5 = function(app){var self = TMP_5._s || this, $a, $b, TMP_6, $c, app_singleton = nil;
if (app == null) app = nil;
        app_singleton = (function(self) {
            var $scope = self._scope, def = self._proto;

            return self
          })(app.$singleton_class());
          ($a = ($b = app_singleton).$define_method, $a._p = (TMP_6 = function(){var self = TMP_6._s || this;

          return self}, TMP_6._s = self, TMP_6), $a).call($b, "screen");
          return ($a = ($c = app).$build, $a._p = b.$to_proc(), $a).call($c);}, TMP_5._s = self, TMP_5), $a).call($b, o['$[]'](0));
      }, nil) && 'app';
    })(self, null)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $range = $opal.range, $gvars = $opal.gvars;

  $opal.add_stubs(['$new', '$rule', '$to_proc', '$push', '$==', '$length', '$is_a?', '$[]', '$[]=', '$+', '$class_name', '$end_with?', '$<<', '$__send__', '$instance_exec', '$builder', '$append_to', '$CSS', '$to_s', '$format', '$head']);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base) {
        var self = $module($base, 'Styler');

        var def = self._proto, $scope = self._scope, TMP_3;

        def.$builder = function() {
          var $a, $b, TMP_1, TMP_2, self = this;
          if (self.builder == null) self.builder = nil;

          if ((($a = self.builder) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.builder = ($a = ($b = ($scope.Paggio)._scope.CSS).$new, $a._p = (TMP_1 = function(){var self = TMP_1._s || this;

            return nil}, TMP_1._s = self, TMP_1), $a).call($b);
            $opal.defs(self.builder, '$rule', TMP_2 = function(o) {var $zuper = $slice.call(arguments, 0);
              var self = this, $iter = TMP_2._p, b = $iter || nil;

              o = $slice.call(arguments, 0);
              TMP_2._p = null;
              return $opal.find_super_dispatcher(self, 'rule', TMP_2, $iter, self._klass._proto).apply(self, $zuper);
            });
          };
          return self.builder;
        };

        def.$style = TMP_3 = function(what) {
          var $a, $b, TMP_4, self = this, $iter = TMP_3._p, b = $iter || nil;

          TMP_3._p = null;
          return ($a = ($b = self.$builder()).$rule, $a._p = (TMP_4 = function(r){var self = TMP_4._s || this, TMP_5, TMP_6, TMP_7, TMP_8, TMP_9, $a, $b;
if (r == null) r = nil;
          $opal.defs(r, '$active', TMP_5 = function(a) {
              var $a, $b, $c, self = this, $iter = TMP_5._p, k = $iter || nil;

              a = $slice.call(arguments, 0);
              TMP_5._p = null;
              return ($a = ($b = self).$rule, $a._p = k.$to_proc(), $a).apply($b, [].concat(($c = ["&:active"]).$push.apply($c, [].concat(a))));
            });
            $opal.defs(r, '$hover', TMP_6 = function(a) {
              var $a, $b, $c, self = this, $iter = TMP_6._p, k = $iter || nil;

              a = $slice.call(arguments, 0);
              TMP_6._p = null;
              return ($a = ($b = self).$rule, $a._p = k.$to_proc(), $a).apply($b, [].concat(($c = ["&:hover"]).$push.apply($c, [].concat(a))));
            });
            $opal.defs(r, '$focus', TMP_7 = function(a) {
              var $a, $b, $c, self = this, $iter = TMP_7._p, k = $iter || nil;

              a = $slice.call(arguments, 0);
              TMP_7._p = null;
              return ($a = ($b = self).$rule, $a._p = k.$to_proc(), $a).apply($b, [].concat(($c = ["&:focus"]).$push.apply($c, [].concat(a))));
            });
            $opal.defs(r, '$rule', TMP_8 = function(o) {var $zuper = $slice.call(arguments, 0);
              var $a, $b, self = this, $iter = TMP_8._p, k = $iter || nil;

              o = $slice.call(arguments, 0);
              TMP_8._p = null;
              if ((($a = (($b = o.$length()['$=='](1)) ? o['$[]'](0)['$is_a?'](((($scope.PBR)._scope.OpalUI)._scope.Widget)._scope.Interface) : $b)) !== nil && (!$a._isBoolean || $a == true))) {
                o['$[]='](0, "."['$+'](o['$[]'](0).$class_name()));
                return $opal.find_super_dispatcher(self, 'rule', TMP_8, $iter, self._klass._proto).apply(self, $zuper);
                } else {
                return $opal.find_super_dispatcher(self, 'rule', TMP_8, $iter, self._klass._proto).apply(self, $zuper)
              };
            });
            $opal.defs(r, '$method_missing', TMP_9 = function(m, o) {var $zuper = $slice.call(arguments, 0);
              var $a, $b, self = this, $iter = TMP_9._p, b = $iter || nil;

              o = $slice.call(arguments, 1);
              TMP_9._p = null;
              if ((($a = m['$end_with?']("!")) !== nil && (!$a._isBoolean || $a == true))) {
                m = m['$[]']($range(0, -2, false));
                if ((($a = o['$[]'](0)['$is_a?']($scope.Array)) !== nil && (!$a._isBoolean || $a == true))) {
                  o['$[]'](0)['$<<']("!important")
                  } else {
                  o['$<<']("!important")
                };
                return ($a = ($b = self).$__send__, $a._p = b.$to_proc(), $a).apply($b, [m].concat(o));};
              return $opal.find_super_dispatcher(self, 'method_missing', TMP_9, $iter, self._klass._proto).apply(self, $zuper);
            });
            return ($a = ($b = r).$instance_exec, $a._p = b.$to_proc(), $a).call($b);}, TMP_4._s = self, TMP_4), $a).call($b, "."['$+'](what.$class_name()));
        };

        def.$apply = function() {
          var self = this;
          if ($gvars.document == null) $gvars.document = nil;

          return self.$CSS(($scope.Paggio)._scope.Formatter.$new().$format(self.$builder()).$to_s()).$append_to($gvars.document.$head());
        };
                ;$opal.donate(self, ["$builder", "$style", "$apply"]);
      })(self)
      
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $klass = $opal.klass, $module = $opal.module, $gvars = $opal.gvars, $hash2 = $opal.hash2;

  $opal.add_stubs(['$is_a_?', '$find', '$index', '$ancestors', '$singleton_class', '$!', '$proc', '$instance_exec', '$to_proc', '$is_a?', '$shift', '$to_s', '$each', '$define_method', '$send', '$[]', '$instance_variable_get', '$instance_variable_set', '$alias_method', '$empty?', '$reverse', '$push', '$new', '$extend', '$style', '$apply', '$join', '$split', '$downcase', '$append_to', '$CSS', '$head', '$display', '$overflow', '$focus', '$outline', '$class_names', '$class_name', '$raise', '$allocate', '$attr_reader', '$create_element', '$upcase', '$tag_name', '$class', '$add_class', '$element', '$find_all', '$init', '$each_pair', '$respond_to?', '$inner_html=', '$get_set_chain', '$===', '$==', '$height', '$width', '$top', '$left', '$on', '$off', '$private']);
  (function($base, $super) {
    function $Module(){};
    var self = $Module = $klass($base, $super, 'Module', $Module);

    var def = self._proto, $scope = self._scope;

    $opal.defn(self, '$is_a_?', def['$is_a?']);

    return (def['$is_a?'] = function(mod) {
      var $a, $b, $c, $d, TMP_1, self = this;

      return ((($a = ((($b = self['$is_a_?'](mod)) !== false && $b !== nil) ? $b : ($c = ($d = self.$ancestors()).$find, $c._p = (TMP_1 = function(q){var self = TMP_1._s || this;
if (q == null) q = nil;
      return q.$singleton_class().$ancestors().$index(mod)}, TMP_1._s = self, TMP_1), $c).call($d))) !== false && $a !== nil) ? $a : self.$singleton_class().$ancestors().$index(mod)['$!']()['$!']());
    }, nil) && 'is_a?';
  })(self, null);
  (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'GetSetChain');

      var def = self._proto, $scope = self._scope, TMP_2;

      def.$get_set_chain = TMP_2 = function(o) {
        var $a, $b, TMP_3, $c, TMP_4, self = this, $iter = TMP_2._p, b = $iter || nil, dispatch = nil;

        o = $slice.call(arguments, 0);
        TMP_2._p = null;
        dispatch = ($a = ($b = self).$proc, $a._p = (TMP_3 = function(k, cb){var self = TMP_3._s || this, $a, $b, delagate = nil, handler = nil, q = nil;
if (k == null) k = nil;if (cb == null) cb = nil;
        delagate = nil;
          handler = nil;
          if (cb !== false && cb !== nil) {
            q = ($a = ($b = self).$instance_exec, $a._p = cb.$to_proc(), $a).call($b, k);
            if ((($a = q['$is_a?']($scope.Proc)) !== nil && (!$a._isBoolean || $a == true))) {
              handler = q
            } else if ((($a = q['$is_a?']($scope.Array)) !== nil && (!$a._isBoolean || $a == true))) {
              delagate = q.$shift()
              } else {
              delagate = q;
              q = [k, ("" + k.$to_s() + "=")];
            };};
          return [delagate, handler, q];;}, TMP_3._s = self, TMP_3), $a).call($b);
        return ($a = ($c = o).$each, $a._p = (TMP_4 = function(k){var self = TMP_4._s || this, $a, $b, TMP_5, $c, TMP_6, $d, TMP_7;
if (k == null) k = nil;
        ($a = ($b = self).$define_method, $a._p = (TMP_5 = function(){var self = TMP_5._s || this, $a, $b, $c, delagate = nil, handler = nil, q = nil;

          $a = $opal.to_ary(($b = ($c = self).$instance_exec, $b._p = dispatch.$to_proc(), $b).call($c, k, b)), delagate = ($a[0] == null ? nil : $a[0]), handler = ($a[1] == null ? nil : $a[1]), q = ($a[2] == null ? nil : $a[2]);
            if (delagate !== false && delagate !== nil) {
              return delagate.$send(q['$[]'](0));
            } else if (handler !== false && handler !== nil) {
              return ($a = ($b = self).$instance_exec, $a._p = handler.$to_proc(), $a).call($b, "get", k);
              } else {
              return self.$instance_variable_get("@" + (k))
            };}, TMP_5._s = self, TMP_5), $a).call($b, ("get_" + k.$to_s()));
          ($a = ($c = self).$define_method, $a._p = (TMP_6 = function(val){var self = TMP_6._s || this, $a, $b, $c, delagate = nil, handler = nil, q = nil;
if (val == null) val = nil;
          $a = $opal.to_ary(($b = ($c = self).$instance_exec, $b._p = dispatch.$to_proc(), $b).call($c, k, b)), delagate = ($a[0] == null ? nil : $a[0]), handler = ($a[1] == null ? nil : $a[1]), q = ($a[2] == null ? nil : $a[2]);
            if (delagate !== false && delagate !== nil) {
              return delagate.$send(q['$[]'](1), val);
            } else if (handler !== false && handler !== nil) {
              return ($a = ($b = self).$instance_exec, $a._p = handler.$to_proc(), $a).call($b, "set", k, val);
              } else {
              self.$instance_variable_set("@" + (k), val)
            };
            return true;;}, TMP_6._s = self, TMP_6), $a).call($c, ("set_" + k.$to_s()));
          self.$alias_method(("" + k.$to_s() + "="), ("set_" + k.$to_s()));
          return ($a = ($d = self).$define_method, $a._p = (TMP_7 = function(a){var self = TMP_7._s || this, $a;
a = $slice.call(arguments, 0);
          if ((($a = a['$empty?']()) !== nil && (!$a._isBoolean || $a == true))) {
              return self.$send(("get_" + k.$to_s()));};
            ($a = self).$send.apply($a, [("set_" + k.$to_s())].concat(a));
            return self;;}, TMP_7._s = self, TMP_7), $a).call($d, k);}, TMP_4._s = self, TMP_4), $a).call($c);
      }
            ;$opal.donate(self, ["$get_set_chain"]);
    })(self)
    
  })(self);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $Widget(){};
        var self = $Widget = $klass($base, $super, 'Widget', $Widget);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_10, $c, TMP_15, $d, TMP_16, $e, TMP_17, TMP_19, TMP_20, TMP_21;

        (function($base) {
          var self = $module($base, 'Interface');

          var def = self._proto, $scope = self._scope, TMP_8, TMP_9;

          $opal.defs(self, '$extended', function(cls) {
            var self = this;

            return cls.$send("extend", $scope.GetSetChain);
          });

          def.$style = TMP_8 = function(o) {
            var $a, $b, self = this, $iter = TMP_8._p, b = $iter || nil, styler = nil;

            o = $slice.call(arguments, 0);
            TMP_8._p = null;
            o = o.$reverse().$push(self).$reverse();
            styler = $scope.Class.$new();
            styler.$extend($scope.Styler);
            ($a = ($b = styler).$style, $a._p = b.$to_proc(), $a).apply($b, [].concat(o));
            return styler.$apply();
          };

          def.$class_name = function() {
            var $a, self = this;
            if (self.class_name == null) self.class_name = nil;

            return ((($a = self.class_name) !== false && $a !== nil) ? $a : self.class_name = self.$to_s().$downcase().$split("::").$join("-"));
          };

          def.$css = TMP_9 = function(o) {
            var $a, $b, self = this, $iter = TMP_9._p, b = $iter || nil;
            if ($gvars.document == null) $gvars.document = nil;

            o = $slice.call(arguments, 0);
            TMP_9._p = null;
            return ($a = ($b = self).$CSS, $a._p = b.$to_proc(), $a).apply($b, [].concat(o)).$append_to($gvars.document.$head());
          };
                    ;$opal.donate(self, ["$style", "$class_name", "$css"]);
        })(self);

        self.$extend((self)._scope.Interface);

        $opal.cdecl($scope, 'TAG_NAME', "DIV");

        ($a = ($b = self).$style, $a._p = (TMP_10 = function(){var self = TMP_10._s || this, $a, $b, TMP_11;

        self.$display("flex");
          self.$overflow("hidden");
          return ($a = ($b = self).$focus, $a._p = (TMP_11 = function(){var self = TMP_11._s || this;

          return self.$outline(0)}, TMP_11._s = self, TMP_11), $a).call($b);}, TMP_10._s = self, TMP_10), $a).call($b);

        $opal.defs(self, '$wrap', function(q) {
          var $a, self = this, ins = nil;

          if ((($a = q.$class_names().$index(self.$class_name())) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.$raise("Not a " + (self) + ": " + (q))
          };
          ins = self.$allocate();
          ins.$instance_variable_set("@element", q);
          return ins;
        });

        self.$attr_reader("element");

        def.$initialize = function(options) {
          var $a, $b, TMP_12, $c, $d, TMP_13, TMP_14, self = this;
          if ($gvars.document == null) $gvars.document = nil;

          if (options == null) {
            options = $hash2([], {})
          }
          self.element = $gvars.document.$create_element(self.$class().$tag_name().$to_s().$upcase());
          ($a = ($b = ($c = ($d = self.$class().$ancestors()).$find_all, $c._p = (TMP_13 = function(q){var self = TMP_13._s || this;
if (q == null) q = nil;
          return q['$is_a?']($scope.Interface)}, TMP_13._s = self, TMP_13), $c).call($d).$reverse()).$each, $a._p = (TMP_12 = function(q){var self = TMP_12._s || this;
if (q == null) q = nil;
          return self.$element().$add_class(q.$class_name())}, TMP_12._s = self, TMP_12), $a).call($b);
          self.$init();
          return ($a = ($c = options).$each_pair, $a._p = (TMP_14 = function(k, v){var self = TMP_14._s || this, $a;
if (k == null) k = nil;if (v == null) v = nil;
          if ((($a = self['$respond_to?'](("" + k.$to_s() + "="))) !== nil && (!$a._isBoolean || $a == true))) {
              return self.$send(("" + k.$to_s() + "="), v)
              } else {
              return nil
            }}, TMP_14._s = self, TMP_14), $a).call($c);
        };

        $opal.defs(self, '$tag_name', function() {
          var self = this;

          return (self)._scope.TAG_NAME;
        });

        def.$rener_icon = function(src) {
          var self = this, img = nil;

          self.$element()['$inner_html=']("");
          img = $scope.Image.$new(src);
          img.$append_to(self.$element());
          return img;
        };

        def.$render_html = function(html) {
          var self = this;

          return self.$element()['$inner_html='](html);
        };

        ($a = ($c = self).$get_set_chain, $a._p = (TMP_15 = function(){var self = TMP_15._s || this;

        return self.$element().$style();}, TMP_15._s = self, TMP_15), $a).call($c, "height", "width", "top", "left", "color");

        ($a = ($d = self).$get_set_chain, $a._p = (TMP_16 = function(){var self = TMP_16._s || this;

        return [self.$element(), "title", "title="]}, TMP_16._s = self, TMP_16), $a).call($d, "tooltip");

        ($a = ($e = self).$get_set_chain, $a._p = (TMP_17 = function(k){var self = TMP_17._s || this, $a, $b, TMP_18;
if (k == null) k = nil;
        return ($a = ($b = self).$proc, $a._p = (TMP_18 = function(t, m, o){var self = TMP_18._s || this, $case = nil, q = nil;
if (t == null) t = nil;if (m == null) m = nil;o = $slice.call(arguments, 2);
          return (function() {$case = t;if ("set"['$===']($case)) {q = o['$[]'](0);
            if (k['$==']("size")) {
              return self.$width(q['$[]'](0)).$height(q['$[]'](1))
              } else {
              return self.$left(q['$[]'](0)).$top(q['$[]'](1))
            };}else {if (k['$==']("size")) {
              return [self.$width(), self.$height()]
              } else {
              return [self.$top(), self.$left()]
            }}})()}, TMP_18._s = self, TMP_18), $a).call($b)}, TMP_17._s = self, TMP_17), $a).call($e, "size", "position");

        def.$on = TMP_19 = function(e) {
          var $a, $b, self = this, $iter = TMP_19._p, b = $iter || nil;

          TMP_19._p = null;
          return ($a = ($b = self.$element()).$on, $a._p = b.$to_proc(), $a).call($b, e);
        };

        def.$off = function(what) {
          var self = this;

          return self.$element().$off(what);
        };

        def.$on_keypress = TMP_20 = function() {
          var $a, $b, self = this, $iter = TMP_20._p, b = $iter || nil;

          TMP_20._p = null;
          return ($a = ($b = self).$on, $a._p = b.$to_proc(), $a).call($b, "keypress");
        };

        def.$on_click = TMP_21 = function() {
          var $a, $b, self = this, $iter = TMP_21._p, b = $iter || nil;

          TMP_21._p = null;
          return ($a = ($b = self).$on, $a._p = b.$to_proc(), $a).call($b, "click");
        };

        self.$private();

        return (def.$init = function() {
          var self = this;

          return nil;
        }, nil) && 'init';
      })(self, null)
      
    })(self)
    
  })(self);
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $gvars = $opal.gvars, $hash2 = $opal.hash2;

  $opal.add_stubs(['$attr_accessor', '$on', '$drag_start', '$drag_stop', '$body', '$event', '$window', '$to_i', '$x', '$client', '$y', '$-', '$[]', '$do_drag', '$style', '$element', '$drag_target', '$off', '$left=', '$top=']);
  return (function($base) {
    var self = $module($base, 'UI');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'Drag');

      var def = self._proto, $scope = self._scope;

      self.$attr_accessor("drag_target");

      def.$init_drag = function(target) {
        var $a, $b, TMP_1, self = this;

        if (target == null) {
          target = self
        }
        self.dragging = false;
        self.drag_target = target;
        ($a = ($b = self).$on, $a._p = (TMP_1 = function(e){var self = TMP_1._s || this, $a, $b, TMP_2, $c, TMP_3;
          if ($gvars.document == null) $gvars.document = nil;
if (e == null) e = nil;
        self.$drag_start(e);
          self.mouse_up_cb = ($a = ($b = $gvars.document.$body()).$on, $a._p = (TMP_2 = function(e){var self = TMP_2._s || this;
if (e == null) e = nil;
          return self.$drag_stop()}, TMP_2._s = self, TMP_2), $a).call($b, "mouseup");
          return self.mouse_move_cb = ($a = ($c = $gvars.document.$body()).$on, $a._p = (TMP_3 = function(evt){var self = TMP_3._s || this, $a, x = nil, y = nil, nx = nil, ny = nil;
            if (self.dragging == null) self.dragging = nil;
if (evt == null) evt = nil;
          if ((($a = self.dragging) !== nil && (!$a._isBoolean || $a == true))) {
              } else {
              return nil;
            };
            evt = ((($a = evt) !== false && $a !== nil) ? $a : self.$window().$event());
            x = evt.$client().$x().$to_i();
            y = evt.$client().$y().$to_i();
            nx = x['$-'](self.dragging['$[]']("diff_x"));
            ny = y['$-'](self.dragging['$[]']("diff_y"));
            return self.$do_drag(nx, ny);}, TMP_3._s = self, TMP_3), $a).call($c, "mousemove");}, TMP_1._s = self, TMP_1), $a).call($b, "mousedown");
        return self;
      };

      def.$drag_start = function(evt) {
        var $a, self = this, x = nil, y = nil, top = nil, left = nil;

        evt = ((($a = evt) !== false && $a !== nil) ? $a : self.$window().$event());
        x = evt.$client().$x().$to_i();
        y = evt.$client().$y().$to_i();
        top = self.$drag_target().$element().$style()['$[]']("top").$to_i();
        left = self.$drag_target().$element().$style()['$[]']("left").$to_i();
        return self.dragging = $hash2(["diff_x", "diff_y"], {"diff_x": x['$-'](left), "diff_y": y['$-'](top)});
      };

      def.$drag_stop = function() {
        var self = this;
        if (self.mouse_up_cb == null) self.mouse_up_cb = nil;
        if (self.mouse_move_cb == null) self.mouse_move_cb = nil;
        if ($gvars.document == null) $gvars.document = nil;

        self.dragging = false;
        $gvars.document.$body().$off(self.mouse_up_cb);
        return $gvars.document.$body().$off(self.mouse_move_cb);
      };

      def.$do_drag = function(x, y) {
        var self = this;

        self.$drag_target().$element().$style()['$left=']("" + (x) + "px");
        return self.$drag_target().$element().$style()['$top=']("" + (y) + "px");
      };
            ;$opal.donate(self, ["$init_drag", "$drag_start", "$drag_stop", "$do_drag"]);
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $gvars = $opal.gvars, $hash2 = $opal.hash2;

  $opal.add_stubs(['$append_to', '$create_element', '$element', '$get_set_chain', '$[]', '$css', '$extend', '$[]=', '$==', '$include', '$on', '$code', '$activate', '$!', '$focused?', '$focus', '$add_class', '$call', '$style', '$display', '$flex', '$rule', '$order', '$new', '$class', '$icon_pos', '$proc', '$===', '$wrap', '$index', '$raise', '$icon', '$content', '$white', '$select', '$class_names', '$manage_item', '$items', '$find', '$find_all', '$map', '$private', '$-', '$selection', '$<', '$+', '$>=', '$length', '$each', '$remove_class', '$on_activate']);
  (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $Label(){};
        var self = $Label = $klass($base, $super, 'Label', $Label);

        var def = self._proto, $scope = self._scope, TMP_1, $a, $b, TMP_2;

        def.$initialize = TMP_1 = function(o) {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_1._p, $yield = $iter || nil;
          if ($gvars.document == null) $gvars.document = nil;

          o = $slice.call(arguments, 0);
          TMP_1._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_1, $iter).apply(self, $zuper);
          return $gvars.document.$create_element("SPAN").$append_to(self.$element());
        };

        return ($a = ($b = self).$get_set_chain, $a._p = (TMP_2 = function(){var self = TMP_2._s || this;

        return [self.$element().$css("span")['$[]'](0), "inner_text", "inner_text="]}, TMP_2._s = self, TMP_2), $a).call($b, "text");
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Image(){};
        var self = $Image = $klass($base, $super, 'Image', $Image);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_3;

        $opal.cdecl($scope, 'TAG_NAME', "IMG");

        return ($a = ($b = self).$get_set_chain, $a._p = (TMP_3 = function(){var self = TMP_3._s || this;

        return self.$element()}, TMP_3._s = self, TMP_3), $a).call($b, "src");
      })(self, $scope.Widget);
      
    })(self)
    
  })(self);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base) {
        var self = $module($base, 'Focus');

        var def = self._proto, $scope = self._scope, TMP_4;

        self.$extend(($scope.Widget)._scope.Interface);

        def.$initialize = TMP_4 = function(o) {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_4._p, $yield = $iter || nil;

          o = $slice.call(arguments, 0);
          TMP_4._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_4, $iter).apply(self, $zuper);
          return self.$element()['$[]=']("tabindex", "0");
        };

        def.$focus = function() {
          var self = this;
          if (self.element == null) self.element = nil;

          return self.element.native.focus;
        };

        def['$focused?'] = function() {
          var self = this;

          return self.$element().$css(":focused")['$[]'](0)['$=='](self.$element());
        };
                ;$opal.donate(self, ["$initialize", "$focus", "$focused?"]);
      })(self);

      (function($base) {
        var self = $module($base, 'Activate');

        var def = self._proto, $scope = self._scope, TMP_5, TMP_7;

        self.$extend(($scope.Widget)._scope.Interface);

        self.$include($scope.Focus);

        def.$initialize = TMP_5 = function(o) {var $zuper = $slice.call(arguments, 0);
          var $a, $b, TMP_6, self = this, $iter = TMP_5._p, $yield = $iter || nil;

          o = $slice.call(arguments, 0);
          TMP_5._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_5, $iter).apply(self, $zuper);
          return ($a = ($b = self.$element()).$on, $a._p = (TMP_6 = function(e){var self = TMP_6._s || this, $a;
if (e == null) e = nil;
          if ((($a = (e.$code()['$=='](13))) !== nil && (!$a._isBoolean || $a == true))) {
              self.$activate();
              return false;;};
            return true;;}, TMP_6._s = self, TMP_6), $a).call($b, "keypress");
        };

        def.$activate = function() {
          var $a, self = this;
          if (self.on_activate_cb == null) self.on_activate_cb = nil;

          if ((($a = self['$focused?']()['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
            self.$focus()};
          self.$element().$add_class("pbr-opalui-active-activated");
          if ((($a = self.on_activate_cb) !== nil && (!$a._isBoolean || $a == true))) {
            return self.on_activate_cb.$call(self)
            } else {
            return nil
          };
        };

        def.$on_activate = TMP_7 = function() {
          var self = this, $iter = TMP_7._p, b = $iter || nil;

          TMP_7._p = null;
          return self.on_activate_cb = b;
        };
                ;$opal.donate(self, ["$initialize", "$activate", "$on_activate"]);
      })(self);

      (function($base) {
        var self = $module($base, 'Iconable');

        var def = self._proto, $scope = self._scope, $a, $b, TMP_8, TMP_10, $c, TMP_11, $d, TMP_13;

        self.$extend(($scope.Widget)._scope.Interface);

        ($a = ($b = self).$style, $a._p = (TMP_8 = function(){var self = TMP_8._s || this, $a, $b, TMP_9;

        self.$display("flex");
          self.$flex($hash2(["flow"], {"flow": ["column", "nowrap"]}));
          return ($a = ($b = self).$rule, $a._p = (TMP_9 = function(){var self = TMP_9._s || this;

          return self.$order(0)}, TMP_9._s = self, TMP_9), $a).call($b, ".pbr-opalui-iconable-icon-left");}, TMP_8._s = self, TMP_8), $a).call($b);

        def.$initialize = TMP_10 = function() {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_10._p, $yield = $iter || nil, img = nil, content = nil;

          TMP_10._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_10, $iter).apply(self, $zuper);
          img = $scope.Image.$new();
          img.$element().$append_to(self.$element());
          img.$element().$add_class("pbr-opalui-iconable-icon");
          content = (self.$class())._scope.CONTENT_CLASS.$new();
          content.$element().$append_to(self.$element());
          content.$element().$add_class("pbr-opalui-iconable-content");
          return self.$icon_pos("left");
        };

        ($a = ($c = self).$get_set_chain, $a._p = (TMP_11 = function(k, o){var self = TMP_11._s || this, $a, $b, TMP_12;
if (k == null) k = nil;o = $slice.call(arguments, 1);
        return ($a = ($b = self).$proc, $a._p = (TMP_12 = function(t, k, val){var self = TMP_12._s || this, $case = nil;
if (t == null) t = nil;if (k == null) k = nil;if (val == null) val = nil;
          return (function() {$case = t;if ("get"['$===']($case)) {return $scope.Image.$wrap(self.$element().$css(".pbr-opalui-iconable-icon")['$[]'](0))}else {return self.$element().$css(".pbr-opalui-iconable-icon")['$[]'](0)['$[]=']("src", val)}})()}, TMP_12._s = self, TMP_12), $a).call($b)}, TMP_11._s = self, TMP_11), $a).call($c, "icon");

        def.$content = function() {
          var self = this;

          return (self.$class())._scope.CONTENT_CLASS.$wrap(self.$element().$css(".pbr-opalui-iconable-content")['$[]'](0));
        };

        ($a = ($d = self).$get_set_chain, $a._p = (TMP_13 = function(){var self = TMP_13._s || this, $a, $b, TMP_14;

        return ($a = ($b = self).$proc, $a._p = (TMP_14 = function(t, k, val){var self = TMP_14._s || this, $a, $case = nil;
            if (self.icon_pos == null) self.icon_pos = nil;
if (t == null) t = nil;if (k == null) k = nil;if (val == null) val = nil;
          return (function() {$case = t;if ("get"['$===']($case)) {return self.icon_pos}else {if ((($a = ["left", "right"].$index(val)) !== nil && (!$a._isBoolean || $a == true))) {
              } else {
              self.$raise("Bad position for icon " + (val))
            };
            self.$icon().$element().$add_class("pbr-opalui-iconable-icon-" + (val));
            self.$content().$element().$add_class("pbr-opalui-iconable-content-" + (val));
            return self.icon_pos = val;}})()}, TMP_14._s = self, TMP_14), $a).call($b)}, TMP_13._s = self, TMP_13), $a).call($d, "icon_pos");
                ;$opal.donate(self, ["$initialize", "$content"]);
      })(self);

      (function($base) {
        var self = $module($base, 'Item');

        var def = self._proto, $scope = self._scope, $a, $b, TMP_15, TMP_16, TMP_18;

        self.$extend(($scope.Widget)._scope.Interface);

        self.$include($scope.Activate);

        ($a = ($b = self).$style, $a._p = (TMP_15 = function(){var self = TMP_15._s || this;

        return self.$white($hash2(["space"], {"space": "nowrap"}))}, TMP_15._s = self, TMP_15), $a).call($b);

        def.$initialize = TMP_16 = function(o) {var $zuper = $slice.call(arguments, 0);
          var $a, $b, TMP_17, self = this, $iter = TMP_16._p, $yield = $iter || nil;

          o = $slice.call(arguments, 0);
          TMP_16._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_16, $iter).apply(self, $zuper);
          return ($a = ($b = self.$element()).$on, $a._p = (TMP_17 = function(){var self = TMP_17._s || this;

          return self.$select()}, TMP_17._s = self, TMP_17), $a).call($b, "focus");
        };

        def.$select = function() {
          var $a, self = this;
          if (self.on_select_cb == null) self.on_select_cb = nil;

          if ((($a = self['$focused?']()) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.$focus()
          };
          self.$element().$add_class("pbr-opalui-item-selected");
          if ((($a = self.on_select_cb) !== nil && (!$a._isBoolean || $a == true))) {
            return self.on_select_cb.$call(self)
            } else {
            return nil
          };
        };

        def['$selected?'] = function() {
          var self = this;

          return self.$element().$class_names().$index("pbr-opalui-item-selected");
        };

        def.$on_select = TMP_18 = function() {
          var self = this, $iter = TMP_18._p, b = $iter || nil;

          TMP_18._p = null;
          return self.on_select_cb = b;
        };
                ;$opal.donate(self, ["$initialize", "$select", "$selected?", "$on_select"]);
      })(self);

      (function($base) {
        var self = $module($base, 'HasItems');

        var def = self._proto, $scope = self._scope, TMP_19, TMP_20, TMP_21;

        self.$extend(($scope.Widget)._scope.Interface);

        def.$on_item_activate = TMP_19 = function() {
          var self = this, $iter = TMP_19._p, b = $iter || nil;

          TMP_19._p = null;
          return self.on_item_activated_cb = b;
        };

        def.$on_item_select = TMP_20 = function() {
          var self = this, $iter = TMP_20._p, b = $iter || nil;

          TMP_20._p = null;
          return self.on_item_selected_cb = b;
        };

        def.$items = TMP_21 = function() {
          var self = this, $iter = TMP_21._p, b = $iter || nil;

          TMP_21._p = null;
          return self.$raise("NotImplemented");
        };

        def.$append_item = function(i) {
          var self = this;

          return self.$manage_item(i);
        };

        def.$activate = function(i) {
          var self = this;

          return self.$items()['$[]'](i).$activate();
        };

        def.$select = function(i) {
          var self = this;

          return self.$items()['$[]'](i).$select();
        };

        def.$active = function() {
          var $a, $b, TMP_22, self = this, act = nil;

          act = ($a = ($b = self.$items()).$find, $a._p = (TMP_22 = function(i){var self = TMP_22._s || this;
if (i == null) i = nil;
          return i.$element().$class_names().$index("pbr-opalui-active-activated")}, TMP_22._s = self, TMP_22), $a).call($b);
          return self.$items().$index(act);
        };

        def.$selection = function() {
          var $a, $b, TMP_23, $c, TMP_24, self = this, sel = nil;

          sel = ($a = ($b = self.$items()).$find_all, $a._p = (TMP_23 = function(i){var self = TMP_23._s || this;
if (i == null) i = nil;
          return i.$element().$class_names().$index("pbr-opalui-item-selected")}, TMP_23._s = self, TMP_23), $a).call($b);
          return ($a = ($c = sel).$map, $a._p = (TMP_24 = function(i){var self = TMP_24._s || this;
if (i == null) i = nil;
          return self.$items().$index(i)}, TMP_24._s = self, TMP_24), $a).call($c);
        };

        self.$private();

        def.$select_prior = function() {
          var self = this, i = nil;

          i = self.$selection()['$[]'](0)['$-'](1);
          if (i['$<'](0)) {
            return nil};
          return self.$items()['$[]'](i).$select();
        };

        def.$select_next = function() {
          var self = this, i = nil;

          i = self.$selection()['$[]'](0)['$+'](1);
          if (i['$>='](self.$items().$length())) {
            return nil};
          return self.$items()['$[]'](i).$select();
        };

        def.$manage_item = function(i) {
          var $a, $b, TMP_25, $c, TMP_27, self = this;

          ($a = ($b = i).$on, $a._p = (TMP_25 = function(){var self = TMP_25._s || this, $a, $b, TMP_26;
            if (self.on_item_selected_cb == null) self.on_item_selected_cb = nil;

          ($a = ($b = self.$items()).$each, $a._p = (TMP_26 = function(c){var self = TMP_26._s || this;
if (c == null) c = nil;
            if (c.$element()['$=='](i.$element())) {
                return nil;};
              return c.$element().$remove_class("pbr-opalui-item-selected");}, TMP_26._s = self, TMP_26), $a).call($b);
            if ((($a = self.on_item_selected_cb) !== nil && (!$a._isBoolean || $a == true))) {
              return self.on_item_selected_cb.$call(self, i)
              } else {
              return nil
            };}, TMP_25._s = self, TMP_25), $a).call($b, "focus");
          return ($a = ($c = i).$on_activate, $a._p = (TMP_27 = function(w){var self = TMP_27._s || this, $a, $b, TMP_28;
            if (self.on_item_activated_cb == null) self.on_item_activated_cb = nil;
if (w == null) w = nil;
          ($a = ($b = self.$items()).$each, $a._p = (TMP_28 = function(c){var self = TMP_28._s || this;
if (c == null) c = nil;
            if (c.$element()['$=='](i.$element())) {
                return nil;};
              return c.$element().$remove_class("pbr-opalui-active-activated");}, TMP_28._s = self, TMP_28), $a).call($b);
            if ((($a = self.on_item_activated_cb) !== nil && (!$a._isBoolean || $a == true))) {
              return self.on_item_activated_cb.$call(self, w)
              } else {
              return nil
            };}, TMP_27._s = self, TMP_27), $a).call($c);
        };
                ;$opal.donate(self, ["$on_item_activate", "$on_item_select", "$items", "$append_item", "$activate", "$select", "$active", "$selection", "$select_prior", "$select_next", "$manage_item"]);
      })(self);
      
    })(self)
    
  })(self);
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2, $gvars = $opal.gvars;

  $opal.add_stubs(['$style', '$display', '$flex', '$rule', '$element', '$append_to', '$container_element', '$each', '$==', '$add_class', '$+', '$class_name', '$reverse', '$ancestors', '$class', '$wrap', '$<<', '$css', '$children', '$to_proc', '$<', '$length', '$raise', '$inner_html=', '$[]', '$get_set_chain', '$position', '$resize', '$is_a?', '$!', '$body', '$extend', '$pad_child', '$last', '$-', '$to_i', '$to_s', '$get_padding_type', '$spacing', '$add', '$flex=', '$create_element', '$proc', '$===', '$get_spacing', '$iter', '$private', '$[]=', '$px', '$include', '$set_padding_type']);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $Container(){};
        var self = $Container = $klass($base, $super, 'Container', $Container);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_1, TMP_4, TMP_6;

        def.container_element = nil;
        ($a = ($b = self).$style, $a._p = (TMP_1 = function(){var self = TMP_1._s || this, $a, $b, TMP_2;

        self.$display("flex");
          self.$flex($hash2(["flow"], {"flow": ["column", "nowrap"]}));
          return ($a = ($b = self).$rule, $a._p = (TMP_2 = function(){var self = TMP_2._s || this;

          return self.$flex([1, 1, "auto"])}, TMP_2._s = self, TMP_2), $a).call($b, ".pbr-opalui-container-child");}, TMP_1._s = self, TMP_1), $a).call($b);

        def.$container_element = function() {
          var $a, self = this;

          return ((($a = self.container_element) !== false && $a !== nil) ? $a : self.$element());
        };

        def.$add = function(w) {
          var $a, $b, TMP_3, self = this, bool = nil;

          w.$element().$append_to(self.$container_element());
          bool = false;
          ($a = ($b = self.$class().$ancestors().$reverse()).$each, $a._p = (TMP_3 = function(q){var self = TMP_3._s || this;
if (q == null) q = nil;
          if (q['$==']($scope.Container)) {
              bool = true};
            if (bool !== false && bool !== nil) {
              } else {
              return nil;
            };
            return w.$element().$add_class(q.$class_name()['$+']("-child"));}, TMP_3._s = self, TMP_3), $a).call($b);
          return self;
        };

        def.$children = TMP_4 = function() {
          var $a, $b, TMP_5, self = this, $iter = TMP_4._p, b = $iter || nil, a = nil;

          TMP_4._p = null;
          a = [];
          ($a = ($b = self.$container_element().$css(".pbr-opalui-container-child")).$each, $a._p = (TMP_5 = function(c){var self = TMP_5._s || this, w = nil;
if (c == null) c = nil;
          w = $scope.Widget.$wrap(c);
            if (b !== false && b !== nil) {
              if ($opal.$yield1(b, w) === $breaker) return $breaker.$v};
            return a['$<<'](w);}, TMP_5._s = self, TMP_5), $a).call($b);
          return a;
        };

        return (def.$iter = TMP_6 = function() {
          var $a, $b, self = this, $iter = TMP_6._p, b = $iter || nil;

          TMP_6._p = null;
          ($a = ($b = self).$children, $a._p = b.$to_proc(), $a).call($b);
          return self;
        }, nil) && 'iter';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Bin(){};
        var self = $Bin = $klass($base, $super, 'Bin', $Bin);

        var def = self._proto, $scope = self._scope, TMP_7;

        return (def.$add = TMP_7 = function(w) {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_7._p, $yield = $iter || nil;

          TMP_7._p = null;
          if (self.$children().$length()['$<'](1)) {
            } else {
            self.$raise("`Bin#" + (self) + "` Already has child")
          };
          return $opal.find_super_dispatcher(self, 'add', TMP_7, $iter).apply(self, $zuper);
        }, nil) && 'add'
      })(self, $scope.Container);

      (function($base, $super) {
        function $Frame(){};
        var self = $Frame = $klass($base, $super, 'Frame', $Frame);

        var def = self._proto, $scope = self._scope, TMP_8, $a, $b, TMP_9;

        self.$css("\n       .pbr-opalui-frame-top-left {\n         flex:1 1 auto;\n         display:inline-block;\n         position:relative;\n         top:-4px;\n         left:-1px;         \n        }\n        \n       .pbr-opalui-frame-top-right {\n         flex:1 1 auto;\n         display:inline-block;\n         position:relative;\n         top:-4px;\n         left:1px;           \n        }        \n        \n        .pbr-opalui-frame-label {\n          position:relative;    \n          top:calc(-0.75em);\n          display:inline-block;\n          margin-left:3px;\n          margin-right:3px;\n        }\n        \n        .pbr-opalui-frame-inner {\n          display:flex;\n          flex:1 1 auto;\n          position:relative;\n          top:-0.5em;\n          padding:2px;\n        }        \n        \n        .pbr-opalui-frame {            \n            display:flex;\n            flex-flow:column nowrap;\n            padding-top:0.25em;\n            margin-top:0.5em;\n            overflow:initial;\n        }\n        \n        .pbr-opalui-frame-top {\n            display:flex;\n            flex-flow:row nowrap;\n        }\n");

        def.$init = TMP_8 = function() {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_8._p, $yield = $iter || nil;

          TMP_8._p = null;
          $opal.find_super_dispatcher(self, 'init', TMP_8, $iter).apply(self, $zuper);
          return self.$element()['$inner_html=']("\n          <div class=pbr-opalui-frame-top>\n            <span class=pbr-opalui-frame-top-left></span>\n            <div class=pbr-opalui-frame-label></div>\n            <span class=pbr-opalui-frame-top-right></span>\n          </div>\n          <div class=pbr-opalui-frame-inner></div>\n        ");
        };

        def.$container_element = function() {
          var self = this;

          return self.$element().$css(".pbr-opalui-frame-inner")['$[]'](0);
        };

        return ($a = ($b = self).$get_set_chain, $a._p = (TMP_9 = function(){var self = TMP_9._s || this;

        return [self.$element().$css(".pbr-opalui-frame-label")['$[]'](0), "inner_text", "inner_text="]}, TMP_9._s = self, TMP_9), $a).call($b, "label");
      })(self, $scope.Bin);

      (function($base, $super) {
        function $Window(){};
        var self = $Window = $klass($base, $super, 'Window', $Window);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_10, TMP_11;

        ($a = ($b = self).$style, $a._p = (TMP_10 = function(){var self = TMP_10._s || this;

        self.$position("absolute");
          return self.$resize("both");}, TMP_10._s = self, TMP_10), $a).call($b);

        return (def.$initialize = TMP_11 = function(parent, opts) {
          var $a, $b, self = this, $iter = TMP_11._p, $yield = $iter || nil;
          if ($gvars.document == null) $gvars.document = nil;

          opts = $slice.call(arguments, 1);
          if (parent == null) {
            parent = nil
          }
          TMP_11._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_11, null).apply(self, [].concat(opts));
          if ((($a = (($b = parent !== false && parent !== nil) ? parent['$is_a?']((($scope.Browser)._scope.DOM)._scope.Element) : $b)) !== nil && (!$a._isBoolean || $a == true))) {
            return self.$element().$append_to(parent)
          } else if ((($a = parent['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
            return self.$element().$append_to($gvars.document.$body())
            } else {
            return nil
          };
        }, nil) && 'initialize';
      })(self, $scope.Bin);

      (function($base) {
        var self = $module($base, 'Box');

        var def = self._proto, $scope = self._scope, $a, $b, TMP_12, TMP_16, $c, TMP_17;

        self.$extend(($scope.Widget)._scope.Interface);

        ($a = ($b = self).$style, $a._p = (TMP_12 = function(){var self = TMP_12._s || this, $a, $b, TMP_13, $c, TMP_14, $d, TMP_15;

        self.$display("flex");
          ($a = ($b = self).$rule, $a._p = (TMP_13 = function(){var self = TMP_13._s || this;

          return self.$flex([0, 1, "auto"])}, TMP_13._s = self, TMP_13), $a).call($b, ".pbr-opalui-box-child");
          ($a = ($c = self).$rule, $a._p = (TMP_14 = function(){var self = TMP_14._s || this;

          return self.$flex([1, 1, "auto", "!important"])}, TMP_14._s = self, TMP_14), $a).call($c, ".pbr-opalui-box-child-fill");
          return ($a = ($d = self).$rule, $a._p = (TMP_15 = function(){var self = TMP_15._s || this;

          return self.$flex([0.5, 1, "auto"])}, TMP_15._s = self, TMP_15), $a).call($d, ".pbr-opalui-box-padding");}, TMP_12._s = self, TMP_12), $a).call($b);

        def.$add = TMP_16 = function(w) {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_16._p, $yield = $iter || nil, c = nil;

          TMP_16._p = null;
          $opal.find_super_dispatcher(self, 'add', TMP_16, $iter).apply(self, $zuper);
          self.$pad_child(c = self.$children().$last(), c.$element().$style()['$[]'](("padding-" + self.$class().$get_padding_type()['$[]'](0).$to_s())).$to_i()['$-'](self.$spacing()));
          return self;
        };

        def.$pack_flex = function(w, amt, pad) {
          var self = this;

          if (amt == null) {
            amt = 1
          }
          if (pad == null) {
            pad = 0
          }
          self.$add(w);
          w.$element().$style()['$flex=']("" + (amt) + " 1 auto");
          self.$pad_child(w, pad);
          return self;
        };

        def.$pack_start = function(w, expand, fill, pad) {
          var $a, $b, self = this;
          if ($gvars.document == null) $gvars.document = nil;

          if (expand == null) {
            expand = false
          }
          if (fill == null) {
            fill = false
          }
          if (pad == null) {
            pad = 0
          }
          if ((($a = (($b = expand !== false && expand !== nil) ? fill['$!']() : $b)) !== nil && (!$a._isBoolean || $a == true))) {
            pad = $gvars.document.$create_element("DIV");
            pad.$add_class("pbr-opalui-box-padding");
            pad.$append_to(self.$element());
            self.$add(w);
            pad = $gvars.document.$create_element("DIV");
            pad.$add_class("pbr-opalui-box-padding");
            pad.$append_to(self.$element());
          } else if ((($a = expand['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
            self.$add(w)
          } else if ((($a = (($b = expand !== false && expand !== nil) ? fill : $b)) !== nil && (!$a._isBoolean || $a == true))) {
            w.$element().$add_class("pbr-opalui-box-child-fill");
            self.$add(w);};
          self.$pad_child(w, pad);
          return self;
        };

        ($a = ($c = self).$get_set_chain, $a._p = (TMP_17 = function(){var self = TMP_17._s || this, $a, $b, TMP_18;

        return ($a = ($b = self).$proc, $a._p = (TMP_18 = function(t, k, val, o){var self = TMP_18._s || this, $a, $b, TMP_19, $case = nil, old = nil;
            if (self.spacing == null) self.spacing = nil;
if (t == null) t = nil;if (k == null) k = nil;if (val == null) val = nil;o = $slice.call(arguments, 3);
          return (function() {$case = t;if ("get"['$===']($case)) {return ((($a = self.spacing) !== false && $a !== nil) ? $a : self.spacing = 0)}else {old = self.$get_spacing();
            self.spacing = val;
            t = self.$class().$get_padding_type();
            ($a = ($b = self).$iter, $a._p = (TMP_19 = function(c){var self = TMP_19._s || this, amt = nil;
if (c == null) c = nil;
            amt = (c.$element().$style()['$[]'](("margin-" + t['$[]'](0).$to_s())).$to_i()['$-'](old))['$+'](val);
              return self.$pad_child(c, amt);}, TMP_19._s = self, TMP_19), $a).call($b);
            return val;;}})()}, TMP_18._s = self, TMP_18), $a).call($b)}, TMP_17._s = self, TMP_17), $a).call($c, "spacing");

        self.$private();

        def.$pad_child = function(c, amt) {
          var self = this, t = nil, lc = nil;

          amt = self.$spacing()['$+'](amt);
          t = self.$class().$get_padding_type();
          lc = self.$children().$last().$element();
          c.$element().$style()['$[]='](("margin-" + t['$[]'](0).$to_s()), amt.$px());
          return c.$element().$style()['$[]='](("margin-" + t['$[]'](1).$to_s()), (function() {if (c.$element()['$=='](lc)) {
            return amt.$px()
            } else {
            return (0).$px()
          }; return nil; })());
        };

        $opal.cdecl($scope, 'PADDING_HORIZONTAL', ["left", "right"]);

        $opal.cdecl($scope, 'PADDING_VERTICAL', ["top", "bototm"]);

        $opal.defs(self, '$included', function(q) {
          var self = this;

          $opal.defs(q, '$get_padding_type', function() {
            var $a, self = this;
            if (self.padding_type == null) self.padding_type = nil;

            return ((($a = self.padding_type) !== false && $a !== nil) ? $a : self.padding_type = $scope.PADDING_VERTICAL);
          });
          return ($opal.defs(q, '$set_padding_type', function(type) {
            var self = this;

            return self.padding_type = type;
          }), nil) && 'set_padding_type';
        });
                ;$opal.donate(self, ["$add", "$pack_flex", "$pack_start", "$pad_child"]);
      })(self);

      (function($base, $super) {
        function $VBox(){};
        var self = $VBox = $klass($base, $super, 'VBox', $VBox);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_20;

        self.$include($scope.Box);

        self.$set_padding_type($scope.PADDING_VERTICAL);

        return ($a = ($b = self).$style, $a._p = (TMP_20 = function(){var self = TMP_20._s || this;

        return self.$flex($hash2(["flow"], {"flow": ["column", "nowrap"]}))}, TMP_20._s = self, TMP_20), $a).call($b);
      })(self, $scope.Container);

      (function($base, $super) {
        function $HBox(){};
        var self = $HBox = $klass($base, $super, 'HBox', $HBox);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_21;

        self.$include($scope.Box);

        self.$set_padding_type($scope.PADDING_HORIZONTAL);

        return ($a = ($b = self).$style, $a._p = (TMP_21 = function(){var self = TMP_21._s || this;

        return self.$flex($hash2(["flow"], {"flow": ["row", "nowrap"]}))}, TMP_21._s = self, TMP_21), $a).call($b);
      })(self, $scope.Container);
      
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $gvars = $opal.gvars, $hash2 = $opal.hash2;

  $opal.add_stubs(['$include', '$css', '$get_set_chain', '$content', '$create_element', '$append_to', '$element', '$add_class', '$rule', '$flex', '$private', '$overflow', '$on', '$==', '$code', '$select_pior', '$select_next', '$children', '$to_proc', '$!', '$is_a?', '$new', '$append_item']);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $Button(){};
        var self = $Button = $klass($base, $super, 'Button', $Button);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_1, TMP_2;

        self.$include($scope.Focus);

        self.$include($scope.Activate);

        self.$include($scope.Iconable);

        $opal.cdecl($scope, 'CONTENT_CLASS', $scope.Label);

        self.$css("\n    .pbr-opalui-button {\n      flex-flow:row nowrap;\n      -webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\n      background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #f9f9f9), color-stop(1, #e9e9e9) );\n      background-color:#f9f9f9;\n      overflow:hidden;\n      -webkit-border-top-left-radius:6px;\n      -webkit-border-top-right-radius:6px;\n      -webkit-border-bottom-right-radius:6px;\n      -webkit-border-bottom-left-radius:6px;\n  ;\n      text-indent:0;\n      border:1px solid #B8B6B6;\n      color:#666666;\n      font-family:Arial;\n      font-size:15px;\n      font-style:normal;\n      text-decoration:none;\n      text-shadow:1px 1px 0px #ffffff;\n      min-height:1.5em;\n      padding:0.2em;\n    }\n    .pbr-opalui-button:hover {\n      background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #e9e9e9), color-stop(1, #f9f9f9) );\n      background-color:#e9e9e9;\n    }.pbr-opalui-button:active {\n      background:-webkit-gradient( linear, left top, left bottom, color-stop(0.05, #d9d9d9), color-stop(1, #e9e9e9) );\n      background-color:#e9e9e9;\n    }    \n    .pbr-opalui-button .pbr-opalui-iconable-icon {\n      flex: 0 0 auto;      \n    }    \n    .pbr-opalui-button .pbr-opalui-iconable-content {\n      align-self:center;\n      flex: 0 0 auto;\n      padding-left:3px;\n      padding-right:3px;      \n    }\n    \n    .pbr-opalui-button .pbr-opalui-iconable-content span {\n          vertical-align:middle;\n          display:table-cell;\n    }  \n    .pbr-opalui-button .pbr-opalui-iconable-icon-left {\n      order: 1;\n    }\n    .pbr-opalui-button .pbr-opalui-iconable-icon-right {\n      order: 2;     \n    }  \n    .pbr-opalui-button .pbr-opalui-iconable-content-left {\n      order: 2;\n    }\n    .pbr-opalui-button .pbr-opalui-iconable-content-right {\n      order: 1;\n    }     \n    .pbr-opalui-button .pbr-opalui-button-padding-left {\n      order: 0;\n      flex:1 1 auto;\n    }\n    .pbr-opalui-button .pbr-opalui-button-padding-right {\n      order: 3;\n      flex:1 1 auto;\n    }\n    ");

        ($a = ($b = self).$get_set_chain, $a._p = (TMP_1 = function(){var self = TMP_1._s || this;

        return [self.$content(), "text", "text="]}, TMP_1._s = self, TMP_1), $a).call($b, "label");

        return (def.$init = TMP_2 = function() {var $zuper = $slice.call(arguments, 0);
          var self = this, $iter = TMP_2._p, $yield = $iter || nil, pad = nil;
          if ($gvars.document == null) $gvars.document = nil;

          TMP_2._p = null;
          $opal.find_super_dispatcher(self, 'init', TMP_2, $iter).apply(self, $zuper);
          pad = $gvars.document.$create_element("DIV");
          pad.$append_to(self.$element());
          pad.$add_class("pbr-opalui-button-padding");
          pad.$add_class("pbr-opalui-button-padding-left");
          pad = $gvars.document.$create_element("DIV");
          pad.$append_to(self.$element());
          pad.$add_class("pbr-opalui-button-padding");
          return pad.$add_class("pbr-opalui-button-padding-right");
        }, nil) && 'init';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $List(){};
        var self = $List = $klass($base, $super, 'List', $List);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_7, TMP_9, TMP_11, TMP_12;

        (function($base, $super) {
          function $Cell(){};
          var self = $Cell = $klass($base, $super, 'Cell', $Cell);

          var def = self._proto, $scope = self._scope, $a, $b, TMP_3, $c, TMP_5, TMP_6;

          self.$include($scope.Focus);

          self.$include($scope.Activate);

          self.$include($scope.Item);

          ($a = ($b = self).$css, $a._p = (TMP_3 = function(){var self = TMP_3._s || this, $a, $b, TMP_4;

          return ($a = ($b = self).$rule, $a._p = (TMP_4 = function(){var self = TMP_4._s || this;

            return self.$flex("0 0 1em !important")}, TMP_4._s = self, TMP_4), $a).call($b, ".pbr-opalui-list-cell")}, TMP_3._s = self, TMP_3), $a).call($b);

          ($a = ($c = self).$get_set_chain, $a._p = (TMP_5 = function(){var self = TMP_5._s || this;

          return [self.$element(), "inner_text", "inner_text="]}, TMP_5._s = self, TMP_5), $a).call($c, "value");

          self.$private();

          return (def.$on_activate = TMP_6 = function() {var $zuper = $slice.call(arguments, 0);
            var self = this, $iter = TMP_6._p, b = $iter || nil;

            TMP_6._p = null;
            return $opal.find_super_dispatcher(self, 'on_activate', TMP_6, $iter).apply(self, $zuper);
          }, nil) && 'on_activate';
        })(self, $scope.Widget);

        self.$include($scope.HasItems);

        ($a = ($b = self).$css, $a._p = (TMP_7 = function(){var self = TMP_7._s || this, $a, $b, TMP_8;

        return ($a = ($b = self).$rule, $a._p = (TMP_8 = function(){var self = TMP_8._s || this;

          return self.$overflow("auto")}, TMP_8._s = self, TMP_8), $a).call($b, ".pbr-opalui-list")}, TMP_7._s = self, TMP_7), $a).call($b);

        def.$init = TMP_9 = function() {var $zuper = $slice.call(arguments, 0);
          var $a, $b, TMP_10, self = this, $iter = TMP_9._p, $yield = $iter || nil;

          TMP_9._p = null;
          $opal.find_super_dispatcher(self, 'init', TMP_9, $iter).apply(self, $zuper);
          return ($a = ($b = self.$element()).$on, $a._p = (TMP_10 = function(e){var self = TMP_10._s || this, $a;
if (e == null) e = nil;
          if ((($a = (e.$code()['$=='](38))) !== nil && (!$a._isBoolean || $a == true))) {
              self.$select_pior();
              return false;;
            } else if ((($a = (e.$code()['$=='](40))) !== nil && (!$a._isBoolean || $a == true))) {
              self.$select_next()};
            return true;;}, TMP_10._s = self, TMP_10), $a).call($b, "keypress");
        };

        def.$items = TMP_11 = function() {
          var $a, $b, self = this, $iter = TMP_11._p, b = $iter || nil;

          TMP_11._p = null;
          return ($a = ($b = self).$children, $a._p = b.$to_proc(), $a).call($b);
        };

        return (def.$add = TMP_12 = function(opts) {
          var $a, self = this, $iter = TMP_12._p, $yield = $iter || nil, c = nil;

          TMP_12._p = null;
          if ((($a = opts['$is_a?']($scope.Hash)['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
            opts = $hash2(["value"], {"value": opts})};
          $opal.find_super_dispatcher(self, 'add', TMP_12, null).apply(self, [c = $scope.Cell.$new(opts)]);
          self.$append_item(c);
          return self;
        }, nil) && 'add';
      })(self, $scope.Container);

      (function($base, $super) {
        function $Entry(){};
        var self = $Entry = $klass($base, $super, 'Entry', $Entry);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.Activate)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $TextView(){};
        var self = $TextView = $klass($base, $super, 'TextView', $TextView);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Widget);
      
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;

  $opal.add_stubs(['$extend', '$border', '$fetch', '$px', '$style', '$background', '$resize!', '$rule', '$padding', '$font', '$color']);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'OpalUI');

      var def = self._proto, $scope = self._scope;

      (function($base, $super) {
        function $Theme(){};
        var self = $Theme = $klass($base, $super, 'Theme', $Theme);

        var def = self._proto, $scope = self._scope;

        return self.$extend((($scope.PBR)._scope.OpalUI)._scope.Styler)
      })(self, null);

      (function($base, $super) {
        function $DefaultTheme(){};
        var self = $DefaultTheme = $klass($base, $super, 'DefaultTheme', $DefaultTheme);

        var def = self._proto, $scope = self._scope, $a, $b, TMP_1, $c, TMP_2, $d, TMP_6, $e, TMP_7, $f, TMP_8, $g, TMP_9, $h, TMP_10, $i, TMP_15;

        (function($base) {
          var self = $module($base, 'Helper');

          var def = self._proto, $scope = self._scope;

          $opal.defs(self, '$border', function(defn, opts) {
            var self = this;

            if (opts == null) {
              opts = $hash2([], {})
            }
            defn.$border($hash2(["radius"], {"radius": opts.$fetch("radius", (3).$px())}));
            defn.$border($hash2(["color"], {"color": opts.$fetch("color", "#a9a9a9")}));
            defn.$border($hash2(["style"], {"style": opts.$fetch("style", "solid")}));
            return defn.$border($hash2(["width"], {"width": opts.$fetch("width", (1).$px())}));
          })
          
        })(self);

        ($a = ($b = self).$style, $a._p = (TMP_1 = function(){var self = TMP_1._s || this;

        $scope.Helper.$border(self, $hash2(["color"], {"color": "#B6A5A5"}));
          self.$background($hash2(["color"], {"color": "#D6D6CE"}));
          return self['$resize!']("both");}, TMP_1._s = self, TMP_1), $a).call($b, (($scope.PBR)._scope.OpalUI)._scope.Window);

        ($a = ($c = self).$style, $a._p = (TMP_2 = function(){var self = TMP_2._s || this, $a, $b, TMP_3, $c, TMP_4, $d, TMP_5;

        $scope.Helper.$border(self);
          self.$border($hash2(["top"], {"top": 0}));
          ($a = ($b = self).$rule, $a._p = (TMP_3 = function(){var self = TMP_3._s || this;

          $scope.Helper.$border(self);
            self.$border($hash2(["bottom"], {"bottom": 0}));
            self.$border($hash2(["left"], {"left": 0}));
            self.$border($hash2(["right"], {"right": 0}));
            return self.$border($hash2(["top-right-radius"], {"top-right-radius": (0).$px()}));}, TMP_3._s = self, TMP_3), $a).call($b, ".pbr-opalui-frame-top-left");
          ($a = ($c = self).$rule, $a._p = (TMP_4 = function(){var self = TMP_4._s || this;

          $scope.Helper.$border(self);
            self.$border($hash2(["bottom"], {"bottom": 0}));
            self.$border($hash2(["left"], {"left": 0}));
            self.$border($hash2(["right"], {"right": 0}));
            return self.$border($hash2(["top-left-radius"], {"top-left-radius": (0).$px()}));}, TMP_4._s = self, TMP_4), $a).call($c, ".pbr-opalui-frame-top-right");
          return ($a = ($d = self).$rule, $a._p = (TMP_5 = function(){var self = TMP_5._s || this;

          return nil}, TMP_5._s = self, TMP_5), $a).call($d, ".pbr-opalui-frame-inner");}, TMP_2._s = self, TMP_2), $a).call($c, (($scope.PBR)._scope.OpalUI)._scope.Frame);

        ($a = ($d = self).$style, $a._p = (TMP_6 = function(){var self = TMP_6._s || this;

        $scope.Helper.$border(self);
          self.$padding($hash2(["left"], {"left": (1).$px()}));
          return self.$background($hash2(["color"], {"color": "white"}));}, TMP_6._s = self, TMP_6), $a).call($d, (($scope.PBR)._scope.OpalUI)._scope.Entry);

        ($a = ($e = self).$style, $a._p = (TMP_7 = function(){var self = TMP_7._s || this;

        $scope.Helper.$border(self);
          return self.$background($hash2(["color"], {"color": "white"}));}, TMP_7._s = self, TMP_7), $a).call($e, (($scope.PBR)._scope.OpalUI)._scope.TextView);

        ($a = ($f = self).$style, $a._p = (TMP_8 = function(){var self = TMP_8._s || this;

        return nil}, TMP_8._s = self, TMP_8), $a).call($f, (($scope.PBR)._scope.OpalUI)._scope.Label);

        ($a = ($g = self).$style, $a._p = (TMP_9 = function(){var self = TMP_9._s || this;

        self.$font($hash2(["family"], {"family": "monospace"}));
          return self.$padding($hash2(["left"], {"left": (1).$px()}));}, TMP_9._s = self, TMP_9), $a).call($g, ((($scope.PBR)._scope.OpalUI)._scope.List)._scope.Cell);

        ($a = ($h = self).$style, $a._p = (TMP_10 = function(){var self = TMP_10._s || this, $a, $b, TMP_11, $c, TMP_12, $d, TMP_13, $e, TMP_14;

        $scope.Helper.$border(self);
          self.$background($hash2(["color"], {"color": "white"}));
          ($a = ($b = self).$rule, $a._p = (TMP_11 = function(){var self = TMP_11._s || this;

          self.$background($hash2(["color"], {"color": "#14839C"}));
            return self.$color("white");}, TMP_11._s = self, TMP_11), $a).call($b, ".pbr-opalui-item-selected");
          ($a = ($c = self).$rule, $a._p = (TMP_12 = function(){var self = TMP_12._s || this;

          return self.$border([(1).$px(), "dashed", "grey"])}, TMP_12._s = self, TMP_12), $a).call($c, ".pbr-opalui-active-activated");
          ($a = ($d = self).$rule, $a._p = (TMP_13 = function(){var self = TMP_13._s || this;

          return self.$border($hash2(["bottom"], {"bottom": [(1).$px(), "solid", "#cecece"]}))}, TMP_13._s = self, TMP_13), $a).call($d, ".pbr-opalui-list-cell:nth-child(odd)");
          return ($a = ($e = self).$rule, $a._p = (TMP_14 = function(){var self = TMP_14._s || this;

          return self.$border($hash2(["bottom"], {"bottom": [(1).$px(), "solid", "#cecece"]}))}, TMP_14._s = self, TMP_14), $a).call($e, ".pbr-opalui-list-cell:nth-child(even)");}, TMP_10._s = self, TMP_10), $a).call($h, (($scope.PBR)._scope.OpalUI)._scope.List);

        return ($a = ($i = self).$style, $a._p = (TMP_15 = function(){var self = TMP_15._s || this;

        self['$resize!']("none");
          return self.$color("#7A3333");}, TMP_15._s = self, TMP_15), $a).call($i, (($scope.PBR)._scope.OpalUI)._scope.Widget);
      })(self, $scope.Theme);
      
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;

  $opal.add_stubs(['$register', '$attr_reader', '$new', '$element', '$raise', '$text', '$style', '$width', '$height', '$load', '$data', '$pattern', '$gradient', '$to_proc', '$clear', '$begin', '$close', '$save', '$restore', '$move_to', '$line_to', '$line', '$rect', '$widht', '$arc', '$quadratic_curve_to', '$bezier_curve_to', '$curve_to', '$draw_image', '$translate', '$rotate', '$scale', '$transform', '$path', '$fill', '$stroke', '$clip', '$point_in_path?', '$to_data']);
  return (function($base) {
    var self = $module($base, 'UI');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $Canvas(){};
      var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

      var def = self._proto, $scope = self._scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_6, TMP_7, TMP_8, TMP_9, TMP_10;

      def.canvas = def.canva = nil;
      self.$register($hash2(["name"], {"name": "canvas"}));

      self.$attr_reader("element", "style", "text");

      def.$initialize = TMP_1 = function(tag, wrap, init) {
        var $a, $b, $c, self = this, $iter = TMP_1._p, $yield = $iter || nil;

        if (tag == null) {
          tag = "CANVAS"
        }
        if (wrap == null) {
          wrap = nil
        }
        if (init == null) {
          init = nil
        }
        TMP_1._p = null;
        $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [tag, wrap, init]);
        if ((($a = ((($b = ((($c = wrap !== false && wrap !== nil) ? init : $c))) !== false && $b !== nil) ? $b : tag)) !== nil && (!$a._isBoolean || $a == true))) {
          self.canvas = ($scope.Browser)._scope.Canvas.$new(self.$element())
          } else {
          self.$raise("NotImplemented: wrap initialized CANVAS")
        };
        self.text = self.canvas.$text();
        return self.style = self.canvas.$style();
      };

      def.$width = function() {
        var self = this;

        return self.canvas.$width();
      };

      def.$height = function() {
        var self = this;

        return self.canvas.$height();
      };

      def.$load = function(path) {
        var self = this;

        return self.canvas.$load(path);
      };

      def.$data = function(x, y, width, height) {
        var self = this;

        if (x == null) {
          x = nil
        }
        if (y == null) {
          y = nil
        }
        if (width == null) {
          width = nil
        }
        if (height == null) {
          height = nil
        }
        return self.canvas.$data(x, y, width, height);
      };

      def.$pattern = function(image, type) {
        var self = this;

        if (type == null) {
          type = "repeat"
        }
        return self.canvas.$pattern(image, type);
      };

      def.$gradient = TMP_2 = function(args) {
        var $a, $b, self = this, $iter = TMP_2._p, block = $iter || nil;

        args = $slice.call(arguments, 0);
        TMP_2._p = null;
        return ($a = ($b = self.canvas).$gradient, $a._p = block.$to_proc(), $a).apply($b, [].concat(args));
      };

      def.$clear = function(x, y, width, height) {
        var self = this;

        if (x == null) {
          x = nil
        }
        if (y == null) {
          y = nil
        }
        if (width == null) {
          width = nil
        }
        if (height == null) {
          height = nil
        }
        return self.canvas.$clear(x, y, width, height);
      };

      def.$begin = function() {
        var self = this;

        return self.canvas.$begin();
      };

      def.$close = function() {
        var self = this;

        self.canvas.$close();
        return self;
      };

      def.$save = function() {
        var self = this;

        self.canvas.$save();
        return self;
      };

      def.$restore = function() {
        var self = this;

        self.canvas.$restore();
        return self;
      };

      def.$move_to = function(x, y) {
        var self = this;

        return self.canvas.$move_to(x, y);
      };

      $opal.defn(self, '$move', def.$move_to);

      def.$line_to = function(x, y) {
        var self = this;

        return self.canvas.$line_to(x, y);
      };

      def.$line = function(x1, y1, x2, y2) {
        var self = this;

        return self.canvas.$line(x1, y1, x2, y2);
      };

      def.$rect = function(x, y, width, height) {
        var self = this;

        self.canvas.$rect(x, y, self.$widht(), height);
        return self;
      };

      def.$arc = function(x, y, radius, angle, clockwise) {
        var self = this;

        if (clockwise == null) {
          clockwise = false
        }
        self.canvas.$arc(x, y, radius, angle, clockwise);
        return self;
      };

      def.$quadratic_curve_to = function(cp1x, cp1y, x, y) {
        var self = this;

        self.canva.$quadratic_curve_to(cp1x, cp1y, x, y);
        return self;
      };

      def.$bezier_curve_to = function(cp1x, cp1y, cp2x, cp2y, x, y) {
        var self = this;

        self.canvas.$bezier_curve_to(cp1x, cp1y, cp2x, cp2y, x, y);
        return self;
      };

      def.$curve_to = function(args) {
        var $a, self = this;

        args = $slice.call(arguments, 0);
        ($a = self.canvas).$curve_to.apply($a, [].concat(args));
        return self;
      };

      def.$draw_image = function(image, args) {
        var $a, self = this;

        args = $slice.call(arguments, 1);
        ($a = self.canvas).$draw_image.apply($a, [image].concat(args));
        return self;
      };

      def.$translate = TMP_3 = function(x, y) {
        var $a, $b, self = this, $iter = TMP_3._p, block = $iter || nil;

        TMP_3._p = null;
        ($a = ($b = self.canvas).$translate, $a._p = block.$to_proc(), $a).call($b, x, y);
        return self;
      };

      def.$rotate = TMP_4 = function(angle) {
        var $a, $b, self = this, $iter = TMP_4._p, block = $iter || nil;

        TMP_4._p = null;
        ($a = ($b = self.canvas).$rotate, $a._p = block.$to_proc(), $a).call($b, angle);
        return self;
      };

      def.$scale = TMP_5 = function(x, y) {
        var $a, $b, self = this, $iter = TMP_5._p, block = $iter || nil;

        TMP_5._p = null;
        ($a = ($b = self.canvas).$scale, $a._p = block.$to_proc(), $a).call($b, x, y);
        return self;
      };

      def.$transform = TMP_6 = function(m11, m12, m21, m22, dx, dy) {
        var $a, $b, self = this, $iter = TMP_6._p, block = $iter || nil;

        TMP_6._p = null;
        ($a = ($b = self.canvas).$transform, $a._p = block.$to_proc(), $a).call($b, m11, m12, m21, m22, dx, dy);
        return self;
      };

      def.$path = TMP_7 = function() {
        var $a, $b, self = this, $iter = TMP_7._p, block = $iter || nil;

        TMP_7._p = null;
        ($a = ($b = self.canvas).$path, $a._p = block.$to_proc(), $a).call($b);
        return self;
      };

      def.$fill = TMP_8 = function() {
        var $a, $b, self = this, $iter = TMP_8._p, block = $iter || nil;

        TMP_8._p = null;
        ($a = ($b = self.canvas).$fill, $a._p = block.$to_proc(), $a).call($b);
        return self;
      };

      def.$stroke = TMP_9 = function() {
        var $a, $b, self = this, $iter = TMP_9._p, block = $iter || nil;

        TMP_9._p = null;
        ($a = ($b = self.canvas).$stroke, $a._p = block.$to_proc(), $a).call($b);
        return self;
      };

      def.$clip = TMP_10 = function() {
        var $a, $b, self = this, $iter = TMP_10._p, block = $iter || nil;

        TMP_10._p = null;
        ($a = ($b = self.canvas).$clip, $a._p = block.$to_proc(), $a).call($b);
        return self;
      };

      def['$point_in_path?'] = function(x, y) {
        var self = this;

        return self.canvas['$point_in_path?'](x, y);
      };

      return (def.$to_data = function(type) {
        var self = this;

        return self.canvas.$to_data(type);
      }, nil) && 'to_data';
    })(self, $scope.Widget)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;

  $opal.add_stubs(['$keyval', '$x', '$y', '$define', '$[]', '$define_method', '$config', '$singleton_class', '$attr_reader', '$[]=', '$is_a?', '$raise', '$respond_to?', '$send', '$on_delete', '$!', '$at_exit', '$toplevel', '$private', '$call', '$quit', '$backend', '$class', '$delete', '$instance_variable_set', '$scrolled', '$add', '$flow', '$stack', '$build', '$append_widget', '$==', '$new', '$const_get', '$widgets', '$create_widget', '$create_append', '$to_proc', '$public', '$instance_exec', '$create_append_build', '$init', '$display', '$main', '$setup', '$constructor', '$modify', '$each_key', '$split', '$to_s', '$include', '$default_size=', '$size', '$width', '$height', '$remove']);
  return (function($base) {
    var self = $module($base, 'PBR');

    var def = self._proto, $scope = self._scope;

    (function($base) {
      var self = $module($base, 'UI');

      var def = self._proto, $scope = self._scope;

      (function($base) {
        var self = $module($base, 'BoxLayoutProperty');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'FILL', "fill");

        $opal.cdecl($scope, 'EXPAND', "expand");

        $opal.cdecl($scope, 'PADDING', "padding");
        
      })(self);

      (function($base) {
        var self = $module($base, 'WidgetWithIconProperty');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'ICON_THEME', "theme");

        $opal.cdecl($scope, 'ICON_POSITION', "icon_position");
        
      })(self);

      (function($base) {
        var self = $module($base, 'IconLocation');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'RIGHT', "right");

        $opal.cdecl($scope, 'LEFT', "left");

        $opal.cdecl($scope, 'TOP', "top");

        $opal.cdecl($scope, 'BOTTOM', "bottom");
        
      })(self);

      (function($base) {
        var self = $module($base, 'KeyEventType');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'PRESS', "press");

        $opal.cdecl($scope, 'RELEASE', "release");
        
      })(self);

      (function($base, $super) {
        function $GenericEvent(){};
        var self = $GenericEvent = $klass($base, $super, 'GenericEvent', $GenericEvent);

        var def = self._proto, $scope = self._scope;

        def.data = nil;
        def.$initialize = function(widget, data) {
          var self = this;

          if (data == null) {
            data = nil
          }
          self.widget = widget;
          return self.data = data;
        };

        def.$data = function() {
          var self = this;

          return self.data;
        };

        def.$veto = function() {
          var self = this;

          return nil;
        };

        return (def.$stop = function() {
          var self = this;

          return nil;
        }, nil) && 'stop';
      })(self, null);

      (function($base, $super) {
        function $KeyEvent(){};
        var self = $KeyEvent = $klass($base, $super, 'KeyEvent', $KeyEvent);

        var def = self._proto, $scope = self._scope;

        def.$data = function() {
          var self = this;

          return self.$keyval();
        };

        def.$keyval = function() {
          var self = this;

          return nil;
        };

        def.$type = function() {
          var self = this;

          return nil;
        };

        def.$state = function() {
          var self = this;

          return nil;
        };

        def['$ctrl?'] = function() {
          var self = this;

          return nil;
        };

        def['$shift?'] = function() {
          var self = this;

          return nil;
        };

        return (def['$alt?'] = function() {
          var self = this;

          return nil;
        }, nil) && 'alt?';
      })(self, $scope.GenericEvent);

      (function($base, $super) {
        function $MouseEvent(){};
        var self = $MouseEvent = $klass($base, $super, 'MouseEvent', $MouseEvent);

        var def = self._proto, $scope = self._scope;

        def.$button = function() {
          var self = this;

          return nil;
        };

        def.$type = function() {
          var self = this;

          return nil;
        };

        def.$data = function() {
          var self = this;

          return [self.$x(), self.$y()];
        };

        def.$x = function() {
          var self = this;

          return nil;
        };

        return (def.$y = function() {
          var self = this;

          return nil;
        }, nil) && 'y';
      })(self, $scope.GenericEvent);

      (function($base, $super) {
        function $MotionEvent(){};
        var self = $MotionEvent = $klass($base, $super, 'MotionEvent', $MotionEvent);

        var def = self._proto, $scope = self._scope;

        def.$data = function() {
          var self = this;

          return [self.$x(), self.$y()];
        };

        def.$x = function() {
          var self = this;

          return nil;
        };

        return (def.$y = function() {
          var self = this;

          return nil;
        }, nil) && 'y';
      })(self, $scope.GenericEvent);

      (function($base) {
        var self = $module($base, 'MenuItemType');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'TEXT', "text");

        $opal.cdecl($scope, 'ICON', "icon");

        $opal.cdecl($scope, 'CHECKED', "check");
        
      })(self);

      (function($base) {
        var self = $module($base, 'IconSize');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'MENU', "menu");

        $opal.cdecl($scope, 'BUTTON', "button");

        $opal.cdecl($scope, 'TOOLBAR', "toolbar");

        $opal.cdecl($scope, 'TOOLBAR_BIG', "toolbar_big");

        $opal.cdecl($scope, 'LARGE', "large");
        
      })(self);

      (function($base) {
        var self = $module($base, 'ChoosePathAction');

        var def = self._proto, $scope = self._scope;

        $opal.cdecl($scope, 'OPEN', "open");

        $opal.cdecl($scope, 'SAVE', "save");

        $opal.cdecl($scope, 'FOLDER', "folder");
        
      })(self);

      (function($base) {
        var self = $module($base, 'Backend');

        var def = self._proto, $scope = self._scope;

        def.$register = function(app) {
          var self = this;

          return app.$define($hash2(["backend"], {"backend": self}));
        };

        def.$init = function() {
          var self = this;

          return nil;
        };

        def.$main = function() {
          var self = this;

          return nil;
        };

        def.$quit = function() {
          var self = this;

          return nil;
        };
                ;$opal.donate(self, ["$register", "$init", "$main", "$quit"]);
      })(self);

      (function($base, $super) {
        function $App(){};
        var self = $App = $klass($base, $super, 'App', $App);

        var def = self._proto, $scope = self._scope, TMP_4, TMP_5, TMP_6, TMP_7, TMP_8, TMP_9, TMP_10, TMP_11, TMP_12, TMP_13, TMP_14, TMP_15, TMP_16, TMP_17, TMP_18, TMP_19, TMP_20, TMP_21, TMP_22, TMP_23, TMP_24, TMP_25, TMP_26, TMP_27, TMP_28, TMP_29, TMP_30, TMP_31, TMP_32, TMP_33;

        def.on_quit_cb = def.build_mode = def.buildee = def.widgets = def.last = nil;
        $opal.defs(self, '$define', function(config) {
          var self = this;

          if (config == null) {
            config = $hash2([], {})
          }
          return self.config = config;
        });

        $opal.defs(self, '$backend', function() {
          var self = this;
          if (self.config == null) self.config = nil;

          return self.config['$[]']("backend");
        });

        $opal.defs(self, '$config', function() {
          var self = this;
          if (self.config == null) self.config = nil;

          return self.config;
        });

        $opal.defs(self, '$inherited', function(cls) {
          var $a, $b, TMP_1, self = this;

          return ($a = ($b = cls.$singleton_class()).$define_method, $a._p = (TMP_1 = function(c){var self = TMP_1._s || this;
if (c == null) c = nil;
          return c.$define(cls.$config())}, TMP_1._s = self, TMP_1), $a).call($b, "inherited");
        });

        self.$attr_reader("toplevel");

        def.$initialize = function(opts) {
          var $a, $b, $c, TMP_2, self = this;

          if (opts == null) {
            opts = $hash2([], {})
          }
          ($a = "toplevel", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, "window")));
          if ((($a = opts['$[]']("toplevel")['$is_a?']($scope.Symbol)) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.$raise("`:toplevel` option must be `Symbol`")
          };
          if ((($a = self['$respond_to?'](opts['$[]']("toplevel"))) !== nil && (!$a._isBoolean || $a == true))) {
            } else {
            self.$raise("Invalid value: " + (opts['$[]']("toplevel")) + "; for option: :toplevel")
          };
          self.toplevel = self.$send(opts['$[]']("toplevel"), opts);
          return ($a = ($b = self.$toplevel()).$on_delete, $a._p = (TMP_2 = function(){var self = TMP_2._s || this;

          return self.$at_exit()['$!']()}, TMP_2._s = self, TMP_2), $a).call($b);
        };

        self.$private();

        def.$at_exit = function() {
          var $a, $b, self = this;

          if ((($a = ((($b = self.on_quit_cb['$!']()) !== false && $b !== nil) ? $b : self.on_quit_cb.$call()['$!']())) !== nil && (!$a._isBoolean || $a == true))) {
            self.$class().$backend().$quit();
            return true;};
          return false;
        };

        def.$append_widget = function(widget, opts) {
          var $a, $b, TMP_3, self = this, ivar = nil, old = nil, q_opts = nil, layout = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          if ((($a = self.build_mode) !== nil && (!$a._isBoolean || $a == true))) {
            if ((($a = ivar = opts.$delete("id")) !== nil && (!$a._isBoolean || $a == true))) {
              self.$instance_variable_set("@" + (ivar), widget)}};
          if ((($a = opts['$[]']("scrolled")) !== nil && (!$a._isBoolean || $a == true))) {
            old = widget;
            q_opts = $hash2(["expand", "fill", "padding"], {"expand": opts['$[]']("expand"), "fill": opts['$[]']("fill"), "padding": opts['$[]']("padding")});
            opts.$delete("expand");
            opts.$delete("fill");
            opts.$delete("padding");
            widget = self.$scrolled(q_opts);
            widget.$add(old);
            if ((($a = self.build_mode) !== nil && (!$a._isBoolean || $a == true))) {
              return nil};};
          if ((($a = self.build_mode) !== nil && (!$a._isBoolean || $a == true))) {
            if ((($a = opts['$[]']("center")) !== nil && (!$a._isBoolean || $a == true))) {
              old = widget;
              q_opts = $hash2(["expand", "fill", "padding"], {"expand": opts['$[]']("expand"), "fill": opts['$[]']("fill"), "padding": opts['$[]']("padding")});
              opts.$delete("expand");
              opts.$delete("fill");
              opts.$delete("padding");
              if ((($a = self.buildee['$is_a?']((($scope.PBR)._scope.UI)._scope.Stack)) !== nil && (!$a._isBoolean || $a == true))) {
                widget = self.$flow(q_opts)};
              if ((($a = self.buildee['$is_a?']((($scope.PBR)._scope.UI)._scope.Flow)) !== nil && (!$a._isBoolean || $a == true))) {
                widget = self.$stack(q_opts)};
              ($a = ($b = self).$build, $a._p = (TMP_3 = function(){var self = TMP_3._s || this;

              return self.$append_widget(old, $hash2(["expand", "fill"], {"expand": true, "fill": false}))}, TMP_3._s = self, TMP_3), $a).call($b, widget);
              if ((($a = self.build_mode) !== nil && (!$a._isBoolean || $a == true))) {
                return nil};};
            if ((($a = self.buildee['$is_a?']((($scope.PBR)._scope.UI)._scope.Box)) !== nil && (!$a._isBoolean || $a == true))) {
              layout = [(function() {if (opts['$[]']("expand")['$=='](nil)) {
                return true
                } else {
                return opts['$[]']("expand")['$!']()['$!']()
              }; return nil; })(), (function() {if (opts['$[]']("fill")['$=='](nil)) {
                return true
                } else {
                return opts['$[]']("fill")['$!']()['$!']()
              }; return nil; })(), (function() {if (opts['$[]']("padding")['$=='](nil)) {
                return 0
                } else {
                return opts['$[]']("padding")
              }; return nil; })()];
              return ($a = self.buildee).$add.apply($a, [widget].concat(layout));
              } else {
              return self.buildee.$add(widget)
            };
            } else {
            return nil
          };
        };

        def.$widgets = function() {
          var $a, self = this;

          return ((($a = self.widgets) !== false && $a !== nil) ? $a : self.widgets = $hash2([], {}));
        };

        def.$create_widget = function(type, opts) {
          var $a, self = this, widget = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          self.last = widget = self.$class().$backend().$const_get(type).$new(opts);
          if ((($a = opts['$[]']("name")) !== nil && (!$a._isBoolean || $a == true))) {
            self.$widgets()['$[]='](opts['$[]']("name"), widget)};
          widget.$send("set_application", self);
          return widget;
        };

        def.$create_append = function(type, opts) {
          var self = this, widget = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          widget = self.$create_widget(type, opts);
          self.$append_widget(widget, opts);
          return widget;
        };

        def.$create_append_build = TMP_4 = function(type, opts) {
          var $a, $b, self = this, $iter = TMP_4._p, b = $iter || nil, widget = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_4._p = null;
          widget = self.$create_append(type, opts);
          if (b !== false && b !== nil) {
            ($a = ($b = self).$build, $a._p = b.$to_proc(), $a).call($b, widget)};
          return widget;
        };

        self.$public();

        def.$last = function() {
          var self = this;

          return self.last;
        };

        def.$this = function() {
          var self = this;

          return self.buildee;
        };

        def.$quit = function() {
          var self = this;

          return self.$class().$backend().$quit();
        };

        def.$build = TMP_5 = function(buildee) {
          var $a, $b, self = this, $iter = TMP_5._p, b = $iter || nil, pm = nil, pb = nil, r = nil;

          if (buildee == null) {
            buildee = self.$toplevel()
          }
          TMP_5._p = null;
          pm = self.build_mode;
          self.build_mode = true;
          pb = self.buildee;
          self.buildee = buildee;
          r = ($a = ($b = self).$instance_exec, $a._p = b.$to_proc(), $a).call($b, self.buildee);
          self.build_mode = pm;
          self.buildee = pb;
          return r;
        };

        def.$on_quit = TMP_6 = function() {
          var self = this, $iter = TMP_6._p, b = $iter || nil;

          TMP_6._p = null;
          return self.on_quit_cb = b;
        };

        def.$window = TMP_7 = function(opts) {
          var $a, $b, self = this, $iter = TMP_7._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_7._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Window", opts);
        };

        def.$button = TMP_8 = function(opts) {
          var $a, $b, self = this, $iter = TMP_8._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_8._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Button", opts);
        };

        def.$notebook = TMP_9 = function(opts) {
          var $a, $b, self = this, $iter = TMP_9._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_9._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Notebook", opts);
        };

        def.$page = TMP_10 = function(opts) {
          var $a, $b, self = this, $iter = TMP_10._p, b = $iter || nil, type = nil, book = nil, flw = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_10._p = null;
          type = nil;
          if ((($a = self.buildee['$is_a?']((($scope.PBR)._scope.UI)._scope.Book)) !== nil && (!$a._isBoolean || $a == true))) {
            type = self.buildee.$class()
            } else {
            type = opts['$[]']("type")
          };
          if (type !== false && type !== nil) {
            } else {
            self.$raise("No Page Type resolved!")
          };
          book = (function() {if ((($a = self.buildee['$is_a?']((($scope.PBR)._scope.UI)._scope.Book)) !== nil && (!$a._isBoolean || $a == true))) {
            return self.buildee
            } else {
            return opts['$[]']("book")
          }; return nil; })();
          flw = (type)._scope.Page.$new(book, opts);
          self.$append_widget(flw, opts);
          if (b !== false && b !== nil) {
            ($a = ($b = self).$build, $a._p = b.$to_proc(), $a).call($b, flw)};
          return flw;
        };

        def.$flow = TMP_11 = function(opts) {
          var $a, $b, self = this, $iter = TMP_11._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_11._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Flow", opts);
        };

        def.$stack = TMP_12 = function(opts) {
          var $a, $b, self = this, $iter = TMP_12._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_12._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Stack", opts);
        };

        def.$scrolled = TMP_13 = function(opts) {
          var $a, $b, self = this, $iter = TMP_13._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_13._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "ScrolledView", opts);
        };

        def.$menubar = TMP_14 = function(opts) {
          var $a, $b, self = this, $iter = TMP_14._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_14._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Menubar", opts);
        };

        def.$menu_item = TMP_15 = function(opts) {
          var $a, $b, self = this, $iter = TMP_15._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_15._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "MenuItem", opts);
        };

        def.$menu = TMP_16 = function(opts) {
          var $a, $b, self = this, $iter = TMP_16._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_16._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Menu", opts);
        };

        def.$toolbar = TMP_17 = function(opts) {
          var $a, $b, self = this, $iter = TMP_17._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_17._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "Toolbar", opts);
        };

        def.$tool_item = TMP_18 = function(opts) {
          var $a, $b, self = this, $iter = TMP_18._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_18._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "ToolItem", opts);
        };

        def.$tool_button = TMP_19 = function(opts) {
          var $a, $b, self = this, $iter = TMP_19._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_19._p = null;
          return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "ToolButton", opts);
        };

        def.$tool_separator = TMP_20 = function(opts) {
          var self = this, $iter = TMP_20._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_20._p = null;
          return self.$create_append("SeparatorToolItem", opts);
        };

        def.$html = TMP_21 = function(opts) {
          var self = this, $iter = TMP_21._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_21._p = null;
          return self.$create_append("HtmlView", opts);
        };

        def.$web_view = TMP_22 = function(opts) {
          var self = this, $iter = TMP_22._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_22._p = null;
          return self.$create_append("WebView", opts);
        };

        def.$entry = TMP_23 = function(opts) {
          var self = this, $iter = TMP_23._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_23._p = null;
          return self.$create_append("Entry", opts);
        };

        def.$image = TMP_24 = function(opts) {
          var self = this, $iter = TMP_24._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_24._p = null;
          return self.$create_append("Image", opts);
        };

        def.$hrule = TMP_25 = function(opts) {
          var self = this, $iter = TMP_25._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_25._p = null;
          return self.$create_append("HRule", opts);
        };

        def.$vrule = TMP_26 = function(opts) {
          var self = this, $iter = TMP_26._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_26._p = null;
          return self.$create_append("VRule", opts);
        };

        def.$spinner = TMP_27 = function(opts) {
          var self = this, $iter = TMP_27._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_27._p = null;
          return self.$create_append("Spinner", opts);
        };

        def.$list_box = TMP_28 = function(opts) {
          var self = this, $iter = TMP_28._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_28._p = null;
          return self.$create_append("ListBox", opts);
        };

        def.$list_view = TMP_29 = function(opts) {
          var self = this, $iter = TMP_29._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_29._p = null;
          return self.$create_append("ListView", opts);
        };

        def.$text = TMP_30 = function(opts) {
          var self = this, $iter = TMP_30._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_30._p = null;
          return self.$create_append("TextView", opts);
        };

        def.$label = TMP_31 = function(opts) {
          var self = this, $iter = TMP_31._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_31._p = null;
          return self.$create_append("Label", opts);
        };

        def.$display = function() {
          var self = this;

          return nil;
        };

        def.$alert = function(title, body, value) {
          var self = this;

          if (title == null) {
            title = ""
          }
          if (body == null) {
            body = ""
          }
          if (value == null) {
            value = ""
          }
          return nil;
        };

        def.$confirm = function(title, body) {
          var self = this;

          if (title == null) {
            title = ""
          }
          if (body == null) {
            body = ""
          }
          return nil;
        };

        def.$prompt = function(title, body, value) {
          var self = this;

          if (title == null) {
            title = ""
          }
          if (body == null) {
            body = ""
          }
          if (value == null) {
            value = ""
          }
          return nil;
        };

        def.$prompt_path = function(opts) {
          var self = this;

          if (opts == null) {
            opts = $hash2(["type"], {"type": "open"})
          }
          return nil;
        };

        def.$on_run = TMP_32 = function() {
          var self = this, $iter = TMP_32._p, b = $iter || nil;

          TMP_32._p = null;
          return nil;
        };

        return ($opal.defs(self, '$run', TMP_33 = function(opts) {
          var self = this, $iter = TMP_33._p, b = $iter || nil, ins = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_33._p = null;
          self.$backend().$init();
          ins = self.$new(opts);
          b.$call(ins);
          ins.$display();
          return self.$backend().$main();
        }), nil) && 'run';
      })(self, null);

      (function($base, $super) {
        function $Widget(){};
        var self = $Widget = $klass($base, $super, 'Widget', $Widget);

        var def = self._proto, $scope = self._scope, TMP_34, TMP_37, TMP_38, TMP_39, TMP_40, TMP_41, TMP_42, TMP_43, TMP_44, TMP_45, TMP_46, TMP_47;

        def._container = nil;
        $opal.defs(self, '$native_class', function() {
          var self = this;
          if (self.native_class == null) self.native_class = nil;

          return self.native_class;
        });

        $opal.defs(self, '$define', function(native_class, config) {
          var self = this;

          if (config == null) {
            config = $hash2(["constructor", "defaults"], {"constructor": "new", "defaults": $hash2([], {})})
          }
          return self.$setup(native_class, config);
        });

        $opal.defs(self, '$setup', function(native_class, config) {
          var self = this;

          self.native_class = native_class;
          return self.config = config;
        });

        self.$attr_reader("native");

        def.$initialize = TMP_34 = function(opts) {
          var $a, $b, self = this, $iter = TMP_34._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_34._p = null;
          self["native"] = ($a = ($b = self.$class()).$constructor, $a._p = b.$to_proc(), $a).call($b, self, opts);
          return self.$modify(opts);
        };

        def.$modify = function(opts) {
          var $a, $b, TMP_35, self = this;

          if (opts == null) {
            opts = $hash2([], {})
          }
          ($a = ($b = opts).$each_key, $a._p = (TMP_35 = function(k){var self = TMP_35._s || this, $a, $b, TMP_36;
if (k == null) k = nil;
          if ((($a = ($b = (k.$to_s().$split("_")['$[]'](0)['$==']("on")), $b !== false && $b !== nil ?self['$respond_to?'](("" + k.$to_s() + "="))['$!']() : $b)) !== nil && (!$a._isBoolean || $a == true))) {
              ($a = ($b = self).$send, $a._p = (TMP_36 = function(o){var self = TMP_36._s || this, $a;
                if (self._application == null) self._application = nil;
o = $slice.call(arguments, 0);
              return ($a = self._application).$send.apply($a, [opts['$[]'](k)].concat(o))}, TMP_36._s = self, TMP_36), $a).call($b, k);
              return nil;;};
            if ((($a = self['$respond_to?'](("" + k.$to_s() + "="))) !== nil && (!$a._isBoolean || $a == true))) {
              return self.$send(("" + k.$to_s() + "="), opts['$[]'](k))
              } else {
              return nil
            };}, TMP_35._s = self, TMP_35), $a).call($b);
          return self;
        };

        def['$sensitive='] = function(bool) {
          var self = this;

          return nil;
        };

        def['$sensitive?'] = function() {
          var self = this;

          return nil;
        };

        def['$tooltip='] = function(txt) {
          var self = this;

          return nil;
        };

        def.$show = function() {
          var self = this;

          return nil;
        };

        def.$show_all = function() {
          var self = this;

          return nil;
        };

        def.$hide = function() {
          var self = this;

          return nil;
        };

        def.$size = function() {
          var self = this;

          return nil;
        };

        def.$on_key_down = TMP_37 = function() {
          var self = this, $iter = TMP_37._p, b = $iter || nil;

          TMP_37._p = null;
          return nil;
        };

        def.$on_key_up = TMP_38 = function() {
          var self = this, $iter = TMP_38._p, b = $iter || nil;

          TMP_38._p = null;
          return nil;
        };

        def.$on_mouse_down = TMP_39 = function() {
          var self = this, $iter = TMP_39._p, b = $iter || nil;

          TMP_39._p = null;
          return nil;
        };

        def.$on_mouse_up = TMP_40 = function() {
          var self = this, $iter = TMP_40._p, b = $iter || nil;

          TMP_40._p = null;
          return nil;
        };

        def.$on_double_click = TMP_41 = function() {
          var self = this, $iter = TMP_41._p, b = $iter || nil;

          TMP_41._p = null;
          return nil;
        };

        def.$on_motion = TMP_42 = function() {
          var self = this, $iter = TMP_42._p, b = $iter || nil;

          TMP_42._p = null;
          return nil;
        };

        def.$on_focus = TMP_43 = function() {
          var self = this, $iter = TMP_43._p, b = $iter || nil;

          TMP_43._p = null;
          return nil;
        };

        def.$on_blur = TMP_44 = function() {
          var self = this, $iter = TMP_44._p, b = $iter || nil;

          TMP_44._p = null;
          return nil;
        };

        def.$on_mouse_enter = TMP_45 = function() {
          var self = this, $iter = TMP_45._p, b = $iter || nil;

          TMP_45._p = null;
          return nil;
        };

        def.$on_mouse_leave = TMP_46 = function() {
          var self = this, $iter = TMP_46._p, b = $iter || nil;

          TMP_46._p = null;
          return nil;
        };

        $opal.defs(self, '$constructor', TMP_47 = function(wrapper, o) {
          var self = this, $iter = TMP_47._p, b = $iter || nil;

          o = $slice.call(arguments, 1);
          TMP_47._p = null;
          return nil;
        });

        def.$container = function() {
          var self = this;

          return self._container;
        };

        self.$private();

        def.$set_container = function(container) {
          var self = this;

          return self._container = container;
        };

        return (def.$set_application = function(app) {
          var self = this;

          return self._application = app;
        }, nil) && 'set_application';
      })(self, null);

      (function($base) {
        var self = $module($base, 'Container');

        var def = self._proto, $scope = self._scope;

        def.$add = function(widget) {
          var self = this;

          return widget.$send("set_container", self);
        };

        def.$remove = function(widget) {
          var self = this;

          return nil;
        };
                ;$opal.donate(self, ["$add", "$remove"]);
      })(self);

      (function($base, $super) {
        function $Window(){};
        var self = $Window = $klass($base, $super, 'Window', $Window);

        var def = self._proto, $scope = self._scope, TMP_48, TMP_49;

        self.$include($scope.Container);

        def.$initialize = TMP_48 = function(opts) {var $zuper = $slice.call(arguments, 0);
          var $a, self = this, $iter = TMP_48._p, b = $iter || nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_48._p = null;
          $opal.find_super_dispatcher(self, 'initialize', TMP_48, $iter).apply(self, $zuper);
          if ((($a = opts['$[]']("size")) !== nil && (!$a._isBoolean || $a == true))) {
            return self['$default_size='](opts['$[]']("size"))
            } else {
            return nil
          };
        };

        def['$default_size='] = function(size) {
          var self = this;

          return nil;
        };

        def['$title='] = function(title) {
          var self = this;

          return nil;
        };

        def.$title = function() {
          var self = this;

          return nil;
        };

        def['$size='] = function(size) {
          var self = this;

          return nil;
        };

        return (def.$on_delete = TMP_49 = function() {
          var self = this, $iter = TMP_49._p, b = $iter || nil;

          TMP_49._p = null;
          return nil;
        }, nil) && 'on_delete';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Button(){};
        var self = $Button = $klass($base, $super, 'Button', $Button);

        var def = self._proto, $scope = self._scope, TMP_50;

        def.$label = function() {
          var self = this;

          return nil;
        };

        def['$label='] = function(txt) {
          var self = this;

          return nil;
        };

        return (def.$on_click = TMP_50 = function() {
          var self = this, $iter = TMP_50._p, b = $iter || nil;

          TMP_50._p = null;
          return nil;
        }, nil) && 'on_click';
      })(self, (($scope.PBR)._scope.UI)._scope.Widget);

      (function($base, $super) {
        function $Box(){};
        var self = $Box = $klass($base, $super, 'Box', $Box);

        var def = self._proto, $scope = self._scope;

        self.$include($scope.Container);

        return (def.$add = function(widget, expand, fill, pad) {
          var self = this;

          if (expand == null) {
            expand = true
          }
          if (fill == null) {
            fill = true
          }
          if (pad == null) {
            pad = 0
          }
          return nil;
        }, nil) && 'add';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Flow(){};
        var self = $Flow = $klass($base, $super, 'Flow', $Flow);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, (($scope.PBR)._scope.UI)._scope.Box);

      (function($base, $super) {
        function $Stack(){};
        var self = $Stack = $klass($base, $super, 'Stack', $Stack);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, (($scope.PBR)._scope.UI)._scope.Box);

      (function($base, $super) {
        function $Label(){};
        var self = $Label = $klass($base, $super, 'Label', $Label);

        var def = self._proto, $scope = self._scope;

        def.$text = function() {
          var self = this;

          return nil;
        };

        return (def['$text='] = function(txt) {
          var self = this;

          return nil;
        }, nil) && 'text=';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $ListBox(){};
        var self = $ListBox = $klass($base, $super, 'ListBox', $ListBox);

        var def = self._proto, $scope = self._scope, TMP_51, TMP_52, TMP_53, TMP_54;

        def['$items='] = function(a) {
          var self = this;

          return nil;
        };

        def.$items = TMP_51 = function() {
          var self = this, $iter = TMP_51._p, b = $iter || nil;

          TMP_51._p = null;
          return nil;
        };

        def.$indices = TMP_52 = function() {
          var self = this, $iter = TMP_52._p, b = $iter || nil;

          TMP_52._p = null;
          return nil;
        };

        def.$selection = function() {
          var self = this;

          return nil;
        };

        def.$select = function(i) {
          var self = this;

          return nil;
        };

        def.$select = function(i) {
          var self = this;

          return nil;
        };

        def.$select_next = function() {
          var self = this;

          return nil;
        };

        def.$select_before = function() {
          var self = this;

          return nil;
        };

        def.$on_item_activate = TMP_53 = function() {
          var self = this, $iter = TMP_53._p, b = $iter || nil;

          TMP_53._p = null;
          return nil;
        };

        return (def.$on_item_selected = TMP_54 = function() {
          var self = this, $iter = TMP_54._p, b = $iter || nil;

          TMP_54._p = null;
          return nil;
        }, nil) && 'on_item_selected';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $ListView(){};
        var self = $ListView = $klass($base, $super, 'ListView', $ListView);

        var def = self._proto, $scope = self._scope, TMP_55;

        (function($base, $super) {
          function $Item(){};
          var self = $Item = $klass($base, $super, 'Item', $Item);

          var def = self._proto, $scope = self._scope;

          self.$attr_reader("native");

          def.$label = function() {
            var self = this;

            return nil;
          };

          return (def['$label='] = function(txt) {
            var self = this;

            return nil;
          }, nil) && 'label=';
        })(self, null);

        (function($base, $super) {
          function $TextItem(){};
          var self = $TextItem = $klass($base, $super, 'TextItem', $TextItem);

          var def = self._proto, $scope = self._scope;

          return nil;
        })(self, $scope.Item);

        (function($base, $super) {
          function $RadioItem(){};
          var self = $RadioItem = $klass($base, $super, 'RadioItem', $RadioItem);

          var def = self._proto, $scope = self._scope;

          def.$value = function() {
            var self = this;

            return nil;
          };

          return (def['$value='] = function(bool) {
            var self = this;

            return nil;
          }, nil) && 'value=';
        })(self, $scope.Item);

        def.$item = function(idx) {
          var self = this;

          return nil;
        };

        def.$add = function(val, o) {
          var self = this;

          o = $slice.call(arguments, 1);
          return nil;
        };

        return (def.$items = TMP_55 = function() {
          var self = this, $iter = TMP_55._p, b = $iter || nil;

          TMP_55._p = null;
          return nil;
        }, nil) && 'items';
      })(self, $scope.ListBox);

      (function($base, $super) {
        function $ComboBox(){};
        var self = $ComboBox = $klass($base, $super, 'ComboBox', $ComboBox);

        var def = self._proto, $scope = self._scope;

        def.choices = nil;
        def['$choices='] = function(v) {
          var self = this;

          return self.choices = v;
        };

        def.$choices = function() {
          var self = this;

          return self.choices;
        };

        def.$value = function() {
          var self = this;

          return nil;
        };

        return (def['$value='] = function(i) {
          var self = this;

          return nil;
        }, nil) && 'value=';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Spinner(){};
        var self = $Spinner = $klass($base, $super, 'Spinner', $Spinner);

        var def = self._proto, $scope = self._scope, TMP_56;

        def.$value = function() {
          var self = this;

          return nil;
        };

        def['$value='] = function(val) {
          var self = this;

          return nil;
        };

        def.$min = function() {
          var self = this;

          return nil;
        };

        def.$max = function() {
          var self = this;

          return nil;
        };

        def['$min='] = function(min) {
          var self = this;

          return nil;
        };

        def['$max='] = function(max) {
          var self = this;

          return nil;
        };

        def.$step = function() {
          var self = this;

          return nil;
        };

        def['$step='] = function(amt) {
          var self = this;

          return nil;
        };

        def.$digits = function() {
          var self = this;

          return nil;
        };

        def['$digits='] = function(amt) {
          var self = this;

          return nil;
        };

        return (def.$on_change = TMP_56 = function() {
          var self = this, $iter = TMP_56._p, b = $iter || nil;

          TMP_56._p = null;
          return nil;
        }, nil) && 'on_change';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Rule(){};
        var self = $Rule = $klass($base, $super, 'Rule', $Rule);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Widget);

      (function($base, $super) {
        function $HRule(){};
        var self = $HRule = $klass($base, $super, 'HRule', $HRule);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Rule);

      (function($base, $super) {
        function $VRule(){};
        var self = $VRule = $klass($base, $super, 'VRule', $VRule);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Rule);

      (function($base, $super) {
        function $Scale(){};
        var self = $Scale = $klass($base, $super, 'Scale', $Scale);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Widget);

      (function($base, $super) {
        function $HScale(){};
        var self = $HScale = $klass($base, $super, 'HScale', $HScale);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Scale);

      (function($base, $super) {
        function $VScale(){};
        var self = $VScale = $klass($base, $super, 'VScale', $VScale);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Scale);

      (function($base, $super) {
        function $Toolbar(){};
        var self = $Toolbar = $klass($base, $super, 'Toolbar', $Toolbar);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.Container)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $ToolItem(){};
        var self = $ToolItem = $klass($base, $super, 'ToolItem', $ToolItem);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.Container)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $SeparatorToolItem(){};
        var self = $SeparatorToolItem = $klass($base, $super, 'SeparatorToolItem', $SeparatorToolItem);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.ToolItem);

      (function($base, $super) {
        function $ToolButton(){};
        var self = $ToolButton = $klass($base, $super, 'ToolButton', $ToolButton);

        var def = self._proto, $scope = self._scope, TMP_57;

        def.$image = function() {
          var self = this;

          return nil;
        };

        def.$label = function() {
          var self = this;

          return nil;
        };

        def['$label='] = function(txt) {
          var self = this;

          return nil;
        };

        return (def.$on_click = TMP_57 = function() {
          var self = this, $iter = TMP_57._p, b = $iter || nil;

          TMP_57._p = null;
          return nil;
        }, nil) && 'on_click';
      })(self, $scope.ToolItem);

      (function($base) {
        var self = $module($base, 'MenuShell');

        var def = self._proto, $scope = self._scope, TMP_58;

        self.$include($scope.Container);

        def.$item = TMP_58 = function(opt) {
          var self = this, $iter = TMP_58._p, b = $iter || nil;

          if (opt == null) {
            opt = $hash2([], {})
          }
          TMP_58._p = null;
          return nil;
        };
                ;$opal.donate(self, ["$item"]);
      })(self);

      (function($base, $super) {
        function $Menubar(){};
        var self = $Menubar = $klass($base, $super, 'Menubar', $Menubar);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.MenuShell)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Menu(){};
        var self = $Menu = $klass($base, $super, 'Menu', $Menu);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.MenuShell)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $MenuItem(){};
        var self = $MenuItem = $klass($base, $super, 'MenuItem', $MenuItem);

        var def = self._proto, $scope = self._scope, TMP_59, TMP_60;

        self.$include($scope.Container);

        def['$checked?'] = function() {
          var self = this;

          return nil;
        };

        def['$checked='] = function(bool) {
          var self = this;

          return nil;
        };

        def.$image = function(o) {
          var self = this;

          o = $slice.call(arguments, 0);
          return nil;
        };

        def.$menu = TMP_59 = function() {
          var self = this, $iter = TMP_59._p, b = $iter || nil;

          TMP_59._p = null;
          return nil;
        };

        def['$label='] = function(txt) {
          var self = this;

          return nil;
        };

        def.$label = function() {
          var self = this;

          return nil;
        };

        return (def.$on_activate = TMP_60 = function() {
          var self = this, $iter = TMP_60._p, b = $iter || nil;

          TMP_60._p = null;
          return nil;
        }, nil) && 'on_activate';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Entry(){};
        var self = $Entry = $klass($base, $super, 'Entry', $Entry);

        var def = self._proto, $scope = self._scope, TMP_61;

        def['$text='] = function(txt) {
          var self = this;

          return nil;
        };

        def.$text = function() {
          var self = this;

          return nil;
        };

        return (def.$on_activate = TMP_61 = function() {
          var self = this, $iter = TMP_61._p, b = $iter || nil;

          TMP_61._p = null;
          return nil;
        }, nil) && 'on_activate';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Frame(){};
        var self = $Frame = $klass($base, $super, 'Frame', $Frame);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.Container)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $ScrolledView(){};
        var self = $ScrolledView = $klass($base, $super, 'ScrolledView', $ScrolledView);

        var def = self._proto, $scope = self._scope;

        return self.$include($scope.Container)
      })(self, $scope.Widget);

      (function($base, $super) {
        function $TextView(){};
        var self = $TextView = $klass($base, $super, 'TextView', $TextView);

        var def = self._proto, $scope = self._scope, TMP_62, TMP_63, TMP_64, TMP_65;

        def.source_loaded_cb = def.on_toggle_modify_cb = def.on_unmodify_cb = def.on_modify_cb = nil;
        def.$text = function() {
          var self = this;

          return nil;
        };

        def['$text='] = function(txt) {
          var self = this;

          return nil;
        };

        def['$src='] = function(src) {
          var self = this;

          return nil;
        };

        def.$undo = function() {
          var self = this;

          return nil;
        };

        def.$redo = function() {
          var self = this;

          return nil;
        };

        def.$cut = function() {
          var self = this;

          return nil;
        };

        def.$copy = function() {
          var self = this;

          return nil;
        };

        def.$paste = function() {
          var self = this;

          return nil;
        };

        def.$delete = function() {
          var self = this;

          return nil;
        };

        def.$bold = function() {
          var self = this;

          return nil;
        };

        def.$underline = function() {
          var self = this;

          return nil;
        };

        def.$italic = function() {
          var self = this;

          return nil;
        };

        def.$strikethrough = function() {
          var self = this;

          return nil;
        };

        def.$indent = function() {
          var self = this;

          return nil;
        };

        def.$outdent = function() {
          var self = this;

          return nil;
        };

        def['$unmodified='] = function(bool) {
          var self = this;

          return nil;
        };

        def['$modified?'] = function() {
          var self = this;

          return nil;
        };

        def.$on_modify = TMP_62 = function() {
          var self = this, $iter = TMP_62._p, b = $iter || nil;

          TMP_62._p = null;
          return self.on_modify_cb = b;
        };

        def.$on_unmodify = TMP_63 = function() {
          var self = this, $iter = TMP_63._p, b = $iter || nil;

          TMP_63._p = null;
          return self.on_unmodify_cb = b;
        };

        def.$on_toggle_modify = TMP_64 = function() {
          var self = this, $iter = TMP_64._p, b = $iter || nil;

          TMP_64._p = null;
          return self.on_toggle_modify_cb = b;
        };

        def.$on_source_load = TMP_65 = function() {
          var self = this, $iter = TMP_65._p, b = $iter || nil;

          TMP_65._p = null;
          return self.source_loaded_cb = b;
        };

        self.$private();

        def.$source_loaded = function() {
          var $a, self = this;

          if ((($a = self.source_loaded_cb) !== nil && (!$a._isBoolean || $a == true))) {
            return self.source_loaded_cb.$call(self)
            } else {
            return nil
          };
        };

        def.$unmodified = function() {
          var self = this, evt = nil, cb = nil;

          evt = ((($scope.PBR)._scope.UI)._scope.Gtk)._scope.GenericEvent.$new(self);
          cb = self.on_toggle_modify_cb;
          if (cb !== false && cb !== nil) {
            cb.$call(evt)};
          cb = self.on_unmodify_cb;
          if (cb !== false && cb !== nil) {
            return cb.$call(evt)
            } else {
            return nil
          };
        };

        return (def.$modified = function() {
          var self = this, evt = nil, cb = nil;

          evt = ((($scope.PBR)._scope.UI)._scope.Gtk)._scope.GenericEvent.$new(self);
          cb = self.on_toggle_modify_cb;
          if (cb !== false && cb !== nil) {
            cb.$call(evt)};
          cb = self.on_modify_cb;
          if (cb !== false && cb !== nil) {
            return cb.$call(evt)
            } else {
            return nil
          };
        }, nil) && 'modified';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Image(){};
        var self = $Image = $klass($base, $super, 'Image', $Image);

        var def = self._proto, $scope = self._scope, TMP_66;

        def.src = def.file = def.init_src_cb = def.on_src_load_cb = nil;
        def.$src = function() {
          var self = this;

          return self.src;
        };

        def['$theme='] = function(theme) {
          var self = this;

          return nil;
        };

        def.$theme = function() {
          var self = this;

          return nil;
        };

        def.$file = function() {
          var self = this;

          return self.file;
        };

        def['$src='] = function(src) {
          var self = this;

          self.file = nil;
          return self.src = src;
        };

        def['$file='] = function(file) {
          var self = this;

          self.src = nil;
          return self.file = file;
        };

        def['$size='] = function(size) {
          var self = this;

          return nil;
        };

        def.$size = function() {
          var self = this;

          return nil;
        };

        def.$width = function() {
          var self = this;

          return self.$size()['$[]'](0);
        };

        def.$height = function() {
          var self = this;

          return self.$size()['$[]'](1);
        };

        def['$height='] = function(h) {
          var self = this, size = nil;

          return size = [self.$width(), h];
        };

        def['$width='] = function(w) {
          var self = this, size = nil;

          return size = [w, self.$height()];
        };

        def.$on_source_load = TMP_66 = function() {
          var self = this, $iter = TMP_66._p, b = $iter || nil;

          TMP_66._p = null;
          return self.on_src_load_cb = b;
        };

        self.$private();

        return (def.$source_loaded = function() {
          var $a, self = this, cb = nil;

          if ((($a = cb = self.init_src_cb) !== nil && (!$a._isBoolean || $a == true))) {
            cb.$call(self);
            self.init_src_cb = nil;};
          if ((($a = cb = self.on_src_load_cb) !== nil && (!$a._isBoolean || $a == true))) {
            return cb.$call(self)
            } else {
            return nil
          };
        }, nil) && 'source_loaded';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Book(){};
        var self = $Book = $klass($base, $super, 'Book', $Book);

        var def = self._proto, $scope = self._scope, TMP_68, TMP_69;

        def.on_close_cb = nil;
        self.$include($scope.Container);

        (function($base, $super) {
          function $Page(){};
          var self = $Page = $klass($base, $super, 'Page', $Page);

          var def = self._proto, $scope = self._scope, TMP_67;

          self.$include($scope.Container);

          self.$attr_reader("book");

          return (def.$initialize = TMP_67 = function(book, opts) {
            var self = this, $iter = TMP_67._p, $yield = $iter || nil;

            if (opts == null) {
              opts = $hash2([], {})
            }
            TMP_67._p = null;
            self.book = book;
            return $opal.find_super_dispatcher(self, 'initialize', TMP_67, null).apply(self, [opts]);
          }, nil) && 'initialize';
        })(self, $scope.Widget);

        def.$page = function() {
          var self = this;

          return nil;
        };

        def['$page='] = function(i) {
          var self = this;

          return nil;
        };

        def.$on_page_changed = TMP_68 = function() {
          var self = this, $iter = TMP_68._p, b = $iter || nil;

          TMP_68._p = null;
          return nil;
        };

        def.$on_close = TMP_69 = function() {
          var self = this, $iter = TMP_69._p, b = $iter || nil;

          TMP_69._p = null;
          return self.on_close_cb = b;
        };

        self.$private();

        def.$nice_child = function(widget) {
          var $a, self = this, pg = nil;

          if ((($a = widget['$is_a?']((self.$class())._scope.Page)) !== nil && (!$a._isBoolean || $a == true))) {
            pg = widget
            } else {
            pg = (self.$class())._scope.Page.$new(self);
            pg.$add(widget);
          };
          return pg;
        };

        return (def.$closed_button_pressed = function(pg) {
          var $a, self = this, cb = nil;

          if ((($a = cb = self.on_close_cb) !== nil && (!$a._isBoolean || $a == true))) {
            if ((($a = cb.$call(pg)) !== nil && (!$a._isBoolean || $a == true))) {
              return nil
              } else {
              return self.$remove(pg)
            }
            } else {
            return self.$remove(pg)
          };
        }, nil) && 'closed_button_pressed';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $Notebook(){};
        var self = $Notebook = $klass($base, $super, 'Notebook', $Notebook);

        var def = self._proto, $scope = self._scope;

        return (function($base, $super) {
          function $Page(){};
          var self = $Page = $klass($base, $super, 'Page', $Page);

          var def = self._proto, $scope = self._scope;

          def['$label='] = function(txt) {
            var self = this;

            return nil;
          };

          def.$label = function() {
            var self = this;

            return nil;
          };

          return (def.$image = function(opts) {
            var self = this;

            if (opts == null) {
              opts = nil
            }
            return nil;
          }, nil) && 'image';
        })(self, ($scope.Book)._scope.Page)
      })(self, $scope.Book);

      (function($base, $super) {
        function $Canvas(){};
        var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Widget);

      (function($base, $super) {
        function $HtmlView(){};
        var self = $HtmlView = $klass($base, $super, 'HtmlView', $HtmlView);

        var def = self._proto, $scope = self._scope;

        def.$load = function(html) {
          var self = this;

          return nil;
        };

        return (def['$html='] = function(html) {
          var self = this;

          return nil;
        }, nil) && 'html=';
      })(self, $scope.Widget);

      (function($base, $super) {
        function $WebView(){};
        var self = $WebView = $klass($base, $super, 'WebView', $WebView);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Widget);
      
    })(self)
    
  })(self)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module, $klass = $opal.klass, $hash2 = $opal.hash2;

  $opal.add_stubs(['$extend', '$register', '$[]', '$[]=', '$create', '$append_to', '$native', '$toplevel', '$create_append_build', '$to_proc', '$alert', '$confirm', '$prompt', '$raise', '$!', '$new', '$include', '$type', '$===', '$==', '$state', '$attr_reader', '$allocate', '$instance_variable_set', '$connect', '$send', '$add', '$empty?', '$wrap', '$icon', '$modify', '$image', '$icon_pos=', '$define', '$pos_x=', '$pos_y=', '$position=', '$size=', '$title=', '$title', '$pack_start', '$set_reserve_toggle_size', '$delete', '$label=', '$label', '$map', '$times', '$call', '$<<', '$+', '$length', '$private', '$value', '$value=', '$item', '$find', '$is_a?', '$const_get', '$class', '$index', '$indices', '$align=', '$text=', '$text', '$split', '$shift', '$join', '$theme=', '$each_pair', '$to_s', '$get_icon_theme', '$icon_from_theme', '$src=', '$height=', '$width=', '$nice_child', '$append_page', '$signal_connect', '$veto?', '$stop?', '$cmd', '$execute_script', '$get_inner_text', '$get_element_by_id', '$document', '$set_caret', '$insert', '$get_inner_html', '$internal', '$check_modify', '$http_request', '$body', '$source_loaded', '$on?', '$off?']);
  return (function($base) {
    var self = $module($base, 'Opal');

    var def = self._proto, $scope = self._scope;

    self.$extend((($scope.PBR)._scope.UI)._scope.Backend);

    $opal.defs(self, '$init', function() {
      var self = this;

      return nil;
    });

    $opal.defs(self, '$main', function() {
      var self = this;

      return nil;
    });

    $opal.defs(self, '$quit', function() {
      var self = this;

      return nil;
    });

    (function($base, $super) {
      function $App(){};
      var self = $App = $klass($base, $super, 'App', $App);

      var def = self._proto, $scope = self._scope, TMP_1, TMP_2, TMP_3;

      (($scope.PBR)._scope.UI)._scope.Opal.$register(self);

      def.$initialize = TMP_1 = function(opts) {
        var $a, $b, $c, $d, self = this, $iter = TMP_1._p, $yield = $iter || nil, screen = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_1._p = null;
        screen = ($a = "screen", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, ((($d = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $d))._scope.Screen.$create())));
        $opal.find_super_dispatcher(self, 'initialize', TMP_1, null).apply(self, [opts]);
        return self.$toplevel().$native().$append_to(screen);
      };

      def.$display = function() {
        var self = this;

        return nil;
      };

      def.$on_run = TMP_2 = function() {
        var self = this, $iter = TMP_2._p, b = $iter || nil;

        TMP_2._p = null;
        return nil;
      };

      def.$toggle = TMP_3 = function(opts) {
        var $a, $b, self = this, $iter = TMP_3._p, b = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_3._p = null;
        return ($a = ($b = self).$create_append_build, $a._p = b.$to_proc(), $a).call($b, "ToggleButton", opts);
      };

      def.$alert = function(title, body) {
        var self = this;

        if (title == null) {
          title = ""
        }
        if (body == null) {
          body = ""
        }
        return self.$alert(body);
      };

      def.$confirm = function(title, body) {
        var self = this;

        if (title == null) {
          title = ""
        }
        if (body == null) {
          body = ""
        }
        return self.$confirm(body);
      };

      def.$prompt = function(title, body, value) {
        var self = this;

        if (title == null) {
          title = ""
        }
        if (body == null) {
          body = ""
        }
        if (value == null) {
          value = ""
        }
        return self.$prompt(body, value);
      };

      return (def.$prompt_path = function(opts) {
        var self = this;

        if (opts == null) {
          opts = $hash2([], {})
        }
        return self.$raise("NotSupported");
      }, nil) && 'prompt_path';
    })(self, (($scope.PBR)._scope.UI)._scope.App);

    (function($base) {
      var self = $module($base, 'Event');

      var def = self._proto, $scope = self._scope;

      def.$veto = function() {
        var self = this;

        return self.veto = true;
      };

      def.$stop = function() {
        var self = this;

        return self.stop = true;
      };

      def['$veto?'] = function() {
        var self = this;
        if (self.veto == null) self.veto = nil;

        return self.veto['$!']()['$!']();
      };

      def['$stop?'] = function() {
        var self = this;
        if (self.stop == null) self.stop = nil;

        return self.stop['$!']()['$!']();
      };
            ;$opal.donate(self, ["$veto", "$stop", "$veto?", "$stop?"]);
    })(self);

    (function($base) {
      var self = $module($base, 'EventClass');

      var def = self._proto, $scope = self._scope, TMP_4;

      def.$connect = TMP_4 = function(widget, event, data) {
        var self = this, $iter = TMP_4._p, b = $iter || nil;

        if (data == null) {
          data = nil
        }
        TMP_4._p = null;
        return nil;
      };

      def.$create = function(widget, data, o) {
        var self = this, i = nil;

        o = $slice.call(arguments, 2);
        return i = self.$new(widget, data);
      };
            ;$opal.donate(self, ["$connect", "$create"]);
    })(self);

    (function($base, $super) {
      function $GenericEvent(){};
      var self = $GenericEvent = $klass($base, $super, 'GenericEvent', $GenericEvent);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Event);

      return self.$extend(((($scope.PBR)._scope.UI)._scope.Opal)._scope.EventClass);
    })(self, (($scope.PBR)._scope.UI)._scope.GenericEvent);

    (function($base, $super) {
      function $BookPageEvent(){};
      var self = $BookPageEvent = $klass($base, $super, 'BookPageEvent', $BookPageEvent);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Event);

      self.$extend(((($scope.PBR)._scope.UI)._scope.Opal)._scope.EventClass);

      return ($opal.defs(self, '$create', function(widget, data, pg, n, o) {
        var self = this;

        o = $slice.call(arguments, 4);
        if (data == null) {
          data = nil
        }
        if (pg == null) {
          pg = nil
        }
        if (n == null) {
          n = nil
        }
        return self.$new(widget, n);
      }), nil) && 'create';
    })(self, (($scope.PBR)._scope.UI)._scope.GenericEvent);

    (function($base, $super) {
      function $KeyEvent(){};
      var self = $KeyEvent = $klass($base, $super, 'KeyEvent', $KeyEvent);

      var def = self._proto, $scope = self._scope, TMP_5;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Event);

      self.$extend(((($scope.PBR)._scope.UI)._scope.Opal)._scope.EventClass);

      def.$initialize = TMP_5 = function(event, o) {
        var self = this, $iter = TMP_5._p, $yield = $iter || nil;

        o = $slice.call(arguments, 1);
        TMP_5._p = null;
        $opal.find_super_dispatcher(self, 'initialize', TMP_5, null).apply(self, [].concat(o));
        return self["native"] = event;
      };

      def.$state = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$type = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$keyval = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$press?'] = function() {
        var self = this, $case = nil;

        $case = self.$type();if (((($scope.PBR)._scope.UI)._scope.EventType)._scope.KEY_PRESS['$===']($case)) {return true};
        return false;
      };

      def['$release?'] = function() {
        var self = this, $case = nil;

        $case = self.$type();if (((($scope.PBR)._scope.UI)._scope.EventType)._scope.KEY_RELEASE['$===']($case)) {return true};
        return false;
      };

      def['$ctrl?'] = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$alt?'] = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$shift?'] = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$modifiers?'] = function() {
        var self = this;

        return self.$state()['$=='](0)['$!']();
      };

      return ($opal.defs(self, '$create', function(widget, data, o) {
        var self = this;

        o = $slice.call(arguments, 2);
        if (data == null) {
          data = nil
        }
        return self.$raise("NotImplemented");
      }), nil) && 'create';
    })(self, (($scope.PBR)._scope.UI)._scope.KeyEvent);

    (function($base, $super) {
      function $MouseEvent(){};
      var self = $MouseEvent = $klass($base, $super, 'MouseEvent', $MouseEvent);

      var def = self._proto, $scope = self._scope, TMP_6;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Event);

      self.$extend(((($scope.PBR)._scope.UI)._scope.Opal)._scope.EventClass);

      self.$attr_reader("native");

      def.$initialize = TMP_6 = function(native$, o) {
        var self = this, $iter = TMP_6._p, $yield = $iter || nil;

        o = $slice.call(arguments, 1);
        TMP_6._p = null;
        $opal.find_super_dispatcher(self, 'initialize', TMP_6, null).apply(self, [].concat(o));
        return self["native"] = native$;
      };

      def.$type = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$button = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$x = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$y = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      return ($opal.defs(self, '$create', function(widget, data, o) {
        var self = this;

        o = $slice.call(arguments, 2);
        if (data == null) {
          data = nil
        }
        return self.$raise("NotImplemented");
      }), nil) && 'create';
    })(self, (($scope.PBR)._scope.UI)._scope.MouseEvent);

    (function($base, $super) {
      function $MotionEvent(){};
      var self = $MotionEvent = $klass($base, $super, 'MotionEvent', $MotionEvent);

      var def = self._proto, $scope = self._scope, TMP_7;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Event);

      self.$extend(((($scope.PBR)._scope.UI)._scope.Opal)._scope.EventClass);

      self.$attr_reader("native");

      def.$initialize = TMP_7 = function(native$, o) {
        var self = this, $iter = TMP_7._p, $yield = $iter || nil;

        o = $slice.call(arguments, 1);
        TMP_7._p = null;
        $opal.find_super_dispatcher(self, 'initialize', TMP_7, null).apply(self, [].concat(o));
        return self["native"] = native$;
      };

      def.$x = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$y = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      return ($opal.defs(self, '$create', function(widget, data, o) {
        var self = this;

        o = $slice.call(arguments, 2);
        if (data == null) {
          data = nil
        }
        return self.$raise("NotImplemented");
      }), nil) && 'create';
    })(self, (($scope.PBR)._scope.UI)._scope.MotionEvent);

    (function($base) {
      var self = $module($base, 'Widget');

      var def = self._proto, $scope = self._scope, TMP_8, TMP_9, TMP_10, TMP_11, TMP_12, TMP_13, TMP_14, TMP_15, TMP_16, TMP_17;

      $opal.defs(self, '$included', function(cls) {
        var self = this;

        return ($opal.defs(cls, '$wrap', function(native$) {
          var self = this, ins = nil;

          ins = self.$allocate();
          ins.$instance_variable_set("@native", native$);
          return ins;
        }), nil) && 'wrap';
      });

      def['$sensitive?'] = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$sensitive='] = function(bool) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$tooltip='] = function(txt) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$show = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$show_all = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$hide = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$size = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$on_key_up = TMP_8 = function() {
        var $a, $b, self = this, $iter = TMP_8._p, b = $iter || nil;

        TMP_8._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.KeyEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "key-release-event");
      };

      def.$on_key_down = TMP_9 = function() {
        var $a, $b, self = this, $iter = TMP_9._p, b = $iter || nil;

        TMP_9._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.KeyEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "key-press-event");
      };

      def.$on_mouse_down = TMP_10 = function() {
        var $a, $b, self = this, $iter = TMP_10._p, b = $iter || nil;

        TMP_10._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.MouseEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "button-press-event");
      };

      def.$on_mouse_up = TMP_11 = function() {
        var $a, $b, self = this, $iter = TMP_11._p, b = $iter || nil;

        TMP_11._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.MouseEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "button-release-event");
      };

      def.$on_double_click = TMP_12 = function() {
        var self = this, $iter = TMP_12._p, b = $iter || nil;

        TMP_12._p = null;
        return self.$raise("NotImplemented");
      };

      def.$on_motion = TMP_13 = function() {
        var self = this, $iter = TMP_13._p, b = $iter || nil;

        TMP_13._p = null;
        return self.$raise("NotImplemented");
      };

      def.$on_focus = TMP_14 = function() {
        var self = this, $iter = TMP_14._p, b = $iter || nil;

        TMP_14._p = null;
        return self.$raise("NotImplemented");
      };

      def.$on_blur = TMP_15 = function() {
        var self = this, $iter = TMP_15._p, b = $iter || nil;

        TMP_15._p = null;
        return self.$raise("NotImplemented");
      };

      def.$on_mouse_enter = TMP_16 = function() {
        var self = this, $iter = TMP_16._p, b = $iter || nil;

        TMP_16._p = null;
        return self.$raise("NotImplemented");
      };

      def.$on_mouse_leave = TMP_17 = function() {
        var self = this, $iter = TMP_17._p, b = $iter || nil;

        TMP_17._p = null;
        return self.$raise("NotImplemented");
      };
            ;$opal.donate(self, ["$sensitive?", "$sensitive=", "$tooltip=", "$show", "$show_all", "$hide", "$size", "$on_key_up", "$on_key_down", "$on_mouse_down", "$on_mouse_up", "$on_double_click", "$on_motion", "$on_focus", "$on_blur", "$on_mouse_enter", "$on_mouse_leave"]);
    })(self);

    (function($base) {
      var self = $module($base, 'Container');

      var def = self._proto, $scope = self._scope;

      def.$add = function(widget) {
        var self = this;

        widget.$send("set_container", self);
        return self.$native().$add(widget.$native());
      };

      def.$remove = function(widget) {
        var self = this;

        return self.$raise("NotImplemented: `Container#remove`");
      };
            ;$opal.donate(self, ["$add", "$remove"]);
    })(self);

    (function($base) {
      var self = $module($base, 'Iconable');

      var def = self._proto, $scope = self._scope;

      def.$image = function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        if ((($a = o['$empty?']()) !== nil && (!$a._isBoolean || $a == true))) {
          return ((($scope.PBR)._scope.UI)._scope.Opal)._scope.Image.$wrap(self.$native().$icon())};
        return self.$image().$modify(o['$[]'](0));
      };

      def['$icon_position='] = function(pos) {
        var self = this, $case = nil;

        return (function() {$case = pos;if (((($scope.PBR)._scope.UI)._scope.IconLocation)._scope.RIGHT['$===']($case)) {return self.$native()['$icon_pos='](pos)}else if (((($scope.PBR)._scope.UI)._scope.IconLocation)._scope.LEFT['$===']($case)) {return self.$native()['$icon_pos='](pos)}else {return self.$raise("Invalid icon_position: `" + (pos) + "`")}})();
      };
            ;$opal.donate(self, ["$image", "$icon_position="]);
    })(self);

    (function($base, $super) {
      function $Window(){};
      var self = $Window = $klass($base, $super, 'Window', $Window);

      var def = self._proto, $scope = self._scope, TMP_18, TMP_19;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      self.$define((($scope.UI)._scope.Opal)._scope.Window);

      $opal.defs(self, '$constructor', TMP_18 = function(wrapper, o) {
        var $a, self = this, $iter = TMP_18._p, b = $iter || nil;

        o = $slice.call(arguments, 1);
        TMP_18._p = null;
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Window.$new();
      });

      def['$pos_x='] = function(x) {
        var self = this;

        return self.$native()['$pos_x='](x);
      };

      def['$pos_y='] = function(y) {
        var self = this;

        return self.$native()['$pos_y='](y);
      };

      def['$position='] = function(o) {
        var self = this;

        o = $slice.call(arguments, 0);
        return self.$native()['$position='](o);
      };

      def['$default_size='] = function(size) {
        var self = this;

        return self['$size='](size);
      };

      def['$title='] = function(title) {
        var self = this;

        return self.$native()['$title='](title);
      };

      def.$title = function() {
        var self = this;

        return self.$native().$title();
      };

      def.$size = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$size='] = function(size) {
        var self = this;

        return self.$native()['$size='](size);
      };

      return (def.$on_delete = TMP_19 = function() {
        var $a, $b, self = this, $iter = TMP_19._p, b = $iter || nil;

        TMP_19._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "delete-event");
      }, nil) && 'on_delete';
    })(self, (($scope.PBR)._scope.UI)._scope.Window);

    (function($base) {
      var self = $module($base, 'Box');

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      def.$add = function(widget, expand, fill, pad) {
        var self = this;

        if (expand == null) {
          expand = true
        }
        if (fill == null) {
          fill = true
        }
        if (pad == null) {
          pad = 0
        }
        return self.$native().$pack_start(widget.$native(), expand, fill, pad);
      };
            ;$opal.donate(self, ["$add"]);
    })(self);

    (function($base, $super) {
      function $Flow(){};
      var self = $Flow = $klass($base, $super, 'Flow', $Flow);

      var def = self._proto, $scope = self._scope, TMP_20;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Box);

      return ($opal.defs(self, '$constructor', TMP_20 = function(wrapped, opts) {
        var $a, $b, $c, self = this, $iter = TMP_20._p, b = $iter || nil, same_major_size = nil, spacing = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_20._p = null;
        same_major_size = opts['$[]']("same_major_size")['$!']()['$!']();
        spacing = ($a = "spacing", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, 0)));
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.HBox.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.Flow);

    (function($base) {
      var self = $module($base, 'Rule');

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget)
      
    })(self);

    (function($base, $super) {
      function $HRule(){};
      var self = $HRule = $klass($base, $super, 'HRule', $HRule);

      var def = self._proto, $scope = self._scope;

      self.$include($scope.Rule);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.HSeparator.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.HRule);

    (function($base, $super) {
      function $VRule(){};
      var self = $VRule = $klass($base, $super, 'VRule', $VRule);

      var def = self._proto, $scope = self._scope;

      self.$include($scope.Rule);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.VSeparator.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.VRule);

    (function($base) {
      var self = $module($base, 'MenuShell');

      var def = self._proto, $scope = self._scope, TMP_21;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      def.$add = function(widget) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$item = TMP_21 = function(opts) {
        var self = this, $iter = TMP_21._p, b = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_21._p = null;
        return self.$raise("NotImplemented");
      };
            ;$opal.donate(self, ["$add", "$item"]);
    })(self);

    (function($base, $super) {
      function $Menubar(){};
      var self = $Menubar = $klass($base, $super, 'Menubar', $Menubar);

      var def = self._proto, $scope = self._scope, TMP_22;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.MenuShell);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.MenuBar.$new();
      });

      return (def.$item = TMP_22 = function(opts) {
        var self = this, $iter = TMP_22._p, b = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_22._p = null;
        return self.$raise("NotImplemented");
      }, nil) && 'item';
    })(self, (($scope.PBR)._scope.UI)._scope.Menubar);

    (function($base, $super) {
      function $Menu(){};
      var self = $Menu = $klass($base, $super, 'Menu', $Menu);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.MenuShell);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this, m = nil;

        o = $slice.call(arguments, 0);
        m = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Menu.$new();
        m.$set_reserve_toggle_size(self.$raise("NotImplemented"));
        return m;
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.Menu);

    (function($base, $super) {
      function $MenuItem(){};
      var self = $MenuItem = $klass($base, $super, 'MenuItem', $MenuItem);

      var def = self._proto, $scope = self._scope, TMP_23, TMP_24, TMP_25, TMP_26;

      self.$include($scope.Widget);

      self.$include($scope.Container);

      $opal.defs(self, '$constructor', TMP_23 = function(wrapper, opts, o) {
        var $a, self = this, $iter = TMP_23._p, b = $iter || nil, $case = nil, i = nil;

        o = $slice.call(arguments, 2);
        TMP_23._p = null;
        $case = opts['$[]']("type");if (((($scope.PBR)._scope.UI)._scope.MenuItemType)._scope.TEXT['$===']($case)) {i = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.MenuItem.$new()}else if (((($scope.PBR)._scope.UI)._scope.MenuItemType)._scope.ICON['$===']($case)) {i = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.MenuItem.$new()}else if (((($scope.PBR)._scope.UI)._scope.MenuItemType)._scope.CHECKED['$===']($case)) {i = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.CheckMenuItem.$new()};
        self.$raise("NotImplemented");
        return i;
      });

      def.$initialize = TMP_24 = function(opts) {
        var $a, $b, $c, self = this, $iter = TMP_24._p, $yield = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_24._p = null;
        self.type = ($a = "type", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, ((($scope.PBR)._scope.UI)._scope.MenuItemType)._scope.TEXT)));
        $opal.find_super_dispatcher(self, 'initialize', TMP_24, null).apply(self, [opts]);
        return self.$raise("NotImplemented");
      };

      def.$image = function(o) {
        var self = this;

        o = $slice.call(arguments, 0);
        return self.$raise("NotImplemented");
      };

      def['$checked='] = function(bool) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$checked?'] = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$label = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$label='] = function(txt) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$add = function(widget) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$on_activate = TMP_25 = function() {
        var self = this, $iter = TMP_25._p, b = $iter || nil;

        TMP_25._p = null;
        return self.$raise("NotImplemented");
      };

      return (def.$menu = TMP_26 = function() {
        var self = this, $iter = TMP_26._p, b = $iter || nil;

        TMP_26._p = null;
        return self.$raise("NotImplemented");
      }, nil) && 'menu';
    })(self, (($scope.PBR)._scope.UI)._scope.MenuItem);

    (function($base, $super) {
      function $Stack(){};
      var self = $Stack = $klass($base, $super, 'Stack', $Stack);

      var def = self._proto, $scope = self._scope, TMP_27;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Box);

      return ($opal.defs(self, '$constructor', TMP_27 = function(wrapped, opts) {
        var $a, $b, $c, self = this, $iter = TMP_27._p, b = $iter || nil, same_major_size = nil, spacing = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_27._p = null;
        same_major_size = opts['$[]']("same_major_size")['$!']()['$!']();
        spacing = ($a = "spacing", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, 0)));
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.VBox.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.Stack);

    (function($base, $super) {
      function $Button(){};
      var self = $Button = $klass($base, $super, 'Button', $Button);

      var def = self._proto, $scope = self._scope, TMP_28, TMP_29;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this, n = nil;

        o = $slice.call(arguments, 0);
        return n = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Button.$new();
      });

      def.$initialize = TMP_28 = function(opts) {
        var self = this, $iter = TMP_28._p, $yield = $iter || nil, label = nil, theme = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_28._p = null;
        label = opts.$delete("label");
        theme = opts.$delete("theme");
        $opal.find_super_dispatcher(self, 'initialize', TMP_28, null).apply(self, [opts]);
        if (label !== false && label !== nil) {
          self['$label='](label)};
        if (theme !== false && theme !== nil) {
          return self.$raise("NotImplemented: Button#theme")
          } else {
          return nil
        };
      };

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Iconable);

      def.$label = function() {
        var self = this;

        return self.$native().$label();
      };

      def['$label='] = function(txt) {
        var self = this;

        return self.$native()['$label='](txt);
      };

      return (def.$on_click = TMP_29 = function() {
        var $a, $b, self = this, $iter = TMP_29._p, b = $iter || nil;

        TMP_29._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "clicked");
      }, nil) && 'on_click';
    })(self, (($scope.PBR)._scope.UI)._scope.Button);

    (function($base) {
      var self = $module($base, 'ListCtrl');

      var def = self._proto, $scope = self._scope, TMP_31, TMP_32, TMP_33;

      def.$select_next = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$select = function(i) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$select_before = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$items='] = function(a) {
        var $a, $b, TMP_30, self = this;

        ($a = ($b = a).$map, $a._p = (TMP_30 = function(v){var self = TMP_30._s || this;
if (v == null) v = nil;
        return self.$native().$add(v)}, TMP_30._s = self, TMP_30), $a).call($b);
        return a;
      };

      def.$selection = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$on_item_activate = TMP_31 = function() {
        var self = this, $iter = TMP_31._p, b = $iter || nil;

        TMP_31._p = null;
        return self.on_item_activate_cb = b;
      };

      def.$on_item_selected = TMP_32 = function() {
        var self = this, $iter = TMP_32._p, b = $iter || nil;

        TMP_32._p = null;
        return self.on_item_selected_cb = b;
      };

      def.$indices = TMP_33 = function() {
        var $a, $b, TMP_34, self = this, $iter = TMP_33._p, b = $iter || nil, c = nil, a = nil;

        TMP_33._p = null;
        c = 0;
        a = [];
        ($a = ($b = self.$native().$send("items").$length()).$times, $a._p = (TMP_34 = function(){var self = TMP_34._s || this;

        if (b !== false && b !== nil) {
            b.$call(c)};
          a['$<<'](c);
          return c = c['$+'](1);}, TMP_34._s = self, TMP_34), $a).call($b);
        return a;
      };
            ;$opal.donate(self, ["$select_next", "$select", "$select_before", "$items=", "$selection", "$on_item_activate", "$on_item_selected", "$indices"]);
    })((($scope.PBR)._scope.UI)._scope.Opal);

    (function($base, $super) {
      function $ListBox(){};
      var self = $ListBox = $klass($base, $super, 'ListBox', $ListBox);

      var def = self._proto, $scope = self._scope, TMP_35;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.ListCtrl);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$new();
      });

      return (def.$items = TMP_35 = function() {
        var $a, $b, TMP_36, self = this, $iter = TMP_35._p, b = $iter || nil, c = nil, a = nil;

        TMP_35._p = null;
        c = 0;
        a = [];
        ($a = ($b = self.$native().$send("items").$length()).$times, $a._p = (TMP_36 = function(){var self = TMP_36._s || this, item = nil;

        item = self.$native().$send("item", c);
          if (b !== false && b !== nil) {
            b.$call(item.$label(), c)};
          c = c['$+'](1);
          return a['$<<'](item.$label());}, TMP_36._s = self, TMP_36), $a).call($b);
        return a;
      }, nil) && 'items';
    })(self, (($scope.PBR)._scope.UI)._scope.ListBox);

    (function($base, $super) {
      function $ListView(){};
      var self = $ListView = $klass($base, $super, 'ListView', $ListView);

      var def = self._proto, $scope = self._scope, TMP_40;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.ListCtrl);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$new();
      });

      (function($base, $super) {
        function $Item(){};
        var self = $Item = $klass($base, $super, 'Item', $Item);

        var def = self._proto, $scope = self._scope;

        self.$attr_reader("native");

        def.$label = function() {
          var self = this;

          return self.$native().$label();
        };

        def['$label='] = function(txt) {
          var self = this;

          return self.$native()['$label='](txt);
        };

        self.$private();

        return ($opal.defs(self, '$wrap', function(n) {
          var self = this, ins = nil;

          ins = self.$new();
          ins.$instance_variable_set("@native", n);
          return ins;
        }), nil) && 'wrap';
      })(self, null);

      (function($base, $super) {
        function $TextItem(){};
        var self = $TextItem = $klass($base, $super, 'TextItem', $TextItem);

        var def = self._proto, $scope = self._scope;

        return nil;
      })(self, $scope.Item);

      (function($base, $super) {
        function $RadioItem(){};
        var self = $RadioItem = $klass($base, $super, 'RadioItem', $RadioItem);

        var def = self._proto, $scope = self._scope;

        def.$value = function() {
          var self = this;

          return self.$native().$value();
        };

        return (def['$value='] = function(bool) {
          var self = this;

          return self.$native()['$value='](bool);
        }, nil) && 'value=';
      })(self, $scope.Item);

      def.$item = function(idx) {
        var $a, $b, TMP_37, self = this, n = nil, type = nil, w = nil;

        n = self.$native().$item(idx);
        type = ($a = ($b = ["TextItem", "RadioItem", "Item"]).$find, $a._p = (TMP_37 = function(t){var self = TMP_37._s || this, $a;
if (t == null) t = nil;
        return n['$is_a?'](((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$const_get(t))}, TMP_37._s = self, TMP_37), $a).call($b);
        return w = self.$class().$const_get(type).$wrap(n);
      };

      def.$add = function(val, o) {
        var $a, $b, $c, TMP_38, $d, TMP_39, self = this, l = nil, ic = nil, idx = nil, item = nil, type = nil, w = nil;

        o = $slice.call(arguments, 1);
        l = ["TextItem", "RadioItem", "Item"];
        if ((($a = ($b = ($c = o['$[]'](0), $c !== false && $c !== nil ?o['$[]'](0)['$is_a?']($scope.Hash) : $c), $b !== false && $b !== nil ?ic = o['$[]'](0)['$[]']("item_class") : $b)) !== nil && (!$a._isBoolean || $a == true))) {
          idx = ($a = ($b = l).$map, $a._p = (TMP_38 = function(k){var self = TMP_38._s || this;
if (k == null) k = nil;
          return (($scope.PBR)._scope.UI)._scope.ListView.$const_get(k)}, TMP_38._s = self, TMP_38), $a).call($b).$index(ic);
          if (idx !== false && idx !== nil) {
            o['$[]'](0)['$[]=']("item_class", ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$const_get(l['$[]'](idx)))};};
        item = ($a = self.$native()).$add.apply($a, [val].concat(o));
        type = ($c = ($d = l).$find, $c._p = (TMP_39 = function(t){var self = TMP_39._s || this, $a;
if (t == null) t = nil;
        return item['$is_a?'](((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$const_get(t))}, TMP_39._s = self, TMP_39), $c).call($d);
        return w = self.$class().$const_get(type).$wrap(item);
      };

      return (def.$items = TMP_40 = function() {
        var $a, $b, TMP_41, self = this, $iter = TMP_40._p, b = $iter || nil;

        TMP_40._p = null;
        return ($a = ($b = self.$indices()).$map, $a._p = (TMP_41 = function(i){var self = TMP_41._s || this, $a, $b, TMP_42, n = nil, type = nil, w = nil;
if (i == null) i = nil;
        n = self.$native().$item(i);
          type = ($a = ($b = ["TextItem", "RadioItem", "Item"]).$find, $a._p = (TMP_42 = function(t){var self = TMP_42._s || this, $a;
if (t == null) t = nil;
          return n['$is_a?'](((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.List.$const_get(t))}, TMP_42._s = self, TMP_42), $a).call($b);
          w = self.$class().$const_get(type).$wrap(n);
          if (b !== false && b !== nil) {
            b.$call(w, i)};
          return w;}, TMP_41._s = self, TMP_41), $a).call($b);
      }, nil) && 'items';
    })(self, (($scope.PBR)._scope.UI)._scope.ListView);

    (function($base, $super) {
      function $Spinner(){};
      var self = $Spinner = $klass($base, $super, 'Spinner', $Spinner);

      var def = self._proto, $scope = self._scope, TMP_43, TMP_44;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      $opal.defs(self, '$constructor', function(o) {
        var self = this;

        o = $slice.call(arguments, 0);
        return self.$raise("NotImplemented");
      });

      def['$step='] = function(amt) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$min='] = function(val) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$max='] = function(val) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$min = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$max = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$digits='] = function(amt) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$digits = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$value='] = function(val) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$value = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$on_change = TMP_43 = function() {
        var $a, $b, self = this, $iter = TMP_43._p, b = $iter || nil;

        TMP_43._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "value-changed", "value");
      };

      return (def.$on_activate = TMP_44 = function() {
        var $a, $b, self = this, $iter = TMP_44._p, b = $iter || nil;

        TMP_44._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "activate", "value");
      }, nil) && 'on_activate';
    })(self, (($scope.PBR)._scope.UI)._scope.Spinner);

    (function($base, $super) {
      function $ScrolledView(){};
      var self = $ScrolledView = $klass($base, $super, 'ScrolledView', $ScrolledView);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.ScrolledWindow.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.ScrolledView);

    (function($base, $super) {
      function $Label(){};
      var self = $Label = $klass($base, $super, 'Label', $Label);

      var def = self._proto, $scope = self._scope, TMP_45;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      $opal.defs(self, '$constructor', TMP_45 = function(wrapped, opts) {
        var $a, $b, $c, self = this, $iter = TMP_45._p, b = $iter || nil, align = nil, n = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_45._p = null;
        align = ($a = "align", $b = opts, ((($c = $b['$[]']($a)) !== false && $c !== nil) ? $c : $b['$[]=']($a, "left")));
        n = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Label.$new();
        n['$align='](align);
        return n;
      });

      def['$align='] = function(pos) {
        var self = this;

        return self.$native()['$align='](pos);
      };

      def['$text='] = function(txt) {
        var self = this;

        return self.$native()['$text='](txt);
      };

      return (def.$text = function() {
        var self = this;

        return self.$native().$text();
      }, nil) && 'text';
    })(self, (($scope.PBR)._scope.UI)._scope.Label);

    (function($base, $super) {
      function $Entry(){};
      var self = $Entry = $klass($base, $super, 'Entry', $Entry);

      var def = self._proto, $scope = self._scope, TMP_46, TMP_47, TMP_48;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Iconable);

      $opal.defs(self, '$constructor', TMP_46 = function(wrapped, opts) {
        var $a, self = this, $iter = TMP_46._p, b = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_46._p = null;
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Entry.$new();
      });

      def.$initialize = TMP_47 = function(opts) {var $zuper = $slice.call(arguments, 0);
        var $a, self = this, $iter = TMP_47._p, $yield = $iter || nil, icon_pos = nil, theme = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_47._p = null;
        icon_pos = opts.$delete("icon_position");
        theme = opts.$delete("theme");
        $opal.find_super_dispatcher(self, 'initialize', TMP_47, $iter).apply(self, $zuper);
        if (theme !== false && theme !== nil) {
          self.$raise("NotImplemented: `Image#theme=`");
          ((($a = icon_pos) !== false && $a !== nil) ? $a : icon_pos = ((($scope.PBR)._scope.UI)._scope.IconLocation)._scope.LEFT);};
        if (icon_pos !== false && icon_pos !== nil) {
          return self.$modify($hash2(["icon_position"], {"icon_position": icon_pos}))
          } else {
          return nil
        };
      };

      def.$text = function() {
        var self = this;

        return self.$native().$text();
      };

      def['$text='] = function(txt) {
        var self = this;

        return self.$native()['$text='](txt);
      };

      return (def.$on_activate = TMP_48 = function() {
        var $a, $b, self = this, $iter = TMP_48._p, b = $iter || nil;

        TMP_48._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "activate", "text");
      }, nil) && 'on_activate';
    })(self, (($scope.PBR)._scope.UI)._scope.Entry);

    (function($base, $super) {
      function $Toolbar(){};
      var self = $Toolbar = $klass($base, $super, 'Toolbar', $Toolbar);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this, n = nil;

        o = $slice.call(arguments, 0);
        n = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Toolbar.$new();
        return n;
      });

      return (def.$add = function(widget) {
        var self = this;

        return self.$raise("NotImplemented");
      }, nil) && 'add';
    })(self, (($scope.PBR)._scope.UI)._scope.Toolbar);

    (function($base, $super) {
      function $ToolItem(){};
      var self = $ToolItem = $klass($base, $super, 'ToolItem', $ToolItem);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this;

        o = $slice.call(arguments, 0);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.ToolItem.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.ToolItem);

    (function($base, $super) {
      function $SeparatorToolItem(){};
      var self = $SeparatorToolItem = $klass($base, $super, 'SeparatorToolItem', $SeparatorToolItem);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      return ($opal.defs(self, '$constructor', function(o) {
        var $a, self = this, n = nil;

        o = $slice.call(arguments, 0);
        return n = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.SeparatorToolItem.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.SeparatorToolItem);

    (function($base, $super) {
      function $ToolButton(){};
      var self = $ToolButton = $klass($base, $super, 'ToolButton', $ToolButton);

      var def = self._proto, $scope = self._scope, TMP_49, TMP_50;

      def.image = nil;
      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      $opal.defs(self, '$constructor', function(o) {
        var $a, self = this, n = nil;

        o = $slice.call(arguments, 0);
        return n = ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.ToolButton.$new();
      });

      def.$initialize = TMP_49 = function(opts) {
        var $a, self = this, $iter = TMP_49._p, $yield = $iter || nil, i_opts = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_49._p = null;
        i_opts = $hash2(["size"], {"size": [24, 24]});
        if ((($a = opts['$[]']("file")) !== nil && (!$a._isBoolean || $a == true))) {
          i_opts['$[]=']("file", opts.$delete("file"))};
        if ((($a = opts['$[]']("src")) !== nil && (!$a._isBoolean || $a == true))) {
          i_opts['$[]=']("src", opts.$delete("src"))};
        if ((($a = opts['$[]']("size")) !== nil && (!$a._isBoolean || $a == true))) {
          i_opts['$[]=']("size", opts.$delete("size"))};
        if ((($a = opts['$[]']("theme")) !== nil && (!$a._isBoolean || $a == true))) {
          i_opts['$[]=']("theme", opts.$delete("theme"))};
        if ((($a = i_opts['$[]']("theme")) !== nil && (!$a._isBoolean || $a == true))) {
          i_opts.$delete("size")};
        $opal.find_super_dispatcher(self, 'initialize', TMP_49, null).apply(self, [opts]);
        self.image = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.Image.$new(i_opts);
        return self.$raise("NotImplemented");
      };

      def.$image = function(o) {
        var $a, self = this;

        if (o == null) {
          o = nil
        }
        if (o !== false && o !== nil) {
          } else {
          return self.image
        };
        if ((($a = o['$is_a?']($scope.Hash)) !== nil && (!$a._isBoolean || $a == true))) {
          self.image.$modify(o)};
        return true;
      };

      def.$label = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$label='] = function(txt) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      return (def.$on_click = TMP_50 = function() {
        var $a, $b, self = this, $iter = TMP_50._p, b = $iter || nil;

        TMP_50._p = null;
        return ($a = ($b = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent).$connect, $a._p = b.$to_proc(), $a).call($b, self, "clicked");
      }, nil) && 'on_click';
    })(self, (($scope.PBR)._scope.UI)._scope.ToolButton);

    $opal.defs(self, '$get_icon_theme', function(widget) {
      var $a, self = this, name = nil, size = nil, prepend = nil, $case = nil;

      $a = $opal.to_ary(self.$raise("NotImplemented")), name = ($a[0] == null ? nil : $a[0]), size = ($a[1] == null ? nil : $a[1]);
      prepend = (function() {$case = size;if ((((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.MENU['$===']($case)) {return ((($scope.PBR)._scope.UI)._scope.IconSize)._scope.MENU}else if ((((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.BUTTON['$===']($case)) {return ((($scope.PBR)._scope.UI)._scope.IconSize)._scope.BUTTON}else if ((((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.SMALL_TOOLBAR['$===']($case)) {return ((($scope.PBR)._scope.UI)._scope.IconSize)._scope.TOOLBAR}else if ((((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.LARGE_TOOLBAR['$===']($case)) {return ((($scope.PBR)._scope.UI)._scope.IconSize)._scope.TOOLBAR_BIG}else if ((((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.DIALOG['$===']($case)) {return ((($scope.PBR)._scope.UI)._scope.IconSize)._scope.LARGE}else { return nil }})();
      return prepend['$+']("-")['$+'](name);
    });

    $opal.defs(self, '$icon_from_theme', function(theme) {
      var $a, self = this, raw = nil, size = nil, name = nil, native_size = nil, $case = nil;

      raw = theme.$split("-");
      size = raw.$shift();
      name = raw.$join("-");
      native_size = (function() {$case = size;if (((($scope.PBR)._scope.UI)._scope.IconSize)._scope.MENU['$===']($case)) {return (((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.MENU}else if (((($scope.PBR)._scope.UI)._scope.IconSize)._scope.LARGE['$===']($case)) {return (((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.DIALOG}else if (((($scope.PBR)._scope.UI)._scope.IconSize)._scope.TOOLBAR['$===']($case)) {return (((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.SMALL_TOOLBAR}else if (((($scope.PBR)._scope.UI)._scope.IconSize)._scope.TOOLBAR_BIG['$===']($case)) {return (((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.LARGE_TOOLBAR}else if (((($scope.PBR)._scope.UI)._scope.IconSize)._scope.BUTTON['$===']($case)) {return (((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.IconSize)._scope.BUTTON}else { return nil }})();
      return [name, native_size];
    });

    (function($base, $super) {
      function $Image(){};
      var self = $Image = $klass($base, $super, 'Image', $Image);

      var def = self._proto, $scope = self._scope, TMP_51, TMP_52;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      $opal.defs(self, '$constructor', TMP_51 = function(o) {
        var $a, self = this, $iter = TMP_51._p, b = $iter || nil;

        o = $slice.call(arguments, 0);
        TMP_51._p = null;
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Image.$new();
      });

      def.$initialize = TMP_52 = function(opts) {
        var $a, $b, TMP_53, self = this, $iter = TMP_52._p, $yield = $iter || nil, o = nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_52._p = null;
        o = opts;
        opts = $hash2([], {});
        $opal.find_super_dispatcher(self, 'initialize', TMP_52, null).apply(self, [opts]);
        if ((($a = o['$[]']("theme")) !== nil && (!$a._isBoolean || $a == true))) {
          self['$theme='](o['$[]']("theme"))
          } else {
          self.$raise("NotImplemented")
        };
        return ($a = ($b = o).$each_pair, $a._p = (TMP_53 = function(k, v){var self = TMP_53._s || this;
if (k == null) k = nil;if (v == null) v = nil;
        return self.$send(("" + k.$to_s() + "="), v)}, TMP_53._s = self, TMP_53), $a).call($b);
      };

      def.$theme = function() {
        var self = this;

        return (($scope.PBR)._scope.UI)._scope.Opal.$get_icon_theme(self);
      };

      def['$theme='] = function(theme) {
        var $a, self = this, name = nil, size = nil;

        $a = $opal.to_ary((($scope.PBR)._scope.UI)._scope.Opal.$icon_from_theme(theme)), name = ($a[0] == null ? nil : $a[0]), size = ($a[1] == null ? nil : $a[1]);
        return self.$raise("NotImplemented");
      };

      def['$src='] = function(src) {
        var self = this;

        return self.$native()['$src='](src);
      };

      def['$file='] = function(file) {
        var self = this;

        self.$raise("NotImplemented");
        return self;
      };

      def['$size='] = function(size) {
        var self = this;

        self.$native()['$size='](size);
        return size;
      };

      def.$size = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$width = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$height = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$height='] = function(h) {
        var self = this;

        return self.$native()['$height='](h);
      };

      return (def['$width='] = function(w) {
        var self = this;

        return self.$native()['$width='](w);
      }, nil) && 'width=';
    })(self, (($scope.PBR)._scope.UI)._scope.Image);

    (function($base) {
      var self = $module($base, 'Book');

      var def = self._proto, $scope = self._scope, TMP_56;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

      (function($base) {
        var self = $module($base, 'Page');

        var def = self._proto, $scope = self._scope;

        self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

        self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Container);

        $opal.defs(self, '$included', function(q) {
          var TMP_54, self = this;

          return ($opal.defs(q, '$constructor', TMP_54 = function(wrapped, opts) {
            var self = this, $iter = TMP_54._p, b = $iter || nil;

            if (opts == null) {
              opts = $hash2([], {})
            }
            TMP_54._p = null;
            return self.$raise("NotImplemented");
          }), nil) && 'constructor';
        });
        
      })(self);

      $opal.defs(self, '$included', function(q) {
        var TMP_55, self = this;

        return ($opal.defs(q, '$constructor', TMP_55 = function(o) {
          var $a, self = this, $iter = TMP_55._p, b = $iter || nil;

          o = $slice.call(arguments, 0);
          TMP_55._p = null;
          return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.Notebook.$new();
        }), nil) && 'constructor';
      });

      def.$add = function(widget) {
        var self = this, pg = nil;

        pg = self.$nice_child(widget);
        self.$native().$append_page(pg.$native(), pg.$send("get_tab"));
        return pg;
      };

      def.$page = function() {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def['$page='] = function(pg) {
        var self = this;

        return self.$raise("NotImplemented");
      };

      def.$on_page_changed = TMP_56 = function() {
        var $a, $b, TMP_57, self = this, $iter = TMP_56._p, b = $iter || nil;

        TMP_56._p = null;
        return ($a = ($b = self.$native()).$signal_connect, $a._p = (TMP_57 = function(pg, n, o){var self = TMP_57._s || this, $a, evt = nil;
if (pg == null) pg = nil;if (n == null) n = nil;o = $slice.call(arguments, 2);
        evt = ((($scope.PBR)._scope.UI)._scope.Opal)._scope.GenericEvent.$new(self, n);
          b.$call(evt);
          if ((($a = evt['$veto?']()) !== nil && (!$a._isBoolean || $a == true))) {
            self.$raise("NotImplemented");
            return false;;};
          return evt['$stop?']()['$!']()['$!']();;}, TMP_57._s = self, TMP_57), $a).call($b, "switch-page");
      };
            ;$opal.donate(self, ["$add", "$page", "$page=", "$on_page_changed"]);
    })(self);

    (function($base, $super) {
      function $Notebook(){};
      var self = $Notebook = $klass($base, $super, 'Notebook', $Notebook);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Book);

      return (function($base, $super) {
        function $Page(){};
        var self = $Page = $klass($base, $super, 'Page', $Page);

        var def = self._proto, $scope = self._scope, TMP_59;

        self.$include((((($scope.PBR)._scope.UI)._scope.Opal)._scope.Book)._scope.Page);

        (function($base, $super) {
          function $Tab(){};
          var self = $Tab = $klass($base, $super, 'Tab', $Tab);

          var def = self._proto, $scope = self._scope, TMP_58;

          self.$attr_reader("label", "close", "image");

          return (def.$initialize = TMP_58 = function(opts) {var $zuper = $slice.call(arguments, 0);
            var self = this, $iter = TMP_58._p, $yield = $iter || nil;

            if (opts == null) {
              opts = $hash2([], {})
            }
            TMP_58._p = null;
            return $opal.find_super_dispatcher(self, 'initialize', TMP_58, $iter).apply(self, $zuper);
          }, nil) && 'initialize';
        })(self, ((($scope.PBR)._scope.UI)._scope.Opal)._scope.Flow);

        def.$initialize = TMP_59 = function(book, opts) {
          var self = this, $iter = TMP_59._p, $yield = $iter || nil, l = nil;

          if (opts == null) {
            opts = $hash2([], {})
          }
          TMP_59._p = null;
          l = opts['$[]']("label");
          opts.$delete("label");
          return $opal.find_super_dispatcher(self, 'initialize', TMP_59, null).apply(self, [book, opts]);
        };

        def['$label='] = function(txt) {
          var self = this;

          return nil;
        };

        return (def.$image = function(opts) {
          var self = this;

          if (opts == null) {
            opts = nil
          }
          return nil;
        }, nil) && 'image';
      })(self, ((($scope.PBR)._scope.UI)._scope.Notebook)._scope.Page);
    })(self, (($scope.PBR)._scope.UI)._scope.Notebook);

    (function($base, $super) {
      function $ComboBox(){};
      var self = $ComboBox = $klass($base, $super, 'ComboBox', $ComboBox);

      var def = self._proto, $scope = self._scope, TMP_60;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      return ($opal.defs(self, '$constructor', TMP_60 = function(wrapped, opts) {
        var $a, self = this, $iter = TMP_60._p, b = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_60._p = null;
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.ComboBox.$new();
      }), nil) && 'constructor';
    })(self, (($scope.PBR)._scope.UI)._scope.ComboBox);

    (function($base, $super) {
      function $TextView(){};
      var self = $TextView = $klass($base, $super, 'TextView', $TextView);

      var def = self._proto, $scope = self._scope, TMP_61;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      $opal.defs(self, '$constructor', function(wrapper, o) {
        var $a, self = this;

        o = $slice.call(arguments, 1);
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.TextView.$new();
      });

      def.$initialize = TMP_61 = function(opts) {
        var self = this, $iter = TMP_61._p, $yield = $iter || nil;

        if (opts == null) {
          opts = $hash2([], {})
        }
        TMP_61._p = null;
        return $opal.find_super_dispatcher(self, 'initialize', TMP_61, null).apply(self, [opts]);
      };

      def.$text = function() {
        var self = this;

        return self.$native().$text();
      };

      def['$text='] = function(txt) {
        var self = this;

        return self.$native()['$text='](txt);
      };

      def.$undo = function() {
        var self = this;

        return self.$cmd("undo");
      };

      def.$redo = function() {
        var self = this;

        return self.$cmd("redo");
      };

      def['$font_size='] = function(size) {
        var self = this;

        return self.$cmd("FontSize", size);
      };

      def.$cut = function() {
        var self = this;

        return self.$cmd("cut");
      };

      def.$copy = function() {
        var self = this;

        return self.$cmd("copy");
      };

      def.$paste = function() {
        var self = this;

        return self.$cmd("paste");
      };

      def.$delete = function() {
        var self = this;

        return self.$cmd("delete");
      };

      def.$bold = function() {
        var self = this;

        return self.$cmd("bold");
      };

      def.$underline = function() {
        var self = this;

        return self.$cmd("underline");
      };

      def.$italic = function() {
        var self = this;

        return self.$cmd("italic");
      };

      def.$strikethrough = function() {
        var self = this;

        return self.$cmd("strikethrough");
      };

      def.$indent = function() {
        var self = this;

        return self.$cmd("indent");
      };

      def.$outdent = function() {
        var self = this;

        return self.$cmd("outdent");
      };

      def.$selection = function() {
        var self = this;

        self.$raise("NotImplemented");
        self.$native().$execute_script("t = document.getSelection(); document.getElementById('selection').innerText=t;");
        return self.$document().$get_element_by_id("selection").$get_inner_text();
      };

      def.$insert = function(pos, txt) {
        var self = this, code = nil;

        self.$raise("NotImplemented");
        self.$set_caret(pos);
        code = "\nfunction pasteHtmlAtCaret(html) {\n    var sel, range;\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // only relatively recently standardized and is not supported in\n            // some browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n"['$+']("\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n}\n")['$+']("pasteHtmlAtCaret(\"" + (txt) + "\");\n");
        return self.$native().$execute_script(code);
      };

      def.$prepend = function(txt) {
        var self = this;

        return self.$insert(0, txt);
      };

      def.$append_txt = function() {
        var self = this;

        return nil;
      };

      def['$unmodified='] = function(bool) {
        var self = this;

        self.$raise("NotImplemented");
        if (bool !== false && bool !== nil) {
          self._debounce = false;
          return self.save = self.$internal().$get_inner_html();
          } else {
          return nil
        };
      };

      def['$modified?'] = function() {
        var self = this;

        return self.$check_modify();
      };

      return (def['$src='] = function(src) {
        var $a, $b, TMP_62, self = this;

        return ($a = ($b = $scope.PBR).$http_request, $a._p = (TMP_62 = function(resp){var self = TMP_62._s || this;
if (resp == null) resp = nil;
        self['$text='](resp.$body());
          return self.$source_loaded();}, TMP_62._s = self, TMP_62), $a).call($b, src);
      }, nil) && 'src=';
    })(self, (($scope.PBR)._scope.UI)._scope.TextView);

    (function($base, $super) {
      function $ToggleButton(){};
      var self = $ToggleButton = $klass($base, $super, 'ToggleButton', $ToggleButton);

      var def = self._proto, $scope = self._scope;

      self.$include(((($scope.PBR)._scope.UI)._scope.Opal)._scope.Widget);

      $opal.defs(self, '$constructor', function(opts) {
        var $a, self = this;

        if (opts == null) {
          opts = $hash2([], {})
        }
        return ((($a = $opal.Object._scope.UI) == null ? $opal.cm('UI') : $a))._scope.ToggleButton.$new();
      });

      def['$on?'] = function() {
        var self = this;

        return self.$native()['$on?']();
      };

      return (def['$off?'] = function() {
        var self = this;

        return self.$native()['$off?']();
      }, nil) && 'off?';
    })(self, (($scope.PBR)._scope.UI)._scope.Widget);
    
  })(($scope.PBR)._scope.UI)
})(Opal);
/* Generated by Opal 0.6.2 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice;

  $opal.add_stubs([]);
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  ;
  return true;
})(Opal);
